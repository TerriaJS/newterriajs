diff --color -bur --ex ./lib/CopyrightModule.js ./lib/CopyrightModule.js
--- ./lib/CopyrightModule.js	2024-12-18 14:25:56
+++ ./lib/CopyrightModule.js	2024-11-19 14:44:42
@@ -1,6 +1,6 @@
 /**
  * @license
- * Copyright(c) 2014-2024 Terria Pty Ltd.
+ * Copyright(c) 2012-2014 National ICT Australia Limited (NICTA).
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -15,4 +15,4 @@
  * limitations under the License.
  *
  */
-export default {};
+module.exports = {};
diff --color -bur --ex ./lib/Core/AsyncLoader.ts ./lib/Core/AsyncLoader.ts
--- ./lib/Core/AsyncLoader.ts	2024-12-18 14:25:56
+++ ./lib/Core/AsyncLoader.ts	2024-11-19 14:44:42
@@ -150,7 +150,7 @@
    * `load(true)`.
    */
   @action
-  dispose(): void {
+  dispose() {
     this._forceReloadCount = -1;
     this.load();
   }
Only in ./lib/Core: ConsoleAnalytics.d.ts
Only in ./lib/Core: ConsoleAnalytics.js
Only in ./lib/Core: ConsoleAnalytics.ts
diff --color -bur --ex ./lib/Core/CorsProxy.ts ./lib/Core/CorsProxy.ts
--- ./lib/Core/CorsProxy.ts	2024-12-18 14:25:56
+++ ./lib/Core/CorsProxy.ts	2024-11-19 14:44:42
@@ -65,7 +65,7 @@
     serverConfig: any,
     baseProxyUrl: string = CorsProxy.DEFAULT_BASE_PROXY_PATH,
     proxyDomains: string[] = []
-  ): void {
+  ) {
     if (serverConfig !== null && serverConfig !== undefined) {
       this.isOpenProxy = !!serverConfig.proxyAllDomains;
       // ignore client list of allowed proxies in favour of definitive server list.
@@ -110,11 +110,11 @@
    *       the cache headers with. E.g. '2d' for 2 days.
    * @returns The proxied URL
    */
-  getURL(resource: string, proxyFlag?: string): string {
+  getURL(resource: string, proxyFlag?: string) {
     return this.getProxyBaseURL(proxyFlag) + resource;
   }
 
-  getProxyBaseURL(proxyFlag: string | undefined): string {
+  getProxyBaseURL(proxyFlag: string | undefined) {
     const flag = proxyFlag === undefined ? "" : "_" + proxyFlag + "/";
     return this.baseProxyUrl + flag;
   }
@@ -132,7 +132,7 @@
    *       the cache headers with. E.g. '2d' for 2 days.
    * @returns Either the URL passed in or a proxied URL if it should be proxied.
    */
-  getURLProxyIfNecessary(resource: string, proxyFlag?: string): string {
+  getURLProxyIfNecessary(resource: string, proxyFlag?: string) {
     if (this.shouldUseProxy(resource)) {
       return this.getURL(resource, proxyFlag);
     }
diff --color -bur --ex ./lib/Core/GoogleAnalytics.ts ./lib/Core/GoogleAnalytics.ts
--- ./lib/Core/GoogleAnalytics.ts	2024-12-18 14:25:56
+++ ./lib/Core/GoogleAnalytics.ts	2024-11-19 14:44:42
@@ -1,3 +1,5 @@
+"use strict";
+
 import i18next from "i18next";
 import ReactGA from "react-ga4";
 import { Analytics, ConfigParameters } from "../Models/Terria";
@@ -12,7 +14,7 @@
   key: string | undefined = undefined;
   options: any = undefined;
 
-  start(configParameters: GoogleAnalyticsConfigParameters): void {
+  start(configParameters: GoogleAnalyticsConfigParameters) {
     this.key = configParameters.googleAnalyticsKey;
     this.options = configParameters.googleAnalyticsOptions;
 
@@ -22,12 +24,7 @@
     initializeGoogleAnalytics(this);
   }
 
-  logEvent(
-    category: string,
-    action: string,
-    label?: string,
-    value?: number
-  ): void {
+  logEvent(category: string, action: string, label?: string, value?: number) {
     const fieldObject: any = {
       hitType: "event",
       eventCategory: category,
diff --color -bur --ex ./lib/Core/Result.ts ./lib/Core/Result.ts
--- ./lib/Core/Result.ts	2024-12-18 14:25:56
+++ ./lib/Core/Result.ts	2024-11-19 14:44:42
@@ -93,7 +93,7 @@
   }
 
   /** Convenience constructor to return a Result with no value (and potentially an error) */
-  static none(error?: unknown, overrides?: TerriaErrorOverrides): Result {
+  static none(error?: unknown, overrides?: TerriaErrorOverrides) {
     return error ? Result.error(error, overrides) : new Result(undefined);
   }
 
@@ -147,7 +147,7 @@
    *
    * @param errorOverrides can be used to add error context
    */
-  logError(errorOverrides?: TerriaErrorOverrides): T {
+  logError(errorOverrides?: TerriaErrorOverrides) {
     if (this._error) TerriaError.from(this._error, errorOverrides).log();
     return this.value;
   }
@@ -193,7 +193,7 @@
         });
   }
 
-  pushErrorTo(errors: TerriaError[], errorOverrides?: TerriaErrorOverrides): T {
+  pushErrorTo(errors: TerriaError[], errorOverrides?: TerriaErrorOverrides) {
     if (this._error) errors.push(TerriaError.from(this._error, errorOverrides));
     return this.value;
   }
diff --color -bur --ex ./lib/Core/ServerConfig.js ./lib/Core/ServerConfig.js
--- ./lib/Core/ServerConfig.js	2024-12-18 14:25:56
+++ ./lib/Core/ServerConfig.js	2024-11-19 14:44:42
@@ -1,8 +1,8 @@
-import i18next from "i18next";
-import defaultValue from "terriajs-cesium/Source/Core/defaultValue";
-import loadJson from "./loadJson";
+const i18next = require("i18next").default;
+var defaultValue = require("terriajs-cesium/Source/Core/defaultValue").default;
+var loadJson = require("./loadJson").default;
 
-const DEFAULT_URL = "serverconfig/";
+var DEFAULT_URL = "serverconfig/";
 /**
  * Provides information about the configuration of the Terria server, by querying /serverconfig
  */
@@ -38,7 +38,7 @@
       that.config = config;
       return that.config;
     })
-    .catch(function (_e) {
+    .catch(function (e) {
       console.error(
         i18next.t("core.serverConfig.failedToGet", {
           serverConfigUrl: that.serverConfigUrl
diff --color -bur --ex ./lib/Core/TerriaError.ts ./lib/Core/TerriaError.ts
--- ./lib/Core/TerriaError.ts	2024-12-18 14:25:56
+++ ./lib/Core/TerriaError.ts	2024-11-19 14:44:42
@@ -1,3 +1,5 @@
+"use strict";
+
 import i18next from "i18next";
 import { observable, makeObservable } from "mobx";
 import RequestErrorEvent from "terriajs-cesium/Source/Core/RequestErrorEvent";
@@ -323,7 +325,7 @@
   }
 
   /** Print error to console */
-  log(): void {
+  log() {
     this.resolvedSeverity === TerriaErrorSeverity.Warning
       ? console.warn(this.toString())
       : console.error(this.toString());
@@ -465,7 +467,7 @@
     terria: Terria,
     errorOverrides?: TerriaErrorOverrides,
     forceRaiseToUser?: boolean
-  ): void {
+  ) {
     terria.raiseErrorToUser(this, errorOverrides, forceRaiseToUser);
   }
 }
Only in ./lib/Core: arrayProduct.js
diff --color -bur --ex ./lib/Core/autoUpdate.ts ./lib/Core/autoUpdate.ts
--- ./lib/Core/autoUpdate.ts	2024-12-18 14:25:56
+++ ./lib/Core/autoUpdate.ts	2024-11-19 14:44:42
@@ -9,7 +9,7 @@
 
 export default function autoUpdate(updater: (...args: any[]) => void) {
   return function (
-    _target: any,
+    target: any,
     propertyName: string,
     property: PropertyDescriptor
   ) {
Only in ./lib/Core: closeWhenEscapeIsPressed.js
Only in ./lib/Core: combineData.js
Only in ./lib/Core: combineFilters.js
Only in ./lib/Core: createFragmentFromTemplate.js
diff --color -bur --ex ./lib/Core/flatten.ts ./lib/Core/flatten.ts
--- ./lib/Core/flatten.ts	2024-12-18 14:25:56
+++ ./lib/Core/flatten.ts	2024-11-19 14:44:42
@@ -1,3 +1,5 @@
+"use strict";
+
 /**
  * Flattens an array of arrays, into an array, eg. [[0, 1], [2, 3], [4, 5]] => [0, 1, 2, 3, 4, 5].
  * Based on the example at
diff --color -bur --ex ./lib/Core/flattenNested.ts ./lib/Core/flattenNested.ts
--- ./lib/Core/flattenNested.ts	2024-12-18 14:25:56
+++ ./lib/Core/flattenNested.ts	2024-11-19 14:44:42
@@ -1,3 +1,5 @@
+"use strict";
+
 type NestedArray<T> = NestedArray<T>[] | T[];
 
 /**
Only in ./lib/Core: inherit.js
Only in ./lib/Core: isBrowserCompatible.js
Only in ./lib/Core: isCommonMobilePlatform.js
diff --color -bur --ex ./lib/Core/loadWithXhr.js ./lib/Core/loadWithXhr.js
--- ./lib/Core/loadWithXhr.js	2024-12-18 14:25:56
+++ ./lib/Core/loadWithXhr.js	2024-11-19 14:44:42
@@ -1,5 +1,6 @@
-import defaultValue from "terriajs-cesium/Source/Core/defaultValue";
-import Resource from "terriajs-cesium/Source/Core/Resource";
+const defaultValue =
+  require("terriajs-cesium/Source/Core/defaultValue").default;
+const Resource = require("terriajs-cesium/Source/Core/Resource").default;
 
 function loadWithXhr(options) {
   // Take advantage that most parameters are the same
Only in ./lib/Core: printWindow.ts
Only in ./lib/Core: promiseFunctionToExplicitDeferred.js
Only in ./lib/Core: rectangleToPolygonArray.js
Only in ./lib/Core: removeView.js
Only in ./lib/Core: serializeToJson.js
diff --color -bur --ex ./lib/Core/sortedIndices.js ./lib/Core/sortedIndices.js
--- ./lib/Core/sortedIndices.js	2024-12-18 14:25:56
+++ ./lib/Core/sortedIndices.js	2024-11-19 14:44:42
@@ -1,3 +1,5 @@
+"use strict";
+
 /**
  * Returns indices such that array[indices[i]] = sortedArray[i].
  * Eg. sortedIndices(['c', 'a', 'b', 'd']) => [1, 2, 0, 3]. (The sorted array is [a, b, c, d], and "a" was in position 1, "b" in position 2, etc.)
@@ -32,4 +34,4 @@
 //     expect(inverseIndices).toEqual([2, 0, 1, 3]);
 // });
 
-export default sortedIndices;
+module.exports = sortedIndices;
diff --color -bur --ex ./lib/Core/supportsWebGL.js ./lib/Core/supportsWebGL.js
--- ./lib/Core/supportsWebGL.js	2024-12-18 14:25:56
+++ ./lib/Core/supportsWebGL.js	2024-11-19 14:44:42
@@ -1,7 +1,9 @@
-import defined from "terriajs-cesium/Source/Core/defined";
+"use strict";
 
-let result;
+var defined = require("terriajs-cesium/Source/Core/defined").default;
 
+var result;
+
 /**
  * Determines if the current browser supports WebGL.
  * @return {Boolean|String} False if WebGL is not supported at all, 'slow' if WebGL is supported
@@ -53,4 +55,4 @@
   return result;
 }
 
-export default supportsWebGL;
+module.exports = supportsWebGL;
diff --color -bur --ex ./lib/Core/triggerResize.ts ./lib/Core/triggerResize.ts
--- ./lib/Core/triggerResize.ts	2024-12-18 14:25:56
+++ ./lib/Core/triggerResize.ts	2024-11-19 14:44:42
@@ -4,7 +4,7 @@
 export default function triggerResize() {
   try {
     window.dispatchEvent(new Event("resize"));
-  } catch (_e) {
+  } catch (e) {
     const evt = window.document.createEvent("UIEvents");
     evt.initUIEvent("resize", true, false, window, 0);
     window.dispatchEvent(evt);
Only in ./lib/Core: updateFromJson.js
Only in ./lib/Map/Cesium: createCredit.js
diff --color -bur --ex ./lib/Map/DragPoints/CesiumDragPoints.js ./lib/Map/DragPoints/CesiumDragPoints.js
--- ./lib/Map/DragPoints/CesiumDragPoints.js	2024-12-18 14:25:56
+++ ./lib/Map/DragPoints/CesiumDragPoints.js	2024-11-19 14:44:42
@@ -1,8 +1,13 @@
-import defined from "terriajs-cesium/Source/Core/defined";
-import ScreenSpaceEventHandler from "terriajs-cesium/Source/Core/ScreenSpaceEventHandler";
-import ScreenSpaceEventType from "terriajs-cesium/Source/Core/ScreenSpaceEventType";
-import CustomDataSource from "terriajs-cesium/Source/DataSources/CustomDataSource";
+"use strict";
 
+var defined = require("terriajs-cesium/Source/Core/defined").default;
+var ScreenSpaceEventHandler =
+  require("terriajs-cesium/Source/Core/ScreenSpaceEventHandler").default;
+var ScreenSpaceEventType =
+  require("terriajs-cesium/Source/Core/ScreenSpaceEventType").default;
+var CustomDataSource =
+  require("terriajs-cesium/Source/DataSources/CustomDataSource").default;
+
 /**
  * Callback for when a point is moved.
  * @callback PointMovedCallback
@@ -18,7 +23,7 @@
  * @param {Terria} terria The Terria instance.
  * @param {PointMovedCallback} pointMovedCallback A function that is called when a point is moved.
  */
-const CesiumDragPoints = function (terria, pointMovedCallback) {
+var CesiumDragPoints = function (terria, pointMovedCallback) {
   this._terria = terria;
   this._setUp = false;
   this.type = "Cesium";
@@ -159,4 +164,4 @@
   this._scene.screenSpaceCameraController.enableTranslate = state;
 };
 
-export default CesiumDragPoints;
+module.exports = CesiumDragPoints;
diff --color -bur --ex ./lib/Map/DragPoints/DragPoints.js ./lib/Map/DragPoints/DragPoints.js
--- ./lib/Map/DragPoints/DragPoints.js	2024-12-18 14:25:56
+++ ./lib/Map/DragPoints/DragPoints.js	2024-11-19 14:44:42
@@ -1,7 +1,7 @@
-import defined from "terriajs-cesium/Source/Core/defined";
-import CesiumDragPoints from "./CesiumDragPoints";
-import LeafletDragPoints from "./LeafletDragPoints";
-import ViewerMode from "../../Models/ViewerMode";
+var defined = require("terriajs-cesium/Source/Core/defined").default;
+var CesiumDragPoints = require("./CesiumDragPoints");
+var LeafletDragPoints = require("./LeafletDragPoints");
+var ViewerMode = require("../../Models/ViewerMode").default;
 
 /**
  * Callback for when a point is moved.
diff --color -bur --ex ./lib/Map/DragPoints/LeafletDragPoints.js ./lib/Map/DragPoints/LeafletDragPoints.js
--- ./lib/Map/DragPoints/LeafletDragPoints.js	2024-12-18 14:25:56
+++ ./lib/Map/DragPoints/LeafletDragPoints.js	2024-11-19 14:44:42
@@ -1,6 +1,8 @@
-import defined from "terriajs-cesium/Source/Core/defined";
-import Cartesian3 from "terriajs-cesium/Source/Core/Cartesian3";
-import CustomDataSource from "terriajs-cesium/Source/DataSources/CustomDataSource";
+"use strict";
+var defined = require("terriajs-cesium/Source/Core/defined").default;
+var Cartesian3 = require("terriajs-cesium/Source/Core/Cartesian3").default;
+var CustomDataSource =
+  require("terriajs-cesium/Source/DataSources/CustomDataSource").default;
 
 /**
  * Callback for when a point is moved.
@@ -17,7 +19,7 @@
  * @param {Terria} terria The Terria instance.
  * @param {PointMovedCallback} pointMovedCallback A function that is called when a point is moved.
  */
-const LeafletDragPoints = function (terria, pointMovedCallback) {
+var LeafletDragPoints = function (terria, pointMovedCallback) {
   this._terria = terria;
   this._setUp = false;
   this.type = "Leaflet";
@@ -158,4 +160,4 @@
   this._setUp = false;
 };
 
-export default LeafletDragPoints;
+module.exports = LeafletDragPoints;
Only in ./lib/Map: Geocoder
diff --color -bur --ex ./lib/Map/ImageryProvider/ArcGisImageServerImageryProvider.ts ./lib/Map/ImageryProvider/ArcGisImageServerImageryProvider.ts
--- ./lib/Map/ImageryProvider/ArcGisImageServerImageryProvider.ts	2024-12-18 14:25:56
+++ ./lib/Map/ImageryProvider/ArcGisImageServerImageryProvider.ts	2024-11-19 14:44:42
@@ -171,9 +171,9 @@
   }
 
   async pickFeatures(
-    _x: number,
-    _y: number,
-    _level: number,
+    x: number,
+    y: number,
+    level: number,
     longitude: number,
     latitude: number
   ): Promise<ImageryLayerFeatureInfo[]> {
diff --color -bur --ex ./lib/Map/ImageryProvider/ProtomapsImageryProvider.ts ./lib/Map/ImageryProvider/ProtomapsImageryProvider.ts
--- ./lib/Map/ImageryProvider/ProtomapsImageryProvider.ts	2024-12-18 14:25:56
+++ ./lib/Map/ImageryProvider/ProtomapsImageryProvider.ts	2024-11-19 14:44:42
@@ -42,8 +42,9 @@
 import { default as TerriaFeature } from "../../Models/Feature/Feature";
 import Terria from "../../Models/Terria";
 import { ImageryProviderWithGridLayerSupport } from "../Leaflet/ImageryProviderLeafletGridLayer";
-import geojsonvt from "geojson-vt";
 
+const geojsonvt = require("geojson-vt").default;
+
 type GeojsonVtFeature = {
   id: any;
   type: GeomType;
@@ -498,8 +499,8 @@
   }
 
   async pickFeatures(
-    _x: number,
-    _y: number,
+    x: number,
+    y: number,
     level: number,
     longitude: number,
     latitude: number
@@ -715,7 +716,7 @@
             }),
             minzoom: 0,
             maxzoom: Infinity,
-            filter: (_zoom, feature) =>
+            filter: (zoom, feature) =>
               feature.props?.[featureProp!] === featureId
           }
         ]
diff --color -bur --ex ./lib/Map/Leaflet/LeafletSelectionIndicator.ts ./lib/Map/Leaflet/LeafletSelectionIndicator.ts
--- ./lib/Map/Leaflet/LeafletSelectionIndicator.ts	2024-12-18 14:25:56
+++ ./lib/Map/Leaflet/LeafletSelectionIndicator.ts	2024-11-19 14:44:42
@@ -5,6 +5,7 @@
 import CesiumMath from "terriajs-cesium/Source/Core/Math";
 import TweenCollection from "terriajs-cesium/Source/Scene/TweenCollection";
 import isDefined from "../../Core/isDefined";
+
 import Leaflet from "../../Models/Leaflet";
 
 const selectionIndicatorUrl = require("../../../wwwroot/images/NM-LocationTarget.svg");
diff --color -bur --ex ./lib/Map/PickedFeatures/featureDataToGeoJson.ts ./lib/Map/PickedFeatures/featureDataToGeoJson.ts
--- ./lib/Map/PickedFeatures/featureDataToGeoJson.ts	2024-12-18 14:25:56
+++ ./lib/Map/PickedFeatures/featureDataToGeoJson.ts	2024-11-19 14:44:42
@@ -1,3 +1,5 @@
+"use strict";
+
 import Point from "@mapbox/point-geometry";
 import {
   Feature as GeoJsonFeature,
@@ -24,7 +26,8 @@
   toFeatureCollection
 } from "../../ModelMixins/GeojsonMixin";
 import computeRingWindingOrder from "../Vector/computeRingWindingOrder";
-import pointInPolygon from "point-in-polygon";
+
+const pointInPolygon = require("point-in-polygon");
 
 /**
  * Converts feature data, such as from a WMS GetFeatureInfo or an Esri Identify, to
diff --color -bur --ex ./lib/Map/Region/RegionProvider.ts ./lib/Map/Region/RegionProvider.ts
--- ./lib/Map/Region/RegionProvider.ts	2024-12-18 14:25:56
+++ ./lib/Map/Region/RegionProvider.ts	2024-11-19 14:44:42
@@ -282,7 +282,7 @@
         ];
       }
       await Promise.all(this._loadRegionIDsPromises);
-    } catch (_e) {
+    } catch (e) {
       console.log(`Failed to load region IDS for ${this.regionType}`);
     } finally {
       runInAction(() => (this._loaded = true));
Only in ./lib/Map: VarType.js
diff --color -bur --ex ./lib/Map/Vector/EarthGravityModel1996.js ./lib/Map/Vector/EarthGravityModel1996.js
--- ./lib/Map/Vector/EarthGravityModel1996.js	2024-12-18 14:25:56
+++ ./lib/Map/Vector/EarthGravityModel1996.js	2024-11-19 14:44:42
@@ -1,7 +1,9 @@
-import CesiumMath from "terriajs-cesium/Source/Core/Math";
-import defined from "terriajs-cesium/Source/Core/defined";
-import loadArrayBuffer from "../../Core/loadArrayBuffer";
+"use strict";
 
+var CesiumMath = require("terriajs-cesium/Source/Core/Math").default;
+var defined = require("terriajs-cesium/Source/Core/defined").default;
+var loadArrayBuffer = require("../../Core/loadArrayBuffer").default;
+
 /**
  * The Earth Gravity Model 1996 (EGM96) geoid.
  * @param {String} gridFileUrl The URL of the WW15MGH.DAC file.
@@ -129,4 +131,4 @@
   return data[recordIndex * 1440 + heightIndex];
 }
 
-export default EarthGravityModel1996;
+module.exports = EarthGravityModel1996;
diff --color -bur --ex ./lib/Map/Vector/computeRingWindingOrder.ts ./lib/Map/Vector/computeRingWindingOrder.ts
--- ./lib/Map/Vector/computeRingWindingOrder.ts	2024-12-18 14:25:56
+++ ./lib/Map/Vector/computeRingWindingOrder.ts	2024-11-19 14:44:42
@@ -1,3 +1,5 @@
+"use strict";
+
 import i18next from "i18next";
 import WindingOrder from "terriajs-cesium/Source/Core/WindingOrder";
 import DeveloperError from "terriajs-cesium/Source/Core/DeveloperError";
diff --color -bur --ex ./lib/Map/Vector/geoJsonGeometryFromGeoRssSimpleGeometry.js ./lib/Map/Vector/geoJsonGeometryFromGeoRssSimpleGeometry.js
--- ./lib/Map/Vector/geoJsonGeometryFromGeoRssSimpleGeometry.js	2024-12-18 14:25:56
+++ ./lib/Map/Vector/geoJsonGeometryFromGeoRssSimpleGeometry.js	2024-11-19 14:44:42
@@ -1,6 +1,6 @@
-import defined from "terriajs-cesium/Source/Core/defined";
-import RuntimeError from "terriajs-cesium/Source/Core/RuntimeError";
-import i18next from "i18next";
+var defined = require("terriajs-cesium/Source/Core/defined").default;
+var RuntimeError = require("terriajs-cesium/Source/Core/RuntimeError").default;
+var i18next = require("i18next").default;
 
 var featureCreators = {
   point: createPointGeometry,
@@ -83,4 +83,4 @@
   return coords;
 }
 
-export default geoJsonGeometryFromGeoRssSimpleGeometry;
+module.exports = geoJsonGeometryFromGeoRssSimpleGeometry;
diff --color -bur --ex ./lib/Map/Vector/geoJsonGeometryFromGmlGeometry.js ./lib/Map/Vector/geoJsonGeometryFromGmlGeometry.js
--- ./lib/Map/Vector/geoJsonGeometryFromGmlGeometry.js	2024-12-18 14:25:56
+++ ./lib/Map/Vector/geoJsonGeometryFromGmlGeometry.js	2024-11-19 14:44:42
@@ -1,9 +1,8 @@
-import RuntimeError from "terriajs-cesium/Source/Core/RuntimeError";
-import i18next from "i18next";
-import defined from "terriajs-cesium/Source/Core/defined";
+var RuntimeError = require("terriajs-cesium/Source/Core/RuntimeError").default;
+var i18next = require("i18next").default;
+var defined = require("terriajs-cesium/Source/Core/defined").default;
+var gmlNamespace = "http://www.opengis.net/gml";
 
-const gmlNamespace = "http://www.opengis.net/gml";
-
 function createLineStringFromGmlGeometry(geometry) {
   var coordinates = [];
 
@@ -212,4 +211,4 @@
   return coords;
 }
 
-export default geoJsonGeometryFeatureFromGmlGeometry;
+module.exports = geoJsonGeometryFeatureFromGmlGeometry;
diff --color -bur --ex ./lib/Map/Vector/geoJsonGeometryFromW3cGeometry.js ./lib/Map/Vector/geoJsonGeometryFromW3cGeometry.js
--- ./lib/Map/Vector/geoJsonGeometryFromW3cGeometry.js	2024-12-18 14:25:56
+++ ./lib/Map/Vector/geoJsonGeometryFromW3cGeometry.js	2024-11-19 14:44:42
@@ -1,6 +1,6 @@
-import defined from "terriajs-cesium/Source/Core/defined";
-import RuntimeError from "terriajs-cesium/Source/Core/RuntimeError";
-import i18next from "i18next";
+var defined = require("terriajs-cesium/Source/Core/defined").default;
+var RuntimeError = require("terriajs-cesium/Source/Core/RuntimeError").default;
+var i18next = require("i18next").default;
 
 var featureCreators = {
   Point: createPointGeometry
@@ -34,4 +34,4 @@
   };
 }
 
-export default geoJsonGeometryFromW3cGeometry;
+module.exports = geoJsonGeometryFromW3cGeometry;
diff --color -bur --ex ./lib/Map/Vector/geoRssConvertor.js ./lib/Map/Vector/geoRssConvertor.js
--- ./lib/Map/Vector/geoRssConvertor.js	2024-12-18 14:25:56
+++ ./lib/Map/Vector/geoRssConvertor.js	2024-11-19 14:44:42
@@ -1,7 +1,9 @@
-import defined from "terriajs-cesium/Source/Core/defined";
-import geoJsonGeometryFromGeoRssSimpleGeometry from "./geoJsonGeometryFromGeoRssSimpleGeometry";
-import geoJsonGeometryFromGmlGeometry from "./geoJsonGeometryFromGmlGeometry";
-import geoJsonGeometryFromW3cGeometry from "./geoJsonGeometryFromW3cGeometry";
+"use strict";
+
+var defined = require("terriajs-cesium/Source/Core/defined").default;
+var geoJsonGeometryFromGeoRssSimpleGeometry = require("./geoJsonGeometryFromGeoRssSimpleGeometry");
+var geoJsonGeometryFromGmlGeometry = require("./geoJsonGeometryFromGmlGeometry");
+var geoJsonGeometryFromW3cGeometry = require("./geoJsonGeometryFromW3cGeometry");
 
 /**
  * Converts a GeoRss v2.0 document to GeoJSON.
diff --color -bur --ex ./lib/Map/Vector/gmlToGeoJson.js ./lib/Map/Vector/gmlToGeoJson.js
--- ./lib/Map/Vector/gmlToGeoJson.js	2024-12-18 14:25:56
+++ ./lib/Map/Vector/gmlToGeoJson.js	2024-11-19 14:44:42
@@ -1,7 +1,8 @@
-import defined from "terriajs-cesium/Source/Core/defined";
-import geoJsonGeometryFromGmlGeometry from "./geoJsonGeometryFromGmlGeometry";
+"use strict";
 
-const gmlNamespace = "http://www.opengis.net/gml";
+var defined = require("terriajs-cesium/Source/Core/defined").default;
+var geoJsonGeometryFromGmlGeometry = require("./geoJsonGeometryFromGmlGeometry");
+var gmlNamespace = "http://www.opengis.net/gml";
 
 /**
  * Converts a GML v3.1.1 simple features document to GeoJSON.
@@ -103,4 +104,4 @@
   return result;
 }
 
-export default gmlToGeoJson;
+module.exports = gmlToGeoJson;
diff --color -bur --ex ./lib/Map/Vector/prettifyProjection.ts ./lib/Map/Vector/prettifyProjection.ts
--- ./lib/Map/Vector/prettifyProjection.ts	2024-12-18 14:25:56
+++ ./lib/Map/Vector/prettifyProjection.ts	2024-11-19 14:44:42
@@ -1,4 +1,4 @@
-import proj4 from "proj4";
+const proj4 = require("proj4/lib/index.js").default;
 
 /**
  * Turns the longitude / latitude in degrees into a human readable pretty UTM zone representation.
Only in ./lib/Map/Vector: unionRectangleArray.js
Only in ./lib/Map/Vector: unionRectangles.js
diff --color -bur --ex ./lib/Map/Vector/zoomRectangleFromPoint.js ./lib/Map/Vector/zoomRectangleFromPoint.js
--- ./lib/Map/Vector/zoomRectangleFromPoint.js	2024-12-18 14:25:56
+++ ./lib/Map/Vector/zoomRectangleFromPoint.js	2024-11-19 14:44:42
@@ -1,11 +1,11 @@
-import Rectangle from "terriajs-cesium/Source/Core/Rectangle";
-import defaultValue from "terriajs-cesium/Source/Core/defaultValue";
+var Rectangle = require("terriajs-cesium/Source/Core/Rectangle").default;
+var defaultValue = require("terriajs-cesium/Source/Core/defaultValue").default;
 
 // Server does not return information of a bounding box, just a location.
 // BOUNDING_BOX_SIZE is used to expand a point
-const DEFAULT_BOUNDING_BOX_SIZE = 0.2;
+var DEFAULT_BOUNDING_BOX_SIZE = 0.2;
 
-export default function createZoomToFunction(
+module.exports = function createZoomToFunction(
   latitude,
   longitude,
   boundingBoxSize
@@ -17,4 +17,4 @@
   var north = parseFloat(latitude) + boundingBoxSize / 2;
   var east = parseFloat(longitude) + boundingBoxSize / 2;
   return Rectangle.fromDegrees(west, south, east, north);
-}
+};
diff --color -bur --ex ./lib/ModelMixins/Cesium3dTilesMixin.ts ./lib/ModelMixins/Cesium3dTilesMixin.ts
--- ./lib/ModelMixins/Cesium3dTilesMixin.ts	2024-12-18 14:25:56
+++ ./lib/ModelMixins/Cesium3dTilesMixin.ts	2024-11-19 14:44:42
@@ -54,7 +54,7 @@
     makeObservable(this);
   }
 
-  destroy(): void {
+  destroy() {
     super.destroy();
     // TODO: we are running later to prevent this
     // modification from happening in some computed up the call chain.
diff --color -bur --ex ./lib/ModelMixins/DiscretelyTimeVaryingMixin.ts ./lib/ModelMixins/DiscretelyTimeVaryingMixin.ts
--- ./lib/ModelMixins/DiscretelyTimeVaryingMixin.ts	2024-12-23 14:57:45
+++ ./lib/ModelMixins/DiscretelyTimeVaryingMixin.ts	2024-11-19 14:44:42
@@ -115,7 +115,9 @@
               tag: dt.tag !== undefined ? dt.tag : dt.time
             });
           }
-        } catch {}
+        } catch {
+          /* eslint-disable-line no-empty */
+        }
       }
       asJulian.sort((a, b) => JulianDate.compare(a.time, b.time));
       return asJulian;
diff --color -bur --ex ./lib/ModelMixins/FeatureInfoUrlTemplateMixin.ts ./lib/ModelMixins/FeatureInfoUrlTemplateMixin.ts
--- ./lib/ModelMixins/FeatureInfoUrlTemplateMixin.ts	2024-12-18 14:25:56
+++ ./lib/ModelMixins/FeatureInfoUrlTemplateMixin.ts	2024-11-19 14:44:42
@@ -86,7 +86,7 @@
                     : undefined
                 )
               );
-            } catch (_e) {
+            } catch (e) {
               if (!feature.properties) {
                 feature.properties = new PropertyBag();
               }
@@ -163,7 +163,7 @@
                   ? catalogItem.showStringIfPropertyValueIsNull
                   : undefined
               );
-            } catch (_e) {
+            } catch (e) {
               if (!feature.properties) {
                 feature.properties = {};
               }
diff --color -bur --ex ./lib/ModelMixins/GeojsonMixin.ts ./lib/ModelMixins/GeojsonMixin.ts
--- ./lib/ModelMixins/GeojsonMixin.ts	2024-12-18 14:25:56
+++ ./lib/ModelMixins/GeojsonMixin.ts	2024-11-19 14:44:42
@@ -737,14 +737,14 @@
         this.useOutlineColorForLineFeatures;
 
       // Style function
-      const getColorValue = (_z: number, f?: ProtomapsFeature) => {
+      const getColorValue = (z: number, f?: ProtomapsFeature) => {
         const rowId = f?.props[FEATURE_ID_PROP];
         return colorMap
           .mapValueToColor(isJsonNumber(rowId) ? rows?.[rowId] : null)
           .toCssColorString();
       };
 
-      const getOutlineWidthValue = (_z: number, f?: ProtomapsFeature) => {
+      const getOutlineWidthValue = (z: number, f?: ProtomapsFeature) => {
         const rowId = f?.props[FEATURE_ID_PROP];
         return (
           (isConstantStyleMap(outlineStyleMap)
@@ -754,7 +754,7 @@
         );
       };
 
-      const getOutlineColorValue = (_z: number, f?: ProtomapsFeature) => {
+      const getOutlineColorValue = (z: number, f?: ProtomapsFeature) => {
         const rowId = f?.props[FEATURE_ID_PROP];
         return (
           (isConstantStyleMap(outlineStyleMap)
@@ -765,7 +765,7 @@
       };
 
       // Filter features by time if applicable
-      const showFeature = (_z: number, f?: ProtomapsFeature) =>
+      const showFeature = (z: number, f?: ProtomapsFeature) =>
         !currentTimeRows ||
         (isJsonNumber(f?.props[FEATURE_ID_PROP]) &&
           currentTimeRows.includes(f?.props[FEATURE_ID_PROP] as number));
diff --color -bur --ex ./lib/ModelMixins/GroupMixin.ts ./lib/ModelMixins/GroupMixin.ts
--- ./lib/ModelMixins/GroupMixin.ts	2024-12-18 14:25:56
+++ ./lib/ModelMixins/GroupMixin.ts	2024-11-19 14:44:42
@@ -19,8 +19,8 @@
 import { ItemPropertiesTraits } from "../Traits/TraitsClasses/ItemPropertiesTraits";
 import CatalogMemberMixin, { getName } from "./CatalogMemberMixin";
 import ReferenceMixin from "./ReferenceMixin";
-import naturalSort from "javascript-natural-sort";
 
+const naturalSort = require("javascript-natural-sort");
 naturalSort.insensitive = true;
 
 const MERGED_GROUP_ID_PREPEND = "__merged__";
diff --color -bur --ex ./lib/ModelMixins/TableMixin.ts ./lib/ModelMixins/TableMixin.ts
--- ./lib/ModelMixins/TableMixin.ts	2024-12-18 14:25:56
+++ ./lib/ModelMixins/TableMixin.ts	2024-11-19 14:44:42
@@ -141,7 +141,7 @@
 
         if (rowsToRemove.size > 0) {
           return dataColumnMajor.map((col) =>
-            col.filter((_cell, idx) => !rowsToRemove.has(idx))
+            col.filter((cell, idx) => !rowsToRemove.has(idx))
           );
         }
       }
@@ -217,7 +217,7 @@
       if (isDefined(this.dataColumnMajor)) {
         // I am assuming all columns have the same length -> so use first column
         const csvString = this.dataColumnMajor[0]
-          .map((_row, rowIndex) =>
+          .map((row, rowIndex) =>
             this.dataColumnMajor!.map((col) => col[rowIndex]).join(",")
           )
           .join("\n");
diff --color -bur --ex ./lib/Models/AugmentedVirtuality.ts ./lib/Models/AugmentedVirtuality.ts
--- ./lib/Models/AugmentedVirtuality.ts	2024-12-18 14:25:56
+++ ./lib/Models/AugmentedVirtuality.ts	2024-11-19 14:44:42
@@ -70,7 +70,7 @@
     makeObservable(this);
   }
 
-  toggleEnabled(): void {
+  toggleEnabled() {
     if (this.active) {
       this.deactivate();
     } else {
@@ -94,13 +94,13 @@
   }
 
   @action
-  activate(): void {
+  activate() {
     this.manualAlignment = false;
     this.startEventLoop(true);
   }
 
   @action
-  deactivate(): void {
+  deactivate() {
     this.resetAlignment();
     this.manualAlignment = false;
     this.startEventLoop(false);
@@ -110,7 +110,7 @@
    * Toggles whether manual alignement is enabled or disabled.
    */
   @action
-  toggleManualAlignment(): void {
+  toggleManualAlignment() {
     this.setManualAlignment(!this.manualAlignment);
   }
 
@@ -129,7 +129,7 @@
    * cameras orientation so that it matches the * correct orientation.
    */
   @action
-  toggleHoverHeight(): void {
+  toggleHoverHeight() {
     this.hoverLevel =
       (this.hoverLevel + 1) % AugmentedVirtuality.PRESET_HEIGHTS.length;
     this.hover(AugmentedVirtuality.PRESET_HEIGHTS[this.hoverLevel]);
@@ -222,7 +222,7 @@
    *
    * When the manual alignment is enabled this function has no effect.
    */
-  moveTo(position: Cartographic, maximumHeight: number, flyTo: boolean): void {
+  moveTo(position: Cartographic, maximumHeight: number, flyTo: boolean) {
     // If we are in manual alignment mode we don't allow the viewer to move
     // (since this would create a jaring UX for most use cases).
     if (this.manualAlignment) return;
@@ -309,7 +309,7 @@
   /**
    * Resets the alignment so that the alignement matches the devices absolute alignment.
    */
-  resetAlignment(): void {
+  resetAlignment() {
     this.orientationUpdated = true;
     this.realignAlpha = 0;
     this.realignHeading = 0;
@@ -354,7 +354,7 @@
    *
    * @param  event Contains the updated device orientation (in .alpha, .beta, .gamma).
    */
-  storeOrientation(event: DeviceOrientationEvent): void {
+  storeOrientation(event: DeviceOrientationEvent) {
     const { alpha, beta, gamma } = event;
     if (alpha !== null && beta !== null && gamma !== null) {
       this.alpha = alpha;
diff --color -bur --ex ./lib/Models/BaseMaps/defaultBaseMaps.ts ./lib/Models/BaseMaps/defaultBaseMaps.ts
--- ./lib/Models/BaseMaps/defaultBaseMaps.ts	2024-12-18 14:25:56
+++ ./lib/Models/BaseMaps/defaultBaseMaps.ts	2024-11-19 14:44:42
@@ -96,16 +96,47 @@
 
   baseMaps.push({
     item: {
-      id: "basemap-openstreetmap",
-      name: "OpenStreetMap",
+      id: "basemap-black-marble",
+      name: "NASA Black Marble",
+      type: "wms",
+      url: "http://geoserver.nationalmap.nicta.com.au/imagery/nasa-black-marble/wms",
+      attribution:
+        "<a href='https://earthobservatory.nasa.gov/Features/NightLights'>Black Marble</a> - From NASA's Earth Observatory. <a href='https://earthobservatory.nasa.gov/image-use-policy'>Use Policy</a>.",
+      layers: "nasa-black-marble:dnb_land_ocean_ice.2012.54000x27000_geo",
+      opacity: 1.0
+    },
+    image: "build/TerriaJS/images/black-marble.png",
+    contrastColor: "#ffffff"
+  });
+
+  baseMaps.push({
+    item: {
+      id: "basemap-positron",
+      name: "Positron (Light)",
       type: "open-street-map",
-      url: "https://tile.openstreetmap.org/",
+      url: "https://basemaps.cartocdn.com/light_all/",
       attribution:
-        "© <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap contributors</a>",
+        "© <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap</a>, © <a href='https://carto.com/about-carto/'>CARTO</a>",
+      subdomains: ["a", "b", "c", "d"],
       opacity: 1.0
     },
-    image: "build/TerriaJS/images/openstreetmap.png",
+    image: "build/TerriaJS/images/positron.png",
     contrastColor: "#000000"
+  });
+
+  baseMaps.push({
+    item: {
+      id: "basemap-darkmatter",
+      name: "Dark Matter",
+      type: "open-street-map",
+      url: "https://basemaps.cartocdn.com/dark_all/",
+      attribution:
+        "© <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap</a>, © <a href='https://carto.com/about-carto/'>CARTO</a>",
+      subdomains: ["a", "b", "c", "d"],
+      opacity: 1.0
+    },
+    image: "build/TerriaJS/images/dark-matter.png",
+    contrastColor: "#ffffff"
   });
 
   return baseMaps;
diff --color -bur --ex ./lib/Models/BoxDrawing.ts ./lib/Models/BoxDrawing.ts
--- ./lib/Models/BoxDrawing.ts	2024-12-18 14:25:56
+++ ./lib/Models/BoxDrawing.ts	2024-11-19 14:44:42
@@ -347,7 +347,7 @@
     return boxDrawing;
   }
 
-  public setTranslationRotationScale(trs: TranslationRotationScale): void {
+  public setTranslationRotationScale(trs: TranslationRotationScale) {
     Cartesian3.clone(trs.translation, this.trs.translation);
     Quaternion.clone(trs.rotation, this.trs.rotation);
     Cartesian3.clone(trs.scale, this.trs.scale);
@@ -357,7 +357,7 @@
   /**
    * A method to udpate the world transform.
    */
-  public setTransform(transform: Matrix4): void {
+  public setTransform(transform: Matrix4) {
     Matrix4.clone(transform, this.worldTransform);
     Matrix4.getTranslation(this.worldTransform, this.trs.translation);
     Matrix4.getScale(this.worldTransform, this.trs.scale);
@@ -445,7 +445,7 @@
   /**
    * Set the box position
    */
-  setPosition(position: Cartesian3): void {
+  setPosition(position: Cartesian3) {
     const moveStep = Cartesian3.subtract(
       position,
       this.trs.translation,
diff --color -bur --ex ./lib/Models/CameraView.ts ./lib/Models/CameraView.ts
--- ./lib/Models/CameraView.ts	2024-12-18 14:25:56
+++ ./lib/Models/CameraView.ts	2024-11-19 14:44:42
@@ -103,7 +103,7 @@
    * @param  {Object} [json.positionHeadingPitchRoll] If present, must include keys cameraLongitude, cameraLatitude, cameraHeight, heading, pitch, roll.
    * @return {CameraView} The camera view.
    */
-  static fromJson(json: JsonObject): CameraView {
+  static fromJson(json: JsonObject) {
     const lookAt = json.lookAt;
     const positionHeadingPitchRoll = json.positionHeadingPitchRoll;
 
diff --color -bur --ex ./lib/Models/Catalog/CatalogFunctions/YDYRCatalogFunctionJob.ts ./lib/Models/Catalog/CatalogFunctions/YDYRCatalogFunctionJob.ts
--- ./lib/Models/Catalog/CatalogFunctions/YDYRCatalogFunctionJob.ts	2024-12-18 14:25:56
+++ ./lib/Models/Catalog/CatalogFunctions/YDYRCatalogFunctionJob.ts	2024-11-19 14:44:42
@@ -104,9 +104,9 @@
       data.values.map((val, idx) => (val === null ? idx : undefined))
     );
 
-    data.ids = data.ids.filter((_id, idx) => !invalidRows.includes(idx));
+    data.ids = data.ids.filter((id, idx) => !invalidRows.includes(idx));
     data.values = data.values.filter(
-      (_value, idx) => !invalidRows.includes(idx)
+      (value, idx) => !invalidRows.includes(idx)
     );
 
     const params = {
diff --color -bur --ex ./lib/Models/Catalog/CatalogItems/CartoMapV3CatalogItem.ts ./lib/Models/Catalog/CatalogItems/CartoMapV3CatalogItem.ts
--- ./lib/Models/Catalog/CatalogItems/CartoMapV3CatalogItem.ts	2024-12-23 14:57:45
+++ ./lib/Models/Catalog/CatalogItems/CartoMapV3CatalogItem.ts	2024-11-19 14:44:42
@@ -289,7 +289,9 @@
             )
           );
         }
-      } catch {}
+      } catch {
+        /* eslint-disable-line no-empty */
+      }
     }
     return Result.error(e);
   }
diff --color -bur --ex ./lib/Models/Catalog/CatalogItems/CogCatalogItem.ts ./lib/Models/Catalog/CatalogItems/CogCatalogItem.ts
--- ./lib/Models/Catalog/CatalogItems/CogCatalogItem.ts	2024-12-18 14:25:56
+++ ./lib/Models/Catalog/CatalogItems/CogCatalogItem.ts	2024-11-19 14:44:42
@@ -7,9 +7,11 @@
   onBecomeUnobserved,
   runInAction
 } from "mobx";
-import GeographicTilingScheme from "terriajs-cesium/Source/Core/GeographicTilingScheme";
+import {
+  GeographicTilingScheme,
+  WebMercatorTilingScheme
+} from "terriajs-cesium";
 import CesiumMath from "terriajs-cesium/Source/Core/Math";
-import WebMercatorTilingScheme from "terriajs-cesium/Source/Core/WebMercatorTilingScheme";
 import type TIFFImageryProvider from "terriajs-tiff-imagery-provider";
 import CatalogMemberMixin from "../../../ModelMixins/CatalogMemberMixin";
 import MappableMixin, { MapItem } from "../../../ModelMixins/MappableMixin";
@@ -222,7 +224,7 @@
 /**
  * Returns true if the tilingScheme is custom
  */
-function isCustomTilingScheme(tilingScheme: object) {
+function isCustomTilingScheme(tilingScheme: Object) {
   // The upstream library defines a TIFFImageryTillingScheme but it is not
   // exported so we have to check if it is not one of the standard Cesium
   // tiling schemes. Also, because TIFFImageryTillingScheme derives from
@@ -234,7 +236,7 @@
   );
 }
 
-function omitUndefined(obj: object) {
+function omitUndefined(obj: Object) {
   return Object.fromEntries(
     Object.entries(obj).filter(([_, value]) => value !== undefined)
   );
diff --color -bur --ex ./lib/Models/Catalog/CatalogItems/GpxCatalogItem.ts ./lib/Models/Catalog/CatalogItems/GpxCatalogItem.ts
--- ./lib/Models/Catalog/CatalogItems/GpxCatalogItem.ts	2024-12-18 14:25:56
+++ ./lib/Models/Catalog/CatalogItems/GpxCatalogItem.ts	2024-11-19 14:44:42
@@ -12,7 +12,8 @@
 import CreateModel from "../../Definition/CreateModel";
 import { ModelConstructorParameters } from "../../Definition/Model";
 import proxyCatalogItemUrl from "../proxyCatalogItemUrl";
-import toGeoJSON from "@mapbox/togeojson";
+
+const toGeoJSON = require("@mapbox/togeojson");
 
 class GpxCatalogItem extends GeoJsonMixin(CreateModel(GpxCatalogItemTraits)) {
   static readonly type = "gpx";
diff --color -bur --ex ./lib/Models/Catalog/CatalogItems/KmlCatalogItem.ts ./lib/Models/Catalog/CatalogItems/KmlCatalogItem.ts
--- ./lib/Models/Catalog/CatalogItems/KmlCatalogItem.ts	2024-12-18 15:42:26
+++ ./lib/Models/Catalog/CatalogItems/KmlCatalogItem.ts	2024-11-19 14:44:42
@@ -1,17 +1,25 @@
 import i18next from "i18next";
 import { computed, makeObservable, override } from "mobx";
+import Cartesian3 from "terriajs-cesium/Source/Core/Cartesian3";
+import Cartographic from "terriajs-cesium/Source/Core/Cartographic";
+import Ellipsoid from "terriajs-cesium/Source/Core/Ellipsoid";
+import JulianDate from "terriajs-cesium/Source/Core/JulianDate";
+import PolygonHierarchy from "terriajs-cesium/Source/Core/PolygonHierarchy";
 import Resource from "terriajs-cesium/Source/Core/Resource";
+import sampleTerrain from "terriajs-cesium/Source/Core/sampleTerrain";
+import ConstantProperty from "terriajs-cesium/Source/DataSources/ConstantProperty";
 import KmlDataSource from "terriajs-cesium/Source/DataSources/KmlDataSource";
-import TerriaError, { networkRequestError } from "../../../Core/TerriaError";
+import Property from "terriajs-cesium/Source/DataSources/Property";
 import isDefined from "../../../Core/isDefined";
 import readXml from "../../../Core/readXml";
+import TerriaError, { networkRequestError } from "../../../Core/TerriaError";
 import CatalogMemberMixin from "../../../ModelMixins/CatalogMemberMixin";
 import MappableMixin from "../../../ModelMixins/MappableMixin";
 import UrlMixin from "../../../ModelMixins/UrlMixin";
 import KmlCatalogItemTraits from "../../../Traits/TraitsClasses/KmlCatalogItemTraits";
 import CreateModel from "../../Definition/CreateModel";
-import { ModelConstructorParameters } from "../../Definition/Model";
 import HasLocalData from "../../HasLocalData";
+import { ModelConstructorParameters } from "../../Definition/Model";
 import proxyCatalogItemUrl from "../proxyCatalogItemUrl";
 import CesiumIonMixin from "../../../ModelMixins/CesiumIonMixin";
 
@@ -57,40 +65,39 @@
     return "1d";
   }
 
-  protected async forceLoadMapItems(): Promise<void> {
-    try {
-      let kmlLoadInput: undefined | string | Resource | Document | Blob =
-        undefined;
-
+  protected forceLoadMapItems(): Promise<void> {
+    return new Promise<string | Resource | Document | Blob | undefined>(
+      (resolve) => {
       if (isDefined(this.kmlString)) {
         const parser = new DOMParser();
-        kmlLoadInput = parser.parseFromString(this.kmlString, "text/xml");
+          resolve(parser.parseFromString(this.kmlString, "text/xml"));
       } else if (isDefined(this._kmlFile)) {
         if (this._kmlFile.name && this._kmlFile.name.match(kmzRegex)) {
-          kmlLoadInput = this._kmlFile;
+            resolve(this._kmlFile);
         } else {
-          kmlLoadInput = await readXml(this._kmlFile);
+            resolve(readXml(this._kmlFile));
         }
       } else if (isDefined(this.ionResource)) {
-        kmlLoadInput = this.ionResource;
+          resolve(this.ionResource);
       } else if (isDefined(this.url)) {
-        kmlLoadInput = proxyCatalogItemUrl(this, this.url);
-      }
-
-      if (!kmlLoadInput) {
+          resolve(proxyCatalogItemUrl(this, this.url));
+        } else {
         throw networkRequestError({
           sender: this,
           title: i18next.t("models.kml.unableToLoadItemTitle"),
           message: i18next.t("models.kml.unableToLoadItemMessage")
         });
       }
-      this._dataSource = await KmlDataSource.load(kmlLoadInput, {
-        clampToGround: this.clampToGround,
-        sourceUri: this.dataSourceUri
-          ? proxyCatalogItemUrl(this, this.dataSourceUri, "1d")
-          : undefined
-      } as any);
-    } catch (e) {
+      }
+    )
+      .then((kmlLoadInput) => {
+        return KmlDataSource.load(kmlLoadInput!);
+      })
+      .then((dataSource) => {
+        this._dataSource = dataSource;
+        this.doneLoading(dataSource); // Unsure if this is necessary
+      })
+      .catch((e) => {
         throw networkRequestError(
           TerriaError.from(e, {
             sender: this,
@@ -100,8 +107,8 @@
             })
           })
         );
+      });
     }
-  }
 
   @computed
   get mapItems() {
@@ -115,6 +122,98 @@
   protected forceLoadMetadata(): Promise<void> {
     return this.loadIonResource();
   }
-}
+
+  private doneLoading(kmlDataSource: KmlDataSource) {
+    // Clamp features to terrain.
+    if (isDefined(this.terria.cesium)) {
+      const positionsToSample: Cartographic[] = [];
+      const correspondingCartesians: Cartesian3[] = [];
+
+      const entities = kmlDataSource.entities.values;
+      for (let i = 0; i < entities.length; ++i) {
+        const entity = entities[i];
+
+        const polygon = entity.polygon;
+        if (isDefined(polygon)) {
+          polygon.perPositionHeight = true as unknown as Property;
+          const polygonHierarchy = getPropertyValue<PolygonHierarchy>(
+            polygon.hierarchy
+          );
+          if (polygonHierarchy) {
+            samplePolygonHierarchyPositions(
+              polygonHierarchy,
+              positionsToSample,
+              correspondingCartesians
+            );
+          }
+        }
+      }
+      const terrainProvider = this.terria.cesium.scene.globe.terrainProvider;
+      sampleTerrain(terrainProvider, 11, positionsToSample).then(function () {
+        for (let i = 0; i < positionsToSample.length; ++i) {
+          const position = positionsToSample[i];
+          if (!isDefined(position.height)) {
+            continue;
+          }
 
+          Ellipsoid.WGS84.cartographicToCartesian(
+            position,
+            correspondingCartesians[i]
+          );
+        }
+
+        // Force the polygons to be rebuilt.
+        for (let i = 0; i < entities.length; ++i) {
+          const polygon = entities[i].polygon;
+          if (!isDefined(polygon)) {
+            continue;
+          }
+
+          const existingHierarchy = getPropertyValue<PolygonHierarchy>(
+            polygon.hierarchy
+          );
+          if (existingHierarchy) {
+            polygon.hierarchy = new ConstantProperty(
+              new PolygonHierarchy(
+                existingHierarchy.positions,
+                existingHierarchy.holes
+              )
+            );
+          }
+        }
+      });
+    }
+  }
+}
+
 export default KmlCatalogItem;
+
+function getPropertyValue<T>(property: Property | undefined): T | undefined {
+  if (property === undefined) {
+    return undefined;
+  }
+  return property.getValue(JulianDate.now());
+}
+
+function samplePolygonHierarchyPositions(
+  polygonHierarchy: PolygonHierarchy,
+  positionsToSample: Cartographic[],
+  correspondingCartesians: Cartesian3[]
+) {
+  const positions = polygonHierarchy.positions;
+
+  for (let i = 0; i < positions.length; ++i) {
+    const position = positions[i];
+    correspondingCartesians.push(position);
+    positionsToSample.push(Ellipsoid.WGS84.cartesianToCartographic(position));
+  }
+
+  const holes = polygonHierarchy.holes;
+  for (let i = 0; i < holes.length; ++i) {
+    samplePolygonHierarchyPositions(
+      holes[i],
+      positionsToSample,
+      correspondingCartesians
+    );
+  }
+}
diff --color -bur --ex ./lib/Models/Catalog/CatalogItems/MapboxVectorTileCatalogItem.ts ./lib/Models/Catalog/CatalogItems/MapboxVectorTileCatalogItem.ts
--- ./lib/Models/Catalog/CatalogItems/MapboxVectorTileCatalogItem.ts	2024-12-18 14:25:56
+++ ./lib/Models/Catalog/CatalogItems/MapboxVectorTileCatalogItem.ts	2024-11-19 14:44:42
@@ -162,7 +162,7 @@
           minzoom: this.minimumZoom,
           maxzoom: this.maximumZoom,
           // Only apply polygon/fill symbolizer to polygon features (otherwise it will also apply to line features)
-          filter: (_z, f) => f.geomType === GeomType.Polygon
+          filter: (z, f) => f.geomType === GeomType.Polygon
         });
       }
       if (this.lineColor) {
diff --color -bur --ex ./lib/Models/Catalog/CatalogItems/OpenDataSoftCatalogItem.ts ./lib/Models/Catalog/CatalogItems/OpenDataSoftCatalogItem.ts
--- ./lib/Models/Catalog/CatalogItems/OpenDataSoftCatalogItem.ts	2024-12-18 14:25:56
+++ ./lib/Models/Catalog/CatalogItems/OpenDataSoftCatalogItem.ts	2024-11-19 14:44:42
@@ -602,7 +602,7 @@
         new Array(Math.ceil(recordsToFetch / 100))
           .fill(0)
           .map(
-            async (_v, index) =>
+            async (v, index) =>
               (await this.apiClient.get(q.offset(index * 100))).records ?? []
           )
       )
diff --color -bur --ex ./lib/Models/Catalog/CatalogReferences/MagdaReference.ts ./lib/Models/Catalog/CatalogReferences/MagdaReference.ts
--- ./lib/Models/Catalog/CatalogReferences/MagdaReference.ts	2024-12-18 14:25:56
+++ ./lib/Models/Catalog/CatalogReferences/MagdaReference.ts	2024-11-19 14:44:42
@@ -559,7 +559,7 @@
   private static createMemberFromTerriaAspect(
     terria: Terria,
     sourceReference: BaseModel | undefined,
-    _magdaUri: uri.URI | undefined,
+    magdaUri: uri.URI | undefined,
     id: string | undefined,
     record: JsonObject,
     terriaAspect: JsonObject,
@@ -634,7 +634,7 @@
   private static createMemberFromDistributionFormat(
     terria: Terria,
     sourceReference: BaseModel | undefined,
-    _magdaUri: uri.URI | undefined,
+    magdaUri: uri.URI | undefined,
     id: string | undefined,
     datasetRecord: JsonObject,
     distributionRecord: JsonObject,
diff --color -bur --ex ./lib/Models/Catalog/CatalogReferences/ThreddsItemReference.ts ./lib/Models/Catalog/CatalogReferences/ThreddsItemReference.ts
--- ./lib/Models/Catalog/CatalogReferences/ThreddsItemReference.ts	2024-12-18 14:25:56
+++ ./lib/Models/Catalog/CatalogReferences/ThreddsItemReference.ts	2024-11-19 14:44:42
@@ -3,6 +3,7 @@
 import ReferenceMixin from "../../../ModelMixins/ReferenceMixin";
 import UrlMixin from "../../../ModelMixins/UrlMixin";
 import ThreddsItemReferenceTraits from "../../../Traits/TraitsClasses/ThreddsItemReferenceTraits";
+import ModelTraits from "../../../Traits/ModelTraits";
 import ThreddsCatalogGroup, {
   ThreddsDataset
 } from "../CatalogGroups/ThreddsCatalogGroup";
@@ -10,7 +11,9 @@
 import CreateModel from "../../Definition/CreateModel";
 import LoadableStratum from "../../Definition/LoadableStratum";
 import { BaseModel } from "../../Definition/Model";
+import StratumFromTraits from "../../Definition/StratumFromTraits";
 import StratumOrder from "../../Definition/StratumOrder";
+import Terria from "../../Terria";
 import WebMapServiceCatalogGroup from "../Ows/WebMapServiceCatalogGroup";
 
 export class ThreddsDatasetStratum extends LoadableStratum(
@@ -68,6 +71,15 @@
   _threddsDataset: ThreddsDataset | undefined = undefined;
   _threddsCatalogGroup: ThreddsCatalogGroup | undefined = undefined;
 
+  constructor(
+    id: string | undefined,
+    terria: Terria,
+    sourceReference?: BaseModel,
+    strata?: Map<string, StratumFromTraits<ModelTraits>>
+  ) {
+    super(id, terria, sourceReference, strata);
+  }
+
   setDataset(dataset: ThreddsDataset) {
     this._threddsDataset = dataset;
   }
@@ -109,6 +121,7 @@
     );
     if (model === undefined) return;
     this.setThreddsStrata(model);
+    _previousTarget = model;
     return model;
   }
 }
diff --color -bur --ex ./lib/Models/Catalog/CatalogReferences/UrlReference.ts ./lib/Models/Catalog/CatalogReferences/UrlReference.ts
--- ./lib/Models/Catalog/CatalogReferences/UrlReference.ts	2024-12-18 14:25:56
+++ ./lib/Models/Catalog/CatalogReferences/UrlReference.ts	2024-11-19 14:44:42
@@ -3,7 +3,9 @@
 import CatalogMemberFactory from "../CatalogMemberFactory";
 import CreateModel from "../../Definition/CreateModel";
 import { BaseModel } from "../../Definition/Model";
+import StratumFromTraits from "../../Definition/StratumFromTraits";
 import Terria from "../../Terria";
+import ModelTraits from "../../../Traits/ModelTraits";
 import UrlReferenceTraits from "../../../Traits/TraitsClasses/UrlReferenceTraits";
 import StratumOrder from "../../Definition/StratumOrder";
 import CatalogMemberMixin from "../../../ModelMixins/CatalogMemberMixin";
@@ -19,6 +21,15 @@
 
   get type() {
     return UrlReference.type;
+  }
+
+  constructor(
+    id: string | undefined,
+    terria: Terria,
+    sourceReference?: BaseModel,
+    strata?: Map<string, StratumFromTraits<ModelTraits>>
+  ) {
+    super(id, terria, sourceReference, strata);
   }
 
   protected forceLoadReference(
diff --color -bur --ex ./lib/Models/Catalog/Ckan/CkanCatalogGroup.ts ./lib/Models/Catalog/Ckan/CkanCatalogGroup.ts
--- ./lib/Models/Catalog/Ckan/CkanCatalogGroup.ts	2024-12-18 14:25:56
+++ ./lib/Models/Catalog/Ckan/CkanCatalogGroup.ts	2024-11-19 14:44:42
@@ -237,7 +237,7 @@
   @action
   addCatalogItemToCatalogGroup(
     catalogItem: any,
-    _dataset: CkanDataset,
+    dataset: CkanDataset,
     groupId: string
   ) {
     const group: CatalogGroup | undefined =
diff --color -bur --ex ./lib/Models/Catalog/Ckan/CkanItemReference.ts ./lib/Models/Catalog/Ckan/CkanItemReference.ts
--- ./lib/Models/Catalog/Ckan/CkanItemReference.ts	2024-12-18 14:25:56
+++ ./lib/Models/Catalog/Ckan/CkanItemReference.ts	2024-11-19 14:44:42
@@ -388,6 +388,7 @@
     }
 
     if (model === undefined) return;
+    _previousTarget = model;
     await this.setCkanStrata(model);
 
     model.setTrait(CommonStrata.definition, "name", this.name);
diff --color -bur --ex ./lib/Models/Catalog/Esri/ArcGisFeatureServerCatalogItem.ts ./lib/Models/Catalog/Esri/ArcGisFeatureServerCatalogItem.ts
--- ./lib/Models/Catalog/Esri/ArcGisFeatureServerCatalogItem.ts	2024-12-18 14:25:56
+++ ./lib/Models/Catalog/Esri/ArcGisFeatureServerCatalogItem.ts	2024-11-19 14:44:42
@@ -8,7 +8,7 @@
 import replaceUnderscores from "../../../Core/replaceUnderscores";
 import { networkRequestError } from "../../../Core/TerriaError";
 import featureDataToGeoJson from "../../../Map/PickedFeatures/featureDataToGeoJson";
-import Proj4Definitions from "../../../Map/Vector/Proj4Definitions";
+import proj4definitions from "../../../Map/Vector/Proj4Definitions";
 import GeoJsonMixin, {
   FeatureCollectionWithCrs
 } from "../../../ModelMixins/GeojsonMixin";
@@ -38,8 +38,9 @@
 import StratumOrder from "../../Definition/StratumOrder";
 import { ModelConstructorParameters } from "../../Definition/Model";
 import proxyCatalogItemUrl from "../proxyCatalogItemUrl";
-import proj4 from "proj4";
 
+const proj4 = require("proj4").default;
+
 interface DocumentInfo {
   Author?: string;
 }
@@ -252,12 +253,12 @@
 
     if (isDefined(extent) && isDefined(wkidCode)) {
       const wkid = "EPSG:" + wkidCode;
-      if (!isDefined(Proj4Definitions[wkid])) {
+      if (!isDefined((proj4definitions as any)[wkid])) {
         return undefined;
       }
 
-      const source = Proj4Definitions[wkid];
-      const dest = "EPSG:4326";
+      const source = new proj4.Proj((proj4definitions as any)[wkid]);
+      const dest = new proj4.Proj("EPSG:4326");
 
       let p = proj4(source, dest, [extent.xmin, extent.ymin]);
 
diff --color -bur --ex ./lib/Models/Catalog/Esri/ArcGisMapServerCatalogItem.ts ./lib/Models/Catalog/Esri/ArcGisMapServerCatalogItem.ts
--- ./lib/Models/Catalog/Esri/ArcGisMapServerCatalogItem.ts	2024-12-18 14:25:56
+++ ./lib/Models/Catalog/Esri/ArcGisMapServerCatalogItem.ts	2024-11-19 14:44:42
@@ -41,8 +41,9 @@
 import proxyCatalogItemUrl from "../proxyCatalogItemUrl";
 import MinMaxLevelMixin from "./../../../ModelMixins/MinMaxLevelMixin";
 import { Extent, Layer, Legends, MapServer } from "./ArcGisInterfaces";
-import proj4 from "proj4";
 
+const proj4 = require("proj4").default;
+
 class MapServerStratum extends LoadableStratum(
   ArcGisMapServerCatalogItemTraits
 ) {
@@ -701,8 +702,8 @@
       return;
     }
 
-    const source = Proj4Definitions[wkid];
-    const dest = "EPSG:4326";
+    const source = new proj4.Proj(Proj4Definitions[wkid]);
+    const dest = new proj4.Proj("EPSG:4326");
 
     let p = proj4(source, dest, [extent.xmin, extent.ymin]);
 
diff --color -bur --ex ./lib/Models/Catalog/Esri/ArcGisPortalCatalogGroup.ts ./lib/Models/Catalog/Esri/ArcGisPortalCatalogGroup.ts
--- ./lib/Models/Catalog/Esri/ArcGisPortalCatalogGroup.ts	2024-12-18 14:25:56
+++ ./lib/Models/Catalog/Esri/ArcGisPortalCatalogGroup.ts	2024-11-19 14:44:42
@@ -282,7 +282,7 @@
   @action
   addCatalogItemToCatalogGroup(
     catalogItem: any,
-    _dataset: ArcGisItem,
+    dataset: ArcGisItem,
     groupId: string
   ) {
     const group: CatalogGroup | undefined =
diff --color -bur --ex ./lib/Models/Catalog/Esri/ArcGisPortalItemReference.ts ./lib/Models/Catalog/Esri/ArcGisPortalItemReference.ts
--- ./lib/Models/Catalog/Esri/ArcGisPortalItemReference.ts	2024-12-18 14:25:56
+++ ./lib/Models/Catalog/Esri/ArcGisPortalItemReference.ts	2024-11-19 14:44:42
@@ -350,6 +350,7 @@
     );
 
     if (model === undefined) return;
+    _previousTarget = model;
     await this.setArcgisStrata(model);
 
     const defintionStratum = this.strata.get(CommonStrata.definition);
@@ -405,7 +406,7 @@
       proxyCatalogItemUrl(portalItem, uri.toString(), portalItem.cacheDuration)
     );
     return response;
-  } catch (_err) {
+  } catch (err) {
     return undefined;
   }
 }
diff --color -bur --ex ./lib/Models/Catalog/Gtfs/GtfsRealtimeProtoBufReaders.ts ./lib/Models/Catalog/Gtfs/GtfsRealtimeProtoBufReaders.ts
--- ./lib/Models/Catalog/Gtfs/GtfsRealtimeProtoBufReaders.ts	2024-12-18 14:25:56
+++ ./lib/Models/Catalog/Gtfs/GtfsRealtimeProtoBufReaders.ts	2024-11-19 14:44:42
@@ -29,6 +29,10 @@
     entity: []
   };
 
+  constructor() {
+    super();
+  }
+
   protected readField(tag: number, obj?: FeedMessage, pbf?: Pbf): void {
     if (pbf === null || pbf === undefined) {
       return;
diff --color -bur --ex ./lib/Models/Catalog/Gtfs/prettyPrintGtfsEntityField.ts ./lib/Models/Catalog/Gtfs/prettyPrintGtfsEntityField.ts
--- ./lib/Models/Catalog/Gtfs/prettyPrintGtfsEntityField.ts	2024-12-18 14:25:56
+++ ./lib/Models/Catalog/Gtfs/prettyPrintGtfsEntityField.ts	2024-11-19 14:44:42
@@ -9,7 +9,7 @@
     // TODO: Get sone of this data (eg. route short name) from static GTFS csv files instead
     // This probably only works for NSW
     case "route_short_name": {
-      const route: string | undefined = _get(entity, "vehicle.trip.route_id");
+      const route: string = _get(entity, "vehicle.trip.route_id");
       if (route !== undefined && route.indexOf("_") + 1 > 0) {
         return route.substr(route.indexOf("_") + 1);
       } else {
@@ -17,7 +17,7 @@
       }
     }
     case "occupancy_status#str": {
-      const occupancy: OccupancyStatus | undefined = _get(
+      const occupancy: OccupancyStatus = _get(
         entity,
         "vehicle.occupancy_status"
       );
diff --color -bur --ex ./lib/Models/Catalog/Ows/WebFeatureServiceCapabilities.ts ./lib/Models/Catalog/Ows/WebFeatureServiceCapabilities.ts
--- ./lib/Models/Catalog/Ows/WebFeatureServiceCapabilities.ts	2024-12-18 14:25:56
+++ ./lib/Models/Catalog/Ows/WebFeatureServiceCapabilities.ts	2024-11-19 14:44:42
@@ -196,7 +196,7 @@
   readonly featureTypes: FeatureType[];
   readonly srsNames: SrsNamesForLayer[] | undefined;
 
-  private constructor(_xml: XMLDocument, json: any) {
+  private constructor(xml: XMLDocument, json: any) {
     this.service = getService(json);
     this.outputTypes = getOutputTypes(json);
     this.featureTypes = getFeatureTypes(json);
diff --color -bur --ex ./lib/Models/Catalog/Ows/WebFeatureServiceCatalogItem.ts ./lib/Models/Catalog/Ows/WebFeatureServiceCatalogItem.ts
--- ./lib/Models/Catalog/Ows/WebFeatureServiceCatalogItem.ts	2024-12-23 14:57:45
+++ ./lib/Models/Catalog/Ows/WebFeatureServiceCatalogItem.ts	2024-11-19 14:44:42
@@ -431,7 +431,9 @@
       let errorMessage: string | undefined;
       try {
         errorMessage = xml2json(getFeatureResponse).Exception?.ExceptionText;
-      } catch {}
+      } catch {
+        /* eslint-disable-line no-empty */
+      }
 
       const originalError = isDefined(errorMessage)
         ? new TerriaError({
diff --color -bur --ex ./lib/Models/Catalog/Ows/WebMapServiceCapabilitiesStratum.ts ./lib/Models/Catalog/Ows/WebMapServiceCapabilitiesStratum.ts
--- ./lib/Models/Catalog/Ows/WebMapServiceCapabilitiesStratum.ts	2024-12-18 14:25:56
+++ ./lib/Models/Catalog/Ows/WebMapServiceCapabilitiesStratum.ts	2024-11-19 14:44:42
@@ -44,8 +44,9 @@
   getRectangleFromLayer
 } from "./WebMapServiceCapabilities";
 import WebMapServiceCatalogItem from "./WebMapServiceCatalogItem";
-import dateFormat from "dateformat";
 
+const dateFormat = require("dateformat");
+
 /** Transforms WMS GetCapabilities XML into WebMapServiceCatalogItemTraits */
 export default class WebMapServiceCapabilitiesStratum extends LoadableStratum(
   WebMapServiceCatalogItemTraits
@@ -94,8 +95,7 @@
     Array.from(this.capabilitiesLayers.values()).forEach((layer) => {
       if (!layer?.MetadataURL) return;
       Array.isArray(layer?.MetadataURL)
-        ? // eslint-disable-next-line no-unsafe-optional-chaining
-          metadataUrls.push(...layer?.MetadataURL)
+        ? metadataUrls.push(...layer?.MetadataURL)
         : metadataUrls.push(layer?.MetadataURL as MetadataURL);
     });
 
diff --color -bur --ex ./lib/Models/Catalog/Ows/WebMapServiceCatalogItem.ts ./lib/Models/Catalog/Ows/WebMapServiceCatalogItem.ts
--- ./lib/Models/Catalog/Ows/WebMapServiceCatalogItem.ts	2024-12-18 14:25:56
+++ ./lib/Models/Catalog/Ows/WebMapServiceCatalogItem.ts	2024-11-19 14:44:42
@@ -1,3 +1,5 @@
+// const mobx = require('mobx');
+// const mobxUtils = require('mobx-utils');
 // Problems in current architecture:
 // 1. After loading, can't tell what user actually set versus what came from e.g. GetCapabilities.
 //  Solution: layering
diff --color -bur --ex ./lib/Models/Catalog/Ows/WebMapTileServiceCatalogItem.ts ./lib/Models/Catalog/Ows/WebMapTileServiceCatalogItem.ts
--- ./lib/Models/Catalog/Ows/WebMapTileServiceCatalogItem.ts	2024-12-18 14:25:56
+++ ./lib/Models/Catalog/Ows/WebMapTileServiceCatalogItem.ts	2024-11-19 14:44:42
@@ -583,7 +583,6 @@
     let tileMatrixSetLinks: TileMatrixSetLink[] = [];
     if (layer?.TileMatrixSetLink) {
       if (Array.isArray(layer?.TileMatrixSetLink)) {
-        // eslint-disable-next-line no-unsafe-optional-chaining
         tileMatrixSetLinks = [...layer?.TileMatrixSetLink];
       } else {
         tileMatrixSetLinks = [layer.TileMatrixSetLink];
diff --color -bur --ex ./lib/Models/Catalog/createCatalogItemFromFileOrUrl.ts ./lib/Models/Catalog/createCatalogItemFromFileOrUrl.ts
--- ./lib/Models/Catalog/createCatalogItemFromFileOrUrl.ts	2024-12-18 14:25:56
+++ ./lib/Models/Catalog/createCatalogItemFromFileOrUrl.ts	2024-11-19 14:44:42
@@ -13,7 +13,7 @@
 
 export default function createCatalogItemFromFileOrUrl(
   terria: Terria,
-  _viewState: ViewState,
+  viewState: ViewState,
   fileOrUrl: File | string,
   dataType?: string
 ): Promise<BaseModel | undefined> {
Only in ./lib/Models/Catalog: createCatalogMemberFromType.js
diff --color -bur --ex ./lib/Models/Catalog/proxyCatalogItemUrl.ts ./lib/Models/Catalog/proxyCatalogItemUrl.ts
--- ./lib/Models/Catalog/proxyCatalogItemUrl.ts	2024-12-18 14:25:56
+++ ./lib/Models/Catalog/proxyCatalogItemUrl.ts	2024-11-19 14:44:42
@@ -1,3 +1,5 @@
+"use strict";
+
 import defaultValue from "terriajs-cesium/Source/Core/defaultValue";
 import isDefined from "../../Core/isDefined";
 import UrlMixin from "../../ModelMixins/UrlMixin";
diff --color -bur --ex ./lib/Models/Cesium.ts ./lib/Models/Cesium.ts
--- ./lib/Models/Cesium.ts	2024-12-18 14:25:56
+++ ./lib/Models/Cesium.ts	2024-11-19 14:44:42
@@ -192,7 +192,14 @@
       ),
       scene3DOnly: true,
       shadows: true,
-      useBrowserRecommendedResolution: !this.terria.useNativeResolution
+      useBrowserRecommendedResolution: !this.terria.useNativeResolution,
+
+      // Multisample Anti-aliasing (MSAA) slightly reduces jagged edges in 3D
+      // This is the new default in Cesium 1.121
+      // Setting here manually until we upgrade. We should also probably
+      // wire this to quality settings.
+      // (https://github.com/CesiumGS/cesium/blob/main/CHANGES.md#1121---2024-09-03)
+      msaaSamples: 4
     };
 
     // Workaround for Firefox bug with WebGL and printing:
@@ -502,7 +509,7 @@
     creditDisplay.destroy = () => {
       try {
         creditDisplayOldDestroy();
-      } catch (_err) {
+      } catch (err) {
         /* TODO: handle Error */
       }
     };
@@ -527,18 +534,18 @@
     };
   }
 
-  getContainer(): Element {
+  getContainer() {
     return this.cesiumWidget.container;
   }
 
-  pauseMapInteraction(): void {
+  pauseMapInteraction() {
     ++this._pauseMapInteractionCount;
     if (this._pauseMapInteractionCount === 1) {
       this.scene.screenSpaceCameraController.enableInputs = false;
     }
   }
 
-  resumeMapInteraction(): void {
+  resumeMapInteraction() {
     --this._pauseMapInteractionCount;
     if (this._pauseMapInteractionCount === 0) {
       setTimeout(() => {
@@ -552,7 +559,7 @@
   private previousRenderError: string | undefined;
 
   /** Show error message to user if Cesium stops rendering. */
-  private onRenderError(_scene: Scene, error: unknown) {
+  private onRenderError(scene: Scene, error: unknown) {
     // This function can be called many times with the same error
     // So we do a rudimentary check to only show the error message once
     // - by comparing error.toString() to this.previousRenderError
@@ -570,7 +577,7 @@
     }
   }
 
-  destroy(): void {
+  destroy() {
     // Port old Cesium.prototype.destroy stuff
     // this._enableSelectExtent(cesiumWidget.scene, false);
     this.scene.renderError.removeEventListener(this.onRenderError);
@@ -767,7 +774,7 @@
             const fnArray = this._3dTilesetEventListeners.get(primitive);
             try {
               fnArray?.forEach((fn) => fn()); // Run the remover functions
-            } catch (_error) {
+            } catch (error) {
               /* TODO: handle error */
             }
 
@@ -813,7 +820,7 @@
     };
   }
 
-  stopObserving(): void {
+  stopObserving() {
     if (this._disposeWorkbenchMapItemsSubscription !== undefined) {
       this._disposeWorkbenchMapItemsSubscription();
     }
@@ -948,7 +955,7 @@
     return _zoom().finally(() => this.notifyRepaintRequired());
   }
 
-  notifyRepaintRequired(): void {
+  notifyRepaintRequired() {
     this.pauser.notifyRepaintRequired();
   }
 
@@ -1292,7 +1299,7 @@
   async pickFromScreenPosition(
     screenPosition: Cartesian2,
     ignoreSplitter: boolean
-  ): Promise<void> {
+  ) {
     const pickRay = this.scene.camera.getPickRay(screenPosition);
     const pickPosition = isDefined(pickRay)
       ? this.scene.globe.pick(pickRay, this.scene)
@@ -1336,7 +1343,7 @@
     latLngHeight: LatLonHeight,
     providerCoords: ProviderCoordsMap,
     existingFeatures: TerriaFeature[]
-  ): void {
+  ) {
     const pickPosition = this.scene.globe.ellipsoid.cartographicToCartesian(
       Cartographic.fromDegrees(
         latLngHeight.longitude,
@@ -1697,7 +1704,7 @@
     );
   }
 
-  _selectFeature(): void {
+  _selectFeature() {
     const feature = this.terria.selectedFeature;
 
     this._highlightFeature(feature);
@@ -1799,7 +1806,7 @@
             false,
             boundingSphereScratch
           );
-        } catch (_e) {
+        } catch (e) {
           /* TODO: handle error */
         }
 
diff --color -bur --ex ./lib/Models/DefaultTimelineModel.ts ./lib/Models/DefaultTimelineModel.ts
--- ./lib/Models/DefaultTimelineModel.ts	2024-12-18 14:25:56
+++ ./lib/Models/DefaultTimelineModel.ts	2024-11-19 14:44:42
@@ -31,7 +31,7 @@
     );
   }
 
-  protected async forceLoadMapItems(): Promise<void> {}
+  protected async forceLoadMapItems() {}
 
   get mapItems() {
     return [];
diff --color -bur --ex ./lib/Models/Definition/CreateModel.ts ./lib/Models/Definition/CreateModel.ts
--- ./lib/Models/Definition/CreateModel.ts	2024-12-18 14:25:56
+++ ./lib/Models/Definition/CreateModel.ts	2024-11-19 14:44:42
@@ -43,6 +43,29 @@
     readonly strata: Map<string, StratumTraits>;
 
     /**
+     * Babel transpiles this & correctly assigns undefined to this property as
+     * under `proposal-class-fields` declaring a property without initialising
+     * it still declares it, thus treated as
+     *
+     * `sourceReference = undefined;`
+     * >This differs a bit from certain transpiler implementations, which would
+     * >just entirely ignore a field declaration which has no initializer.
+     *
+     * instead of what we had expected with TypeScript's treatment of this class
+     * property being:
+     * `readonly sourceReference: BaseModel | undefined;`
+     *
+     * whereas ts-loader strips the type completely along with the implicit
+     * undefined assignment getting removed entirely before it hits
+     * babel-loader, side-stepping this case.
+     *
+     * Given we don't actually do anything different to the main constructor
+     * call in `BaseModel`, it feels more correct to remove this annotation
+     * rather than declare it here + re-assigning it in the `Model` constructor
+     */
+    // readonly sourceReference: BaseModel | undefined;
+
+    /**
      * Gets the uniqueIds of models that are known to contain this one.
      * This is important because strata sometimes flow from container to
      * container, so the properties of this model may not be complete
@@ -85,7 +108,7 @@
           this.terria,
           sourceReference
         );
-      } catch (_e) {
+      } catch (e) {
         throw TerriaError.from(`Failed to create model \`"${newId}"\``);
       }
 
@@ -168,7 +191,7 @@
         let maxIndex = -1;
         this.strata.forEach((s) =>
           (s[traitId] as Array<unknown> | undefined)?.forEach(
-            (_e, idx) => (maxIndex = idx > maxIndex ? idx : maxIndex)
+            (e, idx) => (maxIndex = idx > maxIndex ? idx : maxIndex)
           )
         );
 
diff --color -bur --ex ./lib/Models/Definition/addModelStrataView.ts ./lib/Models/Definition/addModelStrataView.ts
--- ./lib/Models/Definition/addModelStrataView.ts	2024-12-18 14:25:56
+++ ./lib/Models/Definition/addModelStrataView.ts	2024-11-19 14:44:42
@@ -14,11 +14,14 @@
 export default function addModelStrataView<
   T extends TraitsConstructor<ModelTraits>
 >(
-  /* TODO: Use a more specific type than "Function". */
-  /* eslint-disable-next-line @typescript-eslint/ban-types */
-  model: Stratified<InstanceType<T>> | Function,
+  model: Stratified<InstanceType<T>>,
   Traits: T
 ): ModelPropertiesFromTraits<InstanceType<T>>;
+export default function addModelStrataView<
+  T extends TraitsConstructor<ModelTraits>
+  /* TODO: Fix this overload type */
+  /* eslint-disable-next-line @typescript-eslint/ban-types */
+>(model: Function, Traits: T): ModelPropertiesFromTraits<InstanceType<T>>;
 export default function addModelStrataView<
   T extends TraitsConstructor<ModelTraits>
 >(model: any, Traits: T): ModelPropertiesFromTraits<InstanceType<T>> {
Only in ./lib/Models/FunctionParameters: BooleanParameterGroup.js
diff --color -bur --ex ./lib/Models/FunctionParameters/InfoParameter.ts ./lib/Models/FunctionParameters/InfoParameter.ts
--- ./lib/Models/FunctionParameters/InfoParameter.ts	2024-12-18 14:25:56
+++ ./lib/Models/FunctionParameters/InfoParameter.ts	2024-11-19 14:44:42
@@ -47,7 +47,7 @@
     return this._value;
   }
 
-  setValue(_strataId: string, v: string) {
+  setValue(strataId: string, v: string) {
     this._value = v;
   }
 
Only in ./lib/Models/FunctionParameters: RegionDataValue.js
Only in ./lib/Models/FunctionParameters: createParameterFromType.js
diff --color -bur --ex ./lib/Models/GlobeOrMap.ts ./lib/Models/GlobeOrMap.ts
--- ./lib/Models/GlobeOrMap.ts	2024-12-18 14:25:56
+++ ./lib/Models/GlobeOrMap.ts	2024-11-19 14:44:42
@@ -142,7 +142,7 @@
    */
   protected _createFeatureFromImageryLayerFeature(
     imageryFeature: ImageryLayerFeatureInfo
-  ): TerriaFeature {
+  ) {
     const feature = new TerriaFeature({
       id: imageryFeature.name
     });
@@ -215,7 +215,7 @@
     rectangle: Rectangle
   ): () => void;
 
-  async _highlightFeature(feature: TerriaFeature | undefined): Promise<void> {
+  async _highlightFeature(feature: TerriaFeature | undefined) {
     if (isDefined(this._removeHighlightCallback)) {
       await this._removeHighlightCallback();
       this._removeHighlightCallback = undefined;
diff --color -bur --ex ./lib/Models/Internationalization.ts ./lib/Models/Internationalization.ts
--- ./lib/Models/Internationalization.ts	2024-12-18 14:25:56
+++ ./lib/Models/Internationalization.ts	2024-11-19 14:44:42
@@ -1,4 +1,4 @@
-import i18next, { ReactOptions, TFunction } from "i18next";
+import i18next, { ReactOptions } from "i18next";
 import LanguageDetector from "i18next-browser-languagedetector";
 import HttpApi, { RequestCallback } from "i18next-http-backend";
 import { initReactI18next } from "react-i18next";
@@ -73,7 +73,7 @@
      */
     i18StartOptions: I18nStartOptions | undefined,
     terriajsResourcesBaseUrl: string
-  ): Promise<TFunction> {
+  ) {
     const languageConfig = Object.assign(
       defaultLanguageConfiguration,
       languageConfiguration
diff --color -bur --ex ./lib/Models/Leaflet.ts ./lib/Models/Leaflet.ts
--- ./lib/Models/Leaflet.ts	2024-12-18 14:25:56
+++ ./lib/Models/Leaflet.ts	2024-11-19 14:44:42
@@ -3,7 +3,6 @@
   action,
   autorun,
   computed,
-  IReactionDisposer,
   makeObservable,
   observable,
   reaction,
@@ -104,7 +103,6 @@
     clippingRectangle: Rectangle | undefined
   ) => GridLayer = computedFn((ip, clippingRectangle) => {
     const layerOptions = {
-      maxZoom: this.terria.configParameters.leafletMaxZoom,
       bounds: clippingRectangle && rectangleToLatLngBounds(clippingRectangle)
     };
     // We have two different kinds of ImageryProviderLeaflet layers
@@ -301,18 +299,18 @@
     // this._dragboxcompleted = false;
   }
 
-  getContainer(): HTMLElement {
+  getContainer() {
     return this.map.getContainer();
   }
 
-  pauseMapInteraction(): void {
+  pauseMapInteraction() {
     ++this._pauseMapInteractionCount;
     if (this._pauseMapInteractionCount === 1) {
       this.map.dragging.disable();
     }
   }
 
-  resumeMapInteraction(): void {
+  resumeMapInteraction() {
     --this._pauseMapInteractionCount;
     if (this._pauseMapInteractionCount === 0) {
       setTimeout(() => {
@@ -323,7 +321,7 @@
     }
   }
 
-  destroy(): void {
+  destroy() {
     this._disposeSelectedFeatureSubscription &&
       this._disposeSelectedFeatureSubscription();
     this._disposeSplitterReaction();
@@ -559,7 +557,7 @@
     );
   }
 
-  notifyRepaintRequired(): void {
+  notifyRepaintRequired() {
     // No action necessary.
   }
 
@@ -567,7 +565,7 @@
     latLngHeight: LatLonHeight,
     providerCoords: ProviderCoordsMap,
     existingFeatures: TerriaFeature[]
-  ): void {
+  ) {
     this._pickFeatures(
       L.latLng({
         lat: latLngHeight.latitude,
@@ -849,7 +847,7 @@
     });
   }
 
-  _reactToSplitterChanges(): IReactionDisposer {
+  _reactToSplitterChanges() {
     return autorun(() => {
       const items = this.terria.mainViewer.items.get();
       const showSplitter = this.terria.showSplitter;
diff --color -bur --ex ./lib/Models/LeafletAttribution.ts ./lib/Models/LeafletAttribution.ts
--- ./lib/Models/LeafletAttribution.ts	2024-12-18 14:25:56
+++ ./lib/Models/LeafletAttribution.ts	2024-11-19 14:44:42
@@ -28,7 +28,7 @@
     this.dataAttributions = observable([]);
   }
 
-  onAdd(map: L.Map): HTMLElement {
+  onAdd(map: L.Map) {
     map.attributionControl = this;
     this.map = map;
 
@@ -45,11 +45,11 @@
     return this._container;
   }
 
-  onRemove(): void {
+  onRemove() {
     this.map = undefined;
   }
 
-  _update(): void {
+  _update() {
     if (!this.map) {
       return;
     }
@@ -63,7 +63,7 @@
     }
   }
 
-  addAttribution(text: string): this {
+  addAttribution(text: string) {
     super.addAttribution(text);
     if (this.map) {
       runInAction(() => {
@@ -73,7 +73,7 @@
     return this;
   }
 
-  removeAttribution(text: string): this {
+  removeAttribution(text: string) {
     super.removeAttribution(text);
     if (this.map) {
       runInAction(() => {
diff --color -bur --ex ./lib/Models/NoViewer.ts ./lib/Models/NoViewer.ts
--- ./lib/Models/NoViewer.ts	2024-12-18 14:25:56
+++ ./lib/Models/NoViewer.ts	2024-11-19 14:44:42
@@ -23,7 +23,7 @@
     this.terria = terriaViewer.terria;
   }
 
-  destroy(): void {}
+  destroy() {}
 
   doZoomTo(
     v: CameraView | Rectangle | MappableMixin.Instance,
@@ -37,13 +37,13 @@
     return Promise.resolve();
   }
 
-  notifyRepaintRequired(): void {}
+  notifyRepaintRequired() {}
 
   pickFromLocation(
     _latLngHeight: LatLonHeight,
     _providerCoords: ProviderCoordsMap,
     _existingFeatures: TerriaFeature[]
-  ): void {}
+  ) {}
 
   getCurrentCameraView(): CameraView {
     return this._currentView;
@@ -53,8 +53,8 @@
     return undefined;
   }
 
-  pauseMapInteraction(): void {}
-  resumeMapInteraction(): void {}
+  pauseMapInteraction() {}
+  resumeMapInteraction() {}
   _addVectorTileHighlight(
     _imageryProvider:
       | MapboxVectorTileImageryProvider
diff --color -bur --ex ./lib/Models/SearchProviders/CesiumIonSearchProvider.ts ./lib/Models/SearchProviders/CesiumIonSearchProvider.ts
--- ./lib/Models/SearchProviders/CesiumIonSearchProvider.ts	2024-12-18 14:25:56
+++ ./lib/Models/SearchProviders/CesiumIonSearchProvider.ts	2024-11-19 14:44:42
@@ -81,7 +81,7 @@
       response = await loadJson<CesiumIonGeocodeResult>(
         `${this.url}?text=${searchText}&access_token=${this.key}`
       );
-    } catch (_e) {
+    } catch (e) {
       searchResults.message = {
         content: "translate#viewModels.searchErrorOccurred"
       };
Only in ./lib/Models/SearchProviders: NominatimSearchProvider.ts
diff --color -bur --ex ./lib/Models/SearchProviders/registerSearchProviders.ts ./lib/Models/SearchProviders/registerSearchProviders.ts
--- ./lib/Models/SearchProviders/registerSearchProviders.ts	2024-12-18 14:25:56
+++ ./lib/Models/SearchProviders/registerSearchProviders.ts	2024-11-19 14:44:42
@@ -1,7 +1,6 @@
 import AustralianGazetteerSearchProvider from "./AustralianGazetteerSearchProvider";
 import BingMapsSearchProvider from "./BingMapsSearchProvider";
 import CesiumIonSearchProvider from "./CesiumIonSearchProvider";
-import NominatimSearchProvider from "./NominatimSearchProvider";
 import SearchProviderFactory from "./SearchProviderFactory";
 
 export default function registerSearchProviders() {
@@ -13,11 +12,6 @@
   SearchProviderFactory.register(
     CesiumIonSearchProvider.type,
     CesiumIonSearchProvider
-  );
-
-  SearchProviderFactory.register(
-    NominatimSearchProvider.type,
-    NominatimSearchProvider
   );
 
   SearchProviderFactory.register(
diff --color -bur --ex ./lib/Models/ShareDataService.ts ./lib/Models/ShareDataService.ts
--- ./lib/Models/ShareDataService.ts	2024-12-18 14:25:56
+++ ./lib/Models/ShareDataService.ts	2024-11-19 14:44:42
@@ -28,7 +28,7 @@
     this.url = options.url;
   }
 
-  init(serverConfig: any): void {
+  init(serverConfig: any) {
     this.url = defaultValue(
       this.url,
       defaultValue(this.terria.configParameters.shareUrl, "share")
diff --color -bur --ex ./lib/Models/Terria.ts ./lib/Models/Terria.ts
--- ./lib/Models/Terria.ts	2024-12-18 14:25:56
+++ ./lib/Models/Terria.ts	2024-11-19 14:44:42
@@ -328,9 +328,6 @@
    */
   feedbackMinLength?: number;
 
-  /** Maximum zoom level for Leaflet map */
-  leafletMaxZoom: number;
-
   /** If undefined, then Leaflet's default attribution will be used */
   leafletAttributionPrefix?: string;
 
@@ -577,7 +574,6 @@
     feedbackPreamble: "translate#feedback.feedbackPreamble",
     feedbackPostamble: undefined,
     feedbackMinLength: 0,
-    leafletMaxZoom: 18,
     leafletAttributionPrefix: undefined,
     extraCreditLinks: [
       // Default credit links (shown at the bottom of the Cesium map)
@@ -766,7 +762,7 @@
     error: unknown,
     overrides?: TerriaErrorOverrides,
     forceRaiseToUser = false
-  ): void {
+  ) {
     const terriaError = TerriaError.from(error, overrides);
 
     // Set shouldRaiseToUser true if forceRaiseToUser agrument is true
@@ -838,7 +834,7 @@
   }
 
   @action
-  addModel(model: BaseModel, shareKeys?: string[]): void {
+  addModel(model: BaseModel, shareKeys?: string[]) {
     if (model.uniqueId === undefined) {
       throw new DeveloperError("A model without a `uniqueId` cannot be added.");
     }
@@ -859,7 +855,7 @@
    * Remove references to a model from Terria.
    */
   @action
-  removeModelReferences(model: BaseModel): void {
+  removeModelReferences(model: BaseModel) {
     this.removeSelectedFeaturesForModel(model);
     this.workbench.remove(model);
     if (model.uniqueId) {
@@ -868,7 +864,7 @@
   }
 
   @action
-  removeSelectedFeaturesForModel(model: BaseModel): void {
+  removeSelectedFeaturesForModel(model: BaseModel) {
     const pickedFeatures = this.pickedFeatures;
     if (pickedFeatures) {
       // Remove picked features that belong to the catalog item
@@ -932,14 +928,14 @@
   }
 
   @action
-  addShareKey(id: string, shareKey: string): void {
+  addShareKey(id: string, shareKey: string) {
     if (id === shareKey || this.shareKeysMap.has(shareKey)) return;
     this.shareKeysMap.set(shareKey, id);
     this.modelIdShareKeysMap.get(id)?.push(shareKey) ??
       this.modelIdShareKeysMap.set(id, [shareKey]);
   }
 
-  setupInitializationUrls(baseUri: uri.URI, config: any): void {
+  setupInitializationUrls(baseUri: uri.URI, config: any) {
     const initializationUrls: string[] = config?.initializationUrls || [];
     const initSources: InitSource[] = initializationUrls.map((url) => ({
       name: `Init URL from config ${url}`,
@@ -991,7 +987,7 @@
     this.initSources.push(...initSources);
   }
 
-  async start(options: StartOptions): Promise<void> {
+  async start(options: StartOptions) {
     // Some hashProperties need to be set before anything else happens
     const hashProperties = queryToObject(new URI(window.location).fragment());
 
@@ -1184,7 +1180,7 @@
   }
 
   @action
-  setUseNativeResolution(useNativeResolution: boolean): void {
+  setUseNativeResolution(useNativeResolution: boolean) {
     this.useNativeResolution = useNativeResolution;
   }
 
@@ -1193,7 +1189,7 @@
     this.baseMaximumScreenSpaceError = baseMaximumScreenSpaceError;
   }
 
-  async loadPersistedOrInitBaseMap(): Promise<void> {
+  async loadPersistedOrInitBaseMap() {
     const baseMapItems = this.baseMapsModel.baseMapItems;
     // Set baseMap fallback to first option
     let baseMap = baseMapItems[0];
@@ -1233,11 +1229,11 @@
   /**
    * Asynchronously loads init sources
    */
-  loadInitSources(): Promise<Result<void>> {
+  loadInitSources() {
     return this._initSourceLoader.load();
   }
 
-  dispose(): void {
+  dispose() {
     this._initSourceLoader.dispose();
   }
 
@@ -1247,7 +1243,7 @@
     name: string = "Application start data",
     /** Error severity to use for loading startData init sources - default will be `TerriaErrorSeverity.Error` */
     errorSeverity?: TerriaErrorSeverity
-  ): Promise<Result<void>> {
+  ) {
     try {
       await interpretStartData(this, startData, name, errorSeverity);
     } catch (e) {
@@ -1257,7 +1253,7 @@
     return await this.loadInitSources();
   }
 
-  async updateApplicationUrl(newUrl: string): Promise<Result<void>> {
+  async updateApplicationUrl(newUrl: string) {
     const uri = new URI(newUrl);
     const hash = uri.fragment();
     const hashProperties = queryToObject(hash);
@@ -1941,7 +1937,7 @@
   }
 
   @action
-  loadHomeCamera(homeCameraInit: JsonObject | HomeCameraInit): void {
+  loadHomeCamera(homeCameraInit: JsonObject | HomeCameraInit) {
     this.mainViewer.homeCamera = CameraView.fromJson(homeCameraInit);
   }
 
@@ -1957,7 +1953,7 @@
     magdaCatalogConfigUrl: string,
     config?: any,
     configUrlHeaders?: { [key: string]: string }
-  ): Promise<void> {
+  ) {
     const theConfig = config
       ? config
       : await loadJson5(magdaCatalogConfigUrl, configUrlHeaders);
@@ -1999,11 +1995,7 @@
     }
   }
 
-  async loadMagdaConfig(
-    configUrl: string,
-    config: any,
-    baseUri: uri.URI
-  ): Promise<void> {
+  async loadMagdaConfig(configUrl: string, config: any, baseUri: uri.URI) {
     const aspects = config.aspects;
     const configParams = aspects["terria-config"]?.parameters;
 
@@ -2133,10 +2125,7 @@
     });
   }
 
-  async initCorsProxy(
-    config: ConfigParameters,
-    serverConfig: any
-  ): Promise<void> {
+  async initCorsProxy(config: ConfigParameters, serverConfig: any) {
     if (config.proxyableDomainsUrl) {
       console.warn(i18next.t("models.terria.proxyableDomainsDeprecation"));
     }
@@ -2152,7 +2141,7 @@
       if (!defined(window.localStorage)) {
         return null;
       }
-    } catch (_e) {
+    } catch (e) {
       // SecurityError can arise if 3rd party cookies are blocked in Chrome and we're served in an iFrame
       return null;
     }
@@ -2170,7 +2159,7 @@
       if (!defined(window.localStorage)) {
         return false;
       }
-    } catch (_e) {
+    } catch (e) {
       return false;
     }
     window.localStorage.setItem(this.appName + "." + key, value.toString());
diff --color -bur --ex ./lib/Models/TimelineStack.ts ./lib/Models/TimelineStack.ts
--- ./lib/Models/TimelineStack.ts	2024-12-18 14:25:56
+++ ./lib/Models/TimelineStack.ts	2024-11-19 14:44:42
@@ -44,7 +44,7 @@
     makeObservable(this);
   }
 
-  activate(): void {
+  activate() {
     // Keep the Cesium clock in sync with the top layer's clock.
     this._disposeClockAutorun = autorun(() => {
       const topLayer = this.top;
@@ -89,7 +89,7 @@
     });
   }
 
-  deactivate(): void {
+  deactivate() {
     if (this._disposeClockAutorun) {
       this._disposeClockAutorun();
     }
@@ -142,7 +142,7 @@
    * @param item
    */
   @action
-  addToTop(item: TimeVarying): void {
+  addToTop(item: TimeVarying) {
     const currentIndex = this.items.indexOf(item);
     this.items.unshift(item);
     if (currentIndex > -1) {
@@ -157,7 +157,7 @@
    * @param item;
    */
   @action
-  remove(item: TimeVarying): void {
+  remove(item: TimeVarying) {
     const index = this.items.indexOf(item);
     this.items.splice(index, 1);
   }
@@ -166,7 +166,7 @@
    * Removes all layers.
    */
   @action
-  removeAll(): void {
+  removeAll() {
     this.items = [];
   }
 
@@ -177,7 +177,7 @@
    * @param item
    */
   @action
-  promoteToTop(item: TimeVarying): void {
+  promoteToTop(item: TimeVarying) {
     const currentIndex = this.items.indexOf(item);
     if (currentIndex > -1) {
       this.addToTop(item);
@@ -191,7 +191,7 @@
    * @param clock The clock to sync to.
    */
   @action
-  syncToClock(stratumId: string): void {
+  syncToClock(stratumId: string) {
     const clock = this.clock;
     const currentTime = JulianDate.toIso8601(
       clock.currentTime,
@@ -226,7 +226,7 @@
   }
 
   @action
-  setAlwaysShowTimeline(show = true): void {
+  setAlwaysShowTimeline(show = true) {
     if (!show) {
       this.defaultTimeVarying = undefined;
     } else {
diff --color -bur --ex ./lib/Models/UserDrawing.ts ./lib/Models/UserDrawing.ts
--- ./lib/Models/UserDrawing.ts	2024-12-18 14:25:56
+++ ./lib/Models/UserDrawing.ts	2024-11-19 14:44:42
@@ -188,7 +188,7 @@
     return this.getRectangleForShape();
   }
 
-  enterDrawMode(): void {
+  enterDrawMode() {
     // Create and setup a new dragHelper
     this.dragHelper = new DragPoints(this.terria, (customDataSource) => {
       if (typeof this.onPointMoved === "function") {
@@ -346,7 +346,7 @@
     }
   }
 
-  endDrawing(): void {
+  endDrawing() {
     this.dragHelper?.destroy();
     if (this.disposePickedFeatureSubscription) {
       this.disposePickedFeatureSubscription();
@@ -517,7 +517,7 @@
   /**
    * User has finished or cancelled; restore initial state.
    */
-  cleanUp(): void {
+  cleanUp() {
     this.terria.overlays.remove(this);
     this.pointEntities = new CustomDataSource("Points");
     this.otherEntities = new CustomDataSource("Lines and polygons");
@@ -556,7 +556,7 @@
    *     373.45 km
    *     Click to add another point
    */
-  getDialogMessage(): string {
+  getDialogMessage() {
     let message =
       "<strong>" +
       (typeof this.messageHeader === "function"
@@ -588,7 +588,7 @@
   /**
    * Figure out the text for the dialog button.
    */
-  getButtonText(): any {
+  getButtonText() {
     return defaultValue(
       this.buttonText,
       this.pointEntities.entities.values.length >= 2
@@ -600,7 +600,7 @@
   /**
    * Return a list of the coords for the user drawing
    */
-  getPointsForShape(): Cartesian3[] | undefined {
+  getPointsForShape() {
     if (isDefined(this.pointEntities.entities)) {
       const pos = [];
       for (let i = 0; i < this.pointEntities.entities.values.length; i++) {
diff --color -bur --ex ./lib/Models/Workbench.ts ./lib/Models/Workbench.ts
--- ./lib/Models/Workbench.ts	2024-12-18 14:25:56
+++ ./lib/Models/Workbench.ts	2024-11-19 14:44:42
@@ -12,6 +12,7 @@
 import CommonStrata from "./Definition/CommonStrata";
 import hasTraits from "./Definition/hasTraits";
 import { BaseModel } from "./Definition/Model";
+import MappableTraits from "../Traits/TraitsClasses/MappableTraits";
 
 const keepOnTop = (model: BaseModel) =>
   hasTraits(model, LayerOrderingTraits, "keepOnTop") && model.keepOnTop;
@@ -77,7 +78,7 @@
    * @param item The model.
    */
   @action
-  remove(item: BaseModel): void {
+  remove(item: BaseModel) {
     const index = this.indexOf(item);
     if (index >= 0) {
       this._items.splice(index, 1);
@@ -88,7 +89,7 @@
    * Removes all models from the workbench.
    */
   @action
-  removeAll(): void {
+  removeAll() {
     this._items.clear();
   }
 
@@ -96,7 +97,26 @@
    * Collapses all models from the workbench.
    */
   @action
-  collapseAll(): void {
+  disableAll() {
+    this.items.forEach((item) => {
+      hasTraits(item, MappableTraits, "show") &&
+        item.setTrait(CommonStrata.user, "show", false);
+    });
+  }
+
+  @action
+  enableAll() {
+    this.items.forEach((item) => {
+      hasTraits(item, MappableTraits, "show") &&
+        item.setTrait(CommonStrata.user, "show", true);
+    });
+  }
+
+  /**
+   * Collapses all models from the workbench.
+   */
+  @action
+  collapseAll() {
     this.items.map((item) => {
       item.setTrait(CommonStrata.user, "isOpenInWorkbench", false);
     });
@@ -106,7 +126,7 @@
    * Expands all models from the workbench.
    */
   @action
-  expandAll(): void {
+  expandAll() {
     this.items.map((item) => {
       item.setTrait(CommonStrata.user, "isOpenInWorkbench", true);
     });
@@ -240,7 +260,7 @@
    * @param item The model.
    * @returns True if the model or its dereferenced equivalent exists on the workbench; otherwise, false.
    */
-  contains(item: BaseModel): boolean {
+  contains(item: BaseModel) {
     return this.indexOf(item) >= 0;
   }
 
@@ -249,7 +269,7 @@
    * @param item The model.
    * @returns The index of the model or its dereferenced equivalent, or -1 if neither exist on the workbench.
    */
-  indexOf(item: BaseModel): number {
+  indexOf(item: BaseModel) {
     return this.items.findIndex(
       (model) =>
         model === item || dereferenceModel(model) === dereferenceModel(item)
@@ -262,7 +282,7 @@
    * @param newIndex The new index to shift the model to.
    */
   @action
-  moveItemToIndex(item: BaseModel, newIndex: number): void {
+  moveItemToIndex(item: BaseModel, newIndex: number) {
     if (!this.contains(item)) {
       return;
     }
diff --color -bur --ex ./lib/Models/Workflows/TableStylingWorkflow.ts ./lib/Models/Workflows/TableStylingWorkflow.ts
--- ./lib/Models/Workflows/TableStylingWorkflow.ts	2024-12-18 14:25:56
+++ ./lib/Models/Workflows/TableStylingWorkflow.ts	2024-11-19 14:44:42
@@ -496,7 +496,7 @@
               id: item.uniqueId,
               name: getName(item)
             })),
-          setDimensionValue: (_stratumId, value) => {
+          setDimensionValue: (stratumId, value) => {
             const item = this.item.terria.workbench.items.find(
               (i) => i.uniqueId === value
             );
@@ -595,7 +595,7 @@
                 }
               : undefined
           ]),
-          setDimensionValue: (_stratumId, value) => {
+          setDimensionValue: (stratumId, value) => {
             if (
               value === "fill" ||
               value === "point-size" ||
@@ -1952,7 +1952,6 @@
             ),
             isOpen: true,
             selectableDimensions: filterOutUndefined([
-              // eslint-disable-next-line no-unsafe-optional-chaining
               ...traits.enum?.map((enumPoint, idx) => {
                 const dims: SelectableDimensionGroup = {
                   type: "group",
@@ -2550,7 +2549,7 @@
             }
           }
         ]),
-      (_labelTraits, _nullValue, label) => label
+      (labelTraits, nullValue, label) => label
     );
   }
 
@@ -2690,7 +2689,7 @@
                   }
                 ]) as FlatSelectableDimension[])
           ]),
-        (_trail, _nullValue, label) => label
+        (trail, nullValue, label) => label
       ),
       {
         type: "group",
diff --color -bur --ex ./lib/ReactViewModels/MouseCoords.ts ./lib/ReactViewModels/MouseCoords.ts
--- ./lib/ReactViewModels/MouseCoords.ts	2024-12-18 14:25:56
+++ ./lib/ReactViewModels/MouseCoords.ts	2024-11-19 14:44:42
@@ -81,13 +81,13 @@
   }
 
   @action.bound
-  toggleUseProjection(): void {
+  toggleUseProjection() {
     this.useProjection = !this.useProjection;
     this.updateEvent.raiseEvent();
   }
 
   @action
-  updateCoordinatesFromCesium(terria: Terria, position: Cartesian2): void {
+  updateCoordinatesFromCesium(terria: Terria, position: Cartesian2) {
     if (!terria.cesium) {
       return;
     }
@@ -190,10 +190,7 @@
   }
 
   @action
-  updateCoordinatesFromLeaflet(
-    terria: Terria,
-    mouseMoveEvent: MouseEvent
-  ): void {
+  updateCoordinatesFromLeaflet(terria: Terria, mouseMoveEvent: MouseEvent) {
     if (!terria.leaflet) {
       return;
     }
@@ -209,7 +206,7 @@
   }
 
   @action
-  cartographicToFields(coordinates: Cartographic, errorBar?: number): void {
+  cartographicToFields(coordinates: Cartographic, errorBar?: number) {
     this.cartographic = Cartographic.clone(coordinates, scratchCartographic);
 
     const latitude = CesiumMath.toDegrees(coordinates.latitude);
@@ -241,7 +238,7 @@
   sampleAccurateHeight(
     terrainProvider: TerrainProvider,
     position: Cartographic
-  ): void {
+  ) {
     if (this.tileRequestInFlight) {
       // A tile request is already in flight, so reschedule for later.
       this.debounceSampleAccurateHeight.cancel();
diff --color -bur --ex ./lib/ReactViewModels/NotificationState.ts ./lib/ReactViewModels/NotificationState.ts
--- ./lib/ReactViewModels/NotificationState.ts	2024-12-18 14:25:56
+++ ./lib/ReactViewModels/NotificationState.ts	2024-11-19 14:44:42
@@ -34,7 +34,7 @@
   }
 
   @action
-  addNotificationToQueue(notification: Notification): void {
+  addNotificationToQueue(notification: Notification) {
     const alreadyQueued =
       this.notifications.filter(
         (item) =>
diff --color -bur --ex ./lib/ReactViewModels/SearchState.ts ./lib/ReactViewModels/SearchState.ts
--- ./lib/ReactViewModels/SearchState.ts	2024-12-18 14:25:56
+++ ./lib/ReactViewModels/SearchState.ts	2024-11-19 14:44:42
@@ -92,7 +92,7 @@
     );
   }
 
-  dispose(): void {
+  dispose() {
     this._catalogSearchDisposer();
     this._locationSearchDisposer();
     this._unifiedSearchDisposer();
@@ -117,7 +117,7 @@
   }
 
   @action
-  searchCatalog(): void {
+  searchCatalog() {
     if (this.isWaitingToStartCatalogSearch) {
       this.isWaitingToStartCatalogSearch = false;
       if (this.catalogSearchResults) {
@@ -132,12 +132,12 @@
   }
 
   @action
-  setCatalogSearchText(newText: string): void {
+  setCatalogSearchText(newText: string) {
     this.catalogSearchText = newText;
   }
 
   @action
-  searchLocations(): void {
+  searchLocations() {
     if (this.isWaitingToStartLocationSearch) {
       this.isWaitingToStartLocationSearch = false;
       this.locationSearchResults.forEach((results) => {
@@ -150,7 +150,7 @@
   }
 
   @action
-  searchUnified(): void {
+  searchUnified() {
     if (this.isWaitingToStartUnifiedSearch) {
       this.isWaitingToStartUnifiedSearch = false;
       this.unifiedSearchResults.forEach((results) => {
diff --color -bur --ex ./lib/ReactViewModels/ViewState.ts ./lib/ReactViewModels/ViewState.ts
--- ./lib/ReactViewModels/ViewState.ts	2024-12-18 14:25:56
+++ ./lib/ReactViewModels/ViewState.ts	2024-11-19 14:44:42
@@ -159,19 +159,19 @@
     [];
 
   @action
-  setSelectedTrainerItem(trainerItem: string): void {
+  setSelectedTrainerItem(trainerItem: string) {
     this.selectedTrainerItem = trainerItem;
   }
   @action
-  setTrainerBarVisible(bool: boolean): void {
+  setTrainerBarVisible(bool: boolean) {
     this.trainerBarVisible = bool;
   }
   @action
-  setTrainerBarShowingAllSteps(bool: boolean): void {
+  setTrainerBarShowingAllSteps(bool: boolean) {
     this.trainerBarShowingAllSteps = bool;
   }
   @action
-  setTrainerBarExpanded(bool: boolean): void {
+  setTrainerBarExpanded(bool: boolean) {
     this.trainerBarExpanded = bool;
     // if collapsing trainer bar, also hide steps
     if (!bool) {
@@ -179,17 +179,17 @@
     }
   }
   @action
-  setCurrentTrainerItemIndex(index: number): void {
+  setCurrentTrainerItemIndex(index: number) {
     this.currentTrainerItemIndex = index;
     this.currentTrainerStepIndex = 0;
   }
   @action
-  setCurrentTrainerStepIndex(index: number): void {
+  setCurrentTrainerStepIndex(index: number) {
     this.currentTrainerStepIndex = index;
   }
 
   @action
-  setActionBarVisible(visible: boolean): void {
+  setActionBarVisible(visible: boolean) {
     this.isActionBarVisible = visible;
   }
 
@@ -198,7 +198,7 @@
    */
   @observable bottomDockHeight: number = 0;
   @action
-  setBottomDockHeight(height: number): void {
+  setBottomDockHeight(height: number) {
     if (this.bottomDockHeight !== height) {
       this.bottomDockHeight = height;
     }
@@ -274,11 +274,11 @@
       );
   }
   @action
-  setTourIndex(index: number): void {
+  setTourIndex(index: number) {
     this.currentTourIndex = index;
   }
   @action
-  setShowTour(bool: boolean): void {
+  setShowTour(bool: boolean) {
     this.showTour = bool;
     // If we're enabling the tour, make sure the trainer is collapsed
     if (bool) {
@@ -286,19 +286,19 @@
     }
   }
   @action
-  closeTour(): void {
+  closeTour() {
     this.currentTourIndex = -1;
     this.showTour = false;
   }
   @action
-  previousTourPoint(): void {
+  previousTourPoint() {
     const currentIndex = this.currentTourIndex;
     if (currentIndex !== 0) {
       this.currentTourIndex = currentIndex - 1;
     }
   }
   @action
-  nextTourPoint(): void {
+  nextTourPoint() {
     const totalTourPoints = this.tourPointsWithValidRefs.length;
     const currentIndex = this.currentTourIndex;
     if (currentIndex >= totalTourPoints - 1) {
@@ -308,18 +308,18 @@
     }
   }
   @action
-  closeCollapsedNavigation(): void {
+  closeCollapsedNavigation() {
     this.showCollapsedNavigation = false;
   }
 
   @action
-  updateAppRef(refName: string, ref: Ref<HTMLElement>): void {
+  updateAppRef(refName: string, ref: Ref<HTMLElement>) {
     if (!this.appRefs.get(refName) || this.appRefs.get(refName) !== ref) {
       this.appRefs.set(refName, ref);
     }
   }
   @action
-  deleteAppRef(refName: string): void {
+  deleteAppRef(refName: string) {
     this.appRefs.delete(refName);
   }
 
@@ -537,7 +537,7 @@
     );
   }
 
-  dispose(): void {
+  dispose() {
     this._pickedFeaturesSubscription();
     this._disclaimerVisibleSubscription();
     this._mobileMenuSubscription();
@@ -552,7 +552,7 @@
   }
 
   @action
-  triggerResizeEvent(): void {
+  triggerResizeEvent() {
     triggerResize();
   }
 
@@ -560,7 +560,7 @@
   setIsMapFullScreen(
     bool: boolean,
     animationDuration = WORKBENCH_RESIZE_ANIMATION_DURATION
-  ): void {
+  ) {
     this.isMapFullScreen = bool;
     // Allow any animations to finish, then trigger a resize.
 
@@ -576,44 +576,44 @@
   }
 
   @action
-  toggleStoryBuilder(): void {
+  toggleStoryBuilder() {
     this.storyBuilderShown = !this.storyBuilderShown;
   }
 
   @action
-  setTopElement(key: string): void {
+  setTopElement(key: string) {
     this.topElement = key;
   }
 
   @action
-  openAddData(): void {
+  openAddData() {
     this.explorerPanelIsVisible = true;
     this.activeTabCategory = DATA_CATALOG_NAME;
     this.switchMobileView(this.mobileViewOptions.data);
   }
 
   @action
-  openUserData(): void {
+  openUserData() {
     this.explorerPanelIsVisible = true;
     this.activeTabCategory = USER_DATA_NAME;
   }
 
   @action
-  closeCatalog(): void {
+  closeCatalog() {
     this.explorerPanelIsVisible = false;
     this.switchMobileView(null);
     this.clearPreviewedItem();
   }
 
   @action
-  searchInCatalog(query: string): void {
+  searchInCatalog(query: string) {
     this.openAddData();
     this.searchState.catalogSearchText = query;
     this.searchState.searchCatalog();
   }
 
   @action
-  clearPreviewedItem(): void {
+  clearPreviewedItem() {
     this.userDataPreviewedItem = undefined;
     this._previewedItem = undefined;
   }
@@ -696,12 +696,12 @@
   }
 
   @action
-  switchMobileView(viewName: string | null): void {
+  switchMobileView(viewName: string | null) {
     this.mobileView = viewName;
   }
 
   @action
-  showHelpPanel(): void {
+  showHelpPanel() {
     this.terria.analytics?.logEvent(Category.help, HelpAction.panelOpened);
     this.showHelpMenu = true;
     this.helpPanelExpanded = false;
@@ -713,7 +713,7 @@
   openHelpPanelItemFromSharePanel(
     evt: React.MouseEvent<HTMLDivElement>,
     itemName: string
-  ): void {
+  ) {
     evt.preventDefault();
     evt.stopPropagation();
     this.setRetainSharePanel(true);
@@ -722,48 +722,48 @@
   }
 
   @action
-  selectHelpMenuItem(key: string): void {
+  selectHelpMenuItem(key: string) {
     this.selectedHelpMenuItem = key;
     this.helpPanelExpanded = true;
   }
 
   @action
-  hideHelpPanel(): void {
+  hideHelpPanel() {
     this.showHelpMenu = false;
   }
 
   @action
-  setRetainSharePanel(retain: boolean): void {
+  setRetainSharePanel(retain: boolean) {
     this.retainSharePanel = retain;
   }
 
   @action
-  changeSearchState(newText: string): void {
+  changeSearchState(newText: string) {
     this.searchState.catalogSearchText = newText;
   }
 
   @action
-  setDisclaimerVisible(bool: boolean): void {
+  setDisclaimerVisible(bool: boolean) {
     this.disclaimerVisible = bool;
   }
 
   @action
-  hideDisclaimer(): void {
+  hideDisclaimer() {
     this.setDisclaimerVisible(false);
   }
 
   @action
-  setShowSatelliteGuidance(showSatelliteGuidance: boolean): void {
+  setShowSatelliteGuidance(showSatelliteGuidance: boolean) {
     this.showSatelliteGuidance = showSatelliteGuidance;
   }
 
   @action
-  setShowWelcomeMessage(welcomeMessageShown: boolean): void {
+  setShowWelcomeMessage(welcomeMessageShown: boolean) {
     this.showWelcomeMessage = welcomeMessageShown;
   }
 
   @action
-  setVideoGuideVisible(videoName: string): void {
+  setVideoGuideVisible(videoName: string) {
     this.videoGuideVisible = videoName;
   }
 
@@ -771,7 +771,7 @@
    * Removes references of a model from viewState
    */
   @action
-  removeModelReferences(model: BaseModel): void {
+  removeModelReferences(model: BaseModel) {
     if (this._previewedItem === model) this._previewedItem = undefined;
     if (this.userDataPreviewedItem === model)
       this.userDataPreviewedItem = undefined;
@@ -782,7 +782,7 @@
     feature: string,
     state: boolean,
     persistent: boolean = false
-  ): void {
+  ) {
     const featureIndexInPrompts = this.featurePrompts.indexOf(feature);
     if (
       state &&
@@ -798,27 +798,27 @@
     }
   }
 
-  viewingUserData(): boolean {
+  viewingUserData() {
     return this.activeTabCategory === USER_DATA_NAME;
   }
 
-  afterTerriaStarted(): void {
+  afterTerriaStarted() {
     if (this.terria.configParameters.openAddData) {
       this.openAddData();
     }
   }
 
   @action
-  openTool(tool: Tool): void {
+  openTool(tool: Tool) {
     this.currentTool = tool;
   }
 
   @action
-  closeTool(): void {
+  closeTool() {
     this.currentTool = undefined;
   }
 
-  @action setPrintWindow(window: Window | null): void {
+  @action setPrintWindow(window: Window | null) {
     if (this.printWindow) {
       this.printWindow.close();
     }
@@ -826,13 +826,13 @@
   }
 
   @action
-  toggleMobileMenu(): void {
+  toggleMobileMenu() {
     this.setTopElement("mobileMenu");
     this.mobileMenuVisible = !this.mobileMenuVisible;
   }
 
   @action
-  runStories(): void {
+  runStories() {
     this.storyBuilderShown = false;
     this.storyShown = true;
 
diff --color -bur --ex ./lib/ReactViews/ActionBar/ActionBarPortal.tsx ./lib/ReactViews/ActionBar/ActionBarPortal.tsx
--- ./lib/ReactViews/ActionBar/ActionBarPortal.tsx	2024-12-12 12:56:09
+++ ./lib/ReactViews/ActionBar/ActionBarPortal.tsx	2024-11-19 14:44:42
@@ -26,8 +26,8 @@
   height: 56px;
   visibility: ${(p) => (p.show ? "visible" : "hidden")};
   max-width: 60%;
-  bottom: ${(p) => (p.show ? "80px" : "-56px")};
-  left: 0;
+  bottom: ${(p) => (p.show ? "130px" : "-56px")};
+  left: ${(p) => p.theme.workbenchWidth}px;
   right: 0;
   margin: auto;
 
diff --color -bur --ex ./lib/ReactViews/Analytics/BooleanParameterGroupEditor.jsx ./lib/ReactViews/Analytics/BooleanParameterGroupEditor.jsx
--- ./lib/ReactViews/Analytics/BooleanParameterGroupEditor.jsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Analytics/BooleanParameterGroupEditor.jsx	2024-11-19 14:44:42
@@ -2,7 +2,9 @@
 import createReactClass from "create-react-class";
 import PropTypes from "prop-types";
 import MoreOrLess from "../Generic/MoreOrLess.jsx";
+
 import BooleanParameterEditor from "./BooleanParameterEditor.tsx";
+
 import Styles from "./parameter-editors.scss";
 
 const BooleanParameterGroupEditor = createReactClass({
@@ -11,7 +13,7 @@
     previewed: PropTypes.object,
     parameter: PropTypes.object
   },
-  toggleDiv: function (divID, _ev) {
+  toggleDiv: function (divID, ev) {
     const thisDiv = document.getElementById(divID);
     if (thisDiv.style.display === "none") {
       thisDiv.style.display = "block";
@@ -19,7 +21,7 @@
       thisDiv.style.display = "none";
     }
   },
-  toggleAll: function (inputArgs, _ev) {
+  toggleAll: function (inputArgs, ev) {
     // if OneForAll selected, set the value of all BooleanParameters in
     // ParameterList to true, disable them,
     // else set the value of all BooleanParameters in ParameterList to
@@ -120,5 +122,4 @@
     return <div>{this.renderCheckboxGroup()}</div>;
   }
 });
-
-export default BooleanParameterGroupEditor;
+module.exports = BooleanParameterGroupEditor;
diff --color -bur --ex ./lib/ReactViews/Analytics/GeoJsonParameterEditor.jsx ./lib/ReactViews/Analytics/GeoJsonParameterEditor.jsx
--- ./lib/ReactViews/Analytics/GeoJsonParameterEditor.jsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Analytics/GeoJsonParameterEditor.jsx	2024-11-19 14:44:42
@@ -1,3 +1,5 @@
+"use strict";
+
 import React from "react";
 import PropTypes from "prop-types";
 import defined from "terriajs-cesium/Source/Core/defined";
@@ -142,4 +144,4 @@
   return getRegionPickerDisplayValue(value, parameter);
 }
 
-export default withTranslation()(GeoJsonParameterEditor);
+module.exports = withTranslation()(GeoJsonParameterEditor);
diff --color -bur --ex ./lib/ReactViews/Analytics/InvokeFunction.jsx ./lib/ReactViews/Analytics/InvokeFunction.jsx
--- ./lib/ReactViews/Analytics/InvokeFunction.jsx	2024-12-23 14:57:45
+++ ./lib/ReactViews/Analytics/InvokeFunction.jsx	2024-11-19 14:44:42
@@ -52,11 +52,13 @@
     t: PropTypes.func.isRequired
   };
 
+  /* eslint-disable-next-line camelcase */
   UNSAFE_componentWillMount() {
     this.parametersViewModel = new FunctionViewModel(this.props.previewed);
   }
 
-  UNSAFE_componentWillUpdate(nextProps, _nextState) {
+  /* eslint-disable-next-line camelcase */
+  UNSAFE_componentWillUpdate(nextProps, nextState) {
     if (nextProps.previewed !== this.parametersViewModel.catalogFunction) {
       // Clear previous parameters view model, because this is a different catalog function.
       this.parametersViewModel = new FunctionViewModel(nextProps.previewed);
@@ -82,7 +84,7 @@
     // Key should include the previewed item identifier so that
     // components are refreshed when different previewed items are
     // displayed
-    return this.props.previewed.functionParameters.map((param, _i) => (
+    return this.props.previewed.functionParameters.map((param, i) => (
       <ParameterEditor
         key={param.id + this.props.previewed.uniqueId}
         parameter={param}
@@ -152,4 +154,4 @@
   }
 }
 
-export default withTranslation()(InvokeFunction);
+module.exports = withTranslation()(InvokeFunction);
diff --color -bur --ex ./lib/ReactViews/Analytics/ParameterEditor.jsx ./lib/ReactViews/Analytics/ParameterEditor.jsx
--- ./lib/ReactViews/Analytics/ParameterEditor.jsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Analytics/ParameterEditor.jsx	2024-11-19 14:44:42
@@ -1,6 +1,11 @@
+"use strict";
+
 import React from "react";
+
 import createReactClass from "create-react-class";
+
 import PropTypes from "prop-types";
+
 import PointParameterEditor from "./PointParameterEditor";
 import LineParameterEditor from "./LineParameterEditor";
 import PolygonParameterEditor from "./PolygonParameterEditor";
@@ -16,8 +21,10 @@
 import NumberParameterEditor from "./NumberParameterEditor";
 import GeoJsonParameterEditor from "./GeoJsonParameterEditor";
 import defined from "terriajs-cesium/Source/Core/defined";
+
 import Styles from "./parameter-editors.scss";
 import InfoParameterEditor from "./InfoParameterEditor";
+
 import parseCustomMarkdownToReact from "../Custom/parseCustomMarkdownToReact";
 
 const ParameterEditor = createReactClass({
@@ -393,4 +400,4 @@
   }
 ];
 
-export default ParameterEditor;
+module.exports = ParameterEditor;
diff --color -bur --ex ./lib/ReactViews/Analytics/PointParameterEditor.jsx ./lib/ReactViews/Analytics/PointParameterEditor.jsx
--- ./lib/ReactViews/Analytics/PointParameterEditor.jsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Analytics/PointParameterEditor.jsx	2024-11-19 14:44:42
@@ -36,7 +36,7 @@
       PointParameterEditor.setValueFromText(e, this.props.parameter);
   },
 
-  inputOnBlur(_e) {
+  inputOnBlur(e) {
     const isCurrentlyInvalid = !this.props.parameterViewModel.isValueValid;
     this.props.parameterViewModel.wasEverBlurredWhileInvalid =
       this.props.parameterViewModel.wasEverBlurredWhileInvalid ||
Only in ./lib/ReactViews/Analytics: RegionDataParameterEditor.jsx
diff --color -bur --ex ./lib/ReactViews/Analytics/RegionParameterEditor.jsx ./lib/ReactViews/Analytics/RegionParameterEditor.jsx
--- ./lib/ReactViews/Analytics/RegionParameterEditor.jsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Analytics/RegionParameterEditor.jsx	2024-11-19 14:44:42
@@ -1,6 +1,11 @@
+"use strict";
+
 import React from "react";
+
 import createReactClass from "create-react-class";
+
 import PropTypes from "prop-types";
+
 import Styles from "./parameter-editors.scss";
 import RegionPicker, { getDisplayValue } from "./RegionPicker";
 import MapInteractionMode from "../../Models/MapInteractionMode";
@@ -78,4 +83,4 @@
   viewState.explorerPanelIsVisible = false;
 };
 
-export default RegionParameterEditor;
+module.exports = RegionParameterEditor;
diff --color -bur --ex ./lib/ReactViews/Analytics/RegionPicker.jsx ./lib/ReactViews/Analytics/RegionPicker.jsx
--- ./lib/ReactViews/Analytics/RegionPicker.jsx	2024-12-23 14:57:45
+++ ./lib/ReactViews/Analytics/RegionPicker.jsx	2024-11-19 14:44:42
@@ -44,6 +44,7 @@
     };
   },
 
+  /* eslint-disable-next-line camelcase */
   UNSAFE_componentWillMount() {
     this._loadingRegionProvider = undefined;
     this._selectedRegionCatalogItem = undefined;
diff --color -bur --ex ./lib/ReactViews/Analytics/RegionTypeParameterEditor.jsx ./lib/ReactViews/Analytics/RegionTypeParameterEditor.jsx
--- ./lib/ReactViews/Analytics/RegionTypeParameterEditor.jsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Analytics/RegionTypeParameterEditor.jsx	2024-11-19 14:44:42
@@ -1,3 +1,5 @@
+"use strict";
+
 import React from "react";
 import createReactClass from "create-react-class";
 import PropTypes from "prop-types";
@@ -62,4 +64,4 @@
   }
 });
 
-export default RegionTypeParameterEditor;
+module.exports = RegionTypeParameterEditor;
diff --color -bur --ex ./lib/ReactViews/BadgeBar.tsx ./lib/ReactViews/BadgeBar.tsx
--- ./lib/ReactViews/BadgeBar.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/BadgeBar.tsx	2024-11-19 14:44:42
@@ -12,24 +12,30 @@
   const theme = useTheme();
   return (
     <Box
-      paddedHorizontally={3}
+      flex
+      column
+      styledMargin="0 15px"
       justifySpaceBetween
       whiteSpace="nowrap"
-      styledMinHeight="40px"
+      styledMinHeight="70px"
       verticalCenter
       css={`
-        border-top: 1px solid ${theme.darkWithOverlay};
-        border-bottom: 1px solid ${theme.darkWithOverlay};
+        border-top: 1px solid ${theme.darkLighter};
+        border-bottom: 1px solid ${theme.darkLighter};
+        justify-content: space-evenly;
+        align-items: center;
       `}
     >
+      <Box>
       <TextSpan textLight uppercase overflowHide overflowEllipsis>
-        {props.label} {props.badge ? `(${props.badge})` : null}
+          {props.label} {props.badge !== undefined ? `(${props.badge})` : null}
       </TextSpan>
-
+      </Box>
       <Box
-        styledMaxWidth="60%"
+        flex
+        styledWidth="100%"
         css={`
-          gap: 15px;
+          justify-content: space-between;
         `}
       >
         {props.children}
diff --color -bur --ex ./lib/ReactViews/BottomDock/BottomDock.tsx ./lib/ReactViews/BottomDock/BottomDock.tsx
--- ./lib/ReactViews/BottomDock/BottomDock.tsx	2024-12-12 12:56:09
+++ ./lib/ReactViews/BottomDock/BottomDock.tsx	2024-11-19 14:44:42
@@ -6,13 +6,14 @@
 import ChartPanel from "../Custom/Chart/ChartPanel";
 import measureElement, { MeasureElementProps } from "../HOCs/measureElement";
 import withControlledVisibility from "../HOCs/withControlledVisibility";
-import Styles from "./bottom-dock.scss";
 import ChartDisclaimer from "./ChartDisclaimer";
 import Timeline from "./Timeline/Timeline";
+import { DefaultTheme, withTheme } from "styled-components";
 
 interface PropsType {
   terria: Terria;
   viewState: ViewState;
+  theme: DefaultTheme;
 }
 
 @observer
@@ -37,12 +38,12 @@
   }
 
   render() {
-    const { terria } = this.props;
+    const { terria, theme } = this.props;
     const top = terria.timelineStack.top;
 
     return (
       <div
-        className={`${Styles.bottomDock} ${
+        className={`${
           this.props.viewState.topElement === "BottomDock" ? "top-element" : ""
         }`}
         ref={(element) => {
@@ -53,12 +54,20 @@
         tabIndex={0}
         onClick={this.handleClick.bind(this)}
         css={`
-          background: ${(p: any) => p.theme.dark};
+          z-index: 10;
+          background: ${theme.transparentDark};
+          backdrop-filter: ${theme.blur};
+          bottom: 0;
+          right: 0;
         `}
       >
         <div id="TJS-BottomDockFirstPortal" />
+        {!this.props.viewState.useSmallScreenInterface && (
+          <>
             <ChartDisclaimer terria={terria} viewState={this.props.viewState} />
             <ChartPanel terria={terria} viewState={this.props.viewState} />
+          </>
+        )}
         {top && (
           <Timeline
             terria={terria}
@@ -72,4 +81,6 @@
   }
 }
 
-export default withControlledVisibility(measureElement(BottomDock, false));
+export default withControlledVisibility(
+  withTheme(measureElement(BottomDock, false))
+);
diff --color -bur --ex ./lib/ReactViews/BottomDock/Timeline/CesiumTimeline.jsx ./lib/ReactViews/BottomDock/Timeline/CesiumTimeline.jsx
--- ./lib/ReactViews/BottomDock/Timeline/CesiumTimeline.jsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/BottomDock/Timeline/CesiumTimeline.jsx	2024-11-19 14:44:42
@@ -1,3 +1,5 @@
+"use strict";
+
 import Styles from "!style-loader!css-loader?modules&sourceMap!sass-loader?sourceMap!./cesium-timeline.scss";
 import createReactClass from "create-react-class";
 import dateFormat from "dateformat";
@@ -103,4 +105,4 @@
   }
 });
 
-export default CesiumTimeline;
+module.exports = CesiumTimeline;
diff --color -bur --ex ./lib/ReactViews/BottomDock/Timeline/DateTimePicker.tsx ./lib/ReactViews/BottomDock/Timeline/DateTimePicker.tsx
--- ./lib/ReactViews/BottomDock/Timeline/DateTimePicker.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/BottomDock/Timeline/DateTimePicker.tsx	2024-11-19 14:44:42
@@ -21,8 +21,9 @@
 import Spacing from "../../../Styled/Spacing";
 import Icon from "../../../Styled/Icon";
 import { formatDateTime } from "./DateFormats";
-import dateFormat from "dateformat";
-import DatePicker from "react-datepicker";
+
+const dateFormat = require("dateformat");
+const DatePicker = require("react-datepicker").default;
 
 function daysInMonth(month: number, year: number) {
   const n = new Date(year, month, 0).getDate();
diff --color -bur --ex ./lib/ReactViews/BottomDock/Timeline/Timeline.jsx ./lib/ReactViews/BottomDock/Timeline/Timeline.jsx
--- ./lib/ReactViews/BottomDock/Timeline/Timeline.jsx	2024-12-12 12:56:09
+++ ./lib/ReactViews/BottomDock/Timeline/Timeline.jsx	2024-11-19 14:44:42
@@ -89,6 +89,7 @@
           className={Styles.textRow}
           css={`
             background: ${(p) => p.theme.dark};
+            min-height: 30px;
           `}
         >
           <div
diff --color -bur --ex ./lib/ReactViews/BottomDock/Timeline/timeline.scss ./lib/ReactViews/BottomDock/Timeline/timeline.scss
--- ./lib/ReactViews/BottomDock/Timeline/timeline.scss	2024-12-12 12:56:09
+++ ./lib/ReactViews/BottomDock/Timeline/timeline.scss	2024-11-19 14:44:42
@@ -8,12 +8,6 @@
   padding-bottom: 5px;
   padding-right: 5px;
   font-family: $font-base;
-
-  // @media (max-width: $mobile) {
-  //   position: fixed;
-  //   bottom: 0px;
-  //   background: $dark;
-  // }
 }
 
 .text-row {
@@ -21,7 +15,7 @@
   color: #fff;
   font-size: $font-size-mid-small;
   position: absolute;
-  bottom: 44px;
+  bottom: 41px;
   left: 0px;
   // background: $dark;
   padding: 3px 5px;
Only in ./lib/ReactViews/BottomDock: bottom-dock.scss
diff --color -bur --ex ./lib/ReactViews/BottomDock/bottom-dock.scss.d.ts ./lib/ReactViews/BottomDock/bottom-dock.scss.d.ts
--- ./lib/ReactViews/BottomDock/bottom-dock.scss.d.ts	2024-12-12 12:56:09
+++ ./lib/ReactViews/BottomDock/bottom-dock.scss.d.ts	2024-11-19 14:44:42
@@ -1,8 +1,7 @@
 // This file is automatically generated.
 // Please do not change this file!
 interface CssExports {
-  'bottom-dock': string;
-  'bottomDock': string;
+
 }
 declare var cssExports: CssExports;
 export = cssExports;
diff --color -bur --ex ./lib/ReactViews/CleanDropdownPanel/CleanDropdownPanel.jsx ./lib/ReactViews/CleanDropdownPanel/CleanDropdownPanel.jsx
--- ./lib/ReactViews/CleanDropdownPanel/CleanDropdownPanel.jsx	2024-12-23 14:57:45
+++ ./lib/ReactViews/CleanDropdownPanel/CleanDropdownPanel.jsx	2024-11-19 14:44:42
@@ -65,6 +65,7 @@
     }
   },
 
+  /* eslint-disable-next-line camelcase */
   UNSAFE_componentWillReceiveProps(nextProps) {
     if (nextProps.forceClosed) {
       this.onDismissed();
diff --color -bur --ex ./lib/ReactViews/Custom/ApiTableCustomComponent.ts ./lib/ReactViews/Custom/ApiTableCustomComponent.ts
--- ./lib/ReactViews/Custom/ApiTableCustomComponent.ts	2024-12-18 14:25:56
+++ ./lib/ReactViews/Custom/ApiTableCustomComponent.ts	2024-11-19 14:44:42
@@ -69,7 +69,7 @@
 
     try {
       parsed.apiTableCatalogItemJson = JSON.parse(jsonAttr);
-    } catch (_e) {
+    } catch (e) {
       console.error("Couldn't parse json for ApiTableChartCustomComponent");
     }
 
diff --color -bur --ex ./lib/ReactViews/Custom/Chart/BottomDockChart.jsx ./lib/ReactViews/Custom/Chart/BottomDockChart.jsx
--- ./lib/ReactViews/Custom/Chart/BottomDockChart.jsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Custom/Chart/BottomDockChart.jsx	2024-11-19 14:44:42
@@ -289,7 +289,7 @@
                   offset={i * 50}
                 />
               ))}
-              {this.yAxes.map((y, _i) => (
+              {this.yAxes.map((y, i) => (
                 <GridRows
                   key={`grid-${y.units}`}
                   width={this.plotWidth}
diff --color -bur --ex ./lib/ReactViews/Custom/Chart/ChartExpandAndDownloadButtons.tsx ./lib/ReactViews/Custom/Chart/ChartExpandAndDownloadButtons.tsx
--- ./lib/ReactViews/Custom/Chart/ChartExpandAndDownloadButtons.tsx	2024-12-23 14:57:45
+++ ./lib/ReactViews/Custom/Chart/ChartExpandAndDownloadButtons.tsx	2024-11-19 14:44:42
@@ -74,7 +74,9 @@
 
       try {
         terria.addModel(itemToExpand);
-      } catch {}
+      } catch {
+        /* eslint-disable-line no-empty */
+      }
       (await workbench.add(itemToExpand)).raiseError(terria, undefined, true);
     });
   }
diff --color -bur --ex ./lib/ReactViews/Custom/Chart/ChartPanelDownloadButton.tsx ./lib/ReactViews/Custom/Chart/ChartPanelDownloadButton.tsx
--- ./lib/ReactViews/Custom/Chart/ChartPanelDownloadButton.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Custom/Chart/ChartPanelDownloadButton.tsx	2024-11-19 14:44:42
@@ -1,3 +1,4 @@
+"use strict";
 import FileSaver from "file-saver";
 import { runInAction, toJS } from "mobx";
 import { observer } from "mobx-react";
diff --color -bur --ex ./lib/ReactViews/Custom/Chart/FeatureInfoPanelChart.tsx ./lib/ReactViews/Custom/Chart/FeatureInfoPanelChart.tsx
--- ./lib/ReactViews/Custom/Chart/FeatureInfoPanelChart.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Custom/Chart/FeatureInfoPanelChart.tsx	2024-11-19 14:44:42
@@ -199,7 +199,7 @@
             numTicks={4}
             stroke="#a0a0a0"
             tickStroke="#a0a0a0"
-            tickLabelProps={(_value, i, ticks) => {
+            tickLabelProps={(value, i, ticks) => {
               // To prevent the first and last values from getting clipped,
               // we position the first label text to start at the tick position
               // and the last label text to finish at the tick position. For all
diff --color -bur --ex ./lib/ReactViews/Custom/Chart/chart-panel.scss ./lib/ReactViews/Custom/Chart/chart-panel.scss
--- ./lib/ReactViews/Custom/Chart/chart-panel.scss	2024-12-12 12:56:09
+++ ./lib/ReactViews/Custom/Chart/chart-panel.scss	2024-11-19 14:44:42
@@ -8,7 +8,8 @@
   left: 0;
   right: 0;
   z-index: 10;
-  background: $chart-panel-background;
+  // background: $transparent-dark;
+  // backdrop-filter: $blur;
   padding-bottom: 13px;
 }
 
diff --color -bur --ex ./lib/ReactViews/Custom/Chart/downloadHrefWorker.js ./lib/ReactViews/Custom/Chart/downloadHrefWorker.js
--- ./lib/ReactViews/Custom/Chart/downloadHrefWorker.js	2024-12-18 14:25:56
+++ ./lib/ReactViews/Custom/Chart/downloadHrefWorker.js	2024-11-19 14:44:42
@@ -106,7 +106,7 @@
   if (columnValueArrays.length < 1) {
     return;
   }
-  const rows = columnValueArrays[0].map(function (_value0, rowIndex) {
+  const rows = columnValueArrays[0].map(function (value0, rowIndex) {
     return columnValueArrays.map(function (values) {
       return values[rowIndex];
     });
diff --color -bur --ex ./lib/ReactViews/Custom/Collapsible/Collapsible.tsx ./lib/ReactViews/Custom/Collapsible/Collapsible.tsx
--- ./lib/ReactViews/Custom/Collapsible/Collapsible.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Custom/Collapsible/Collapsible.tsx	2024-11-19 14:44:42
@@ -1,3 +1,5 @@
+"use strict";
+
 import { observer } from "mobx-react";
 import React, { useEffect, useState } from "react";
 import Box, { IBoxProps } from "../../../Styled/Box";
diff --color -bur --ex ./lib/ReactViews/Custom/CollapsibleCustomComponent.ts ./lib/ReactViews/Custom/CollapsibleCustomComponent.ts
--- ./lib/ReactViews/Custom/CollapsibleCustomComponent.ts	2024-12-18 14:25:56
+++ ./lib/ReactViews/Custom/CollapsibleCustomComponent.ts	2024-11-19 14:44:42
@@ -22,7 +22,7 @@
   }
 
   processNode(
-    _context: ProcessNodeContext,
+    context: ProcessNodeContext,
     node: DomElement,
     children: ReactElement[]
   ): ReactElement {
diff --color -bur --ex ./lib/ReactViews/Custom/CustomComponent.ts ./lib/ReactViews/Custom/CustomComponent.ts
--- ./lib/ReactViews/Custom/CustomComponent.ts	2024-12-18 14:25:56
+++ ./lib/ReactViews/Custom/CustomComponent.ts	2024-11-19 14:44:42
@@ -72,7 +72,6 @@
    * @param context The context for the custom component
    * @param node The node that should possibly be processed.
    */
-  // eslint-disable-next-line @typescript-eslint/no-unused-vars
   shouldProcessNode(context: ProcessNodeContext, node: DomElement): boolean {
     return this.name === node.name;
   }
diff --color -bur --ex ./lib/ReactViews/Custom/ExternalLink.tsx ./lib/ReactViews/Custom/ExternalLink.tsx
--- ./lib/ReactViews/Custom/ExternalLink.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Custom/ExternalLink.tsx	2024-11-19 14:44:42
@@ -2,7 +2,9 @@
 import { useTranslation } from "react-i18next";
 import styled from "styled-components";
 import { useViewState } from "../Context";
-import Icon, { StyledIcon } from "../../Styled/Icon";
+
+const Icon = require("../../Styled/Icon").default;
+const { StyledIcon } = require("../../Styled/Icon");
 
 interface Props {
   attributes: AnchorHTMLAttributes<HTMLAnchorElement>;
diff --color -bur --ex ./lib/ReactViews/Custom/TerriaTooltip.tsx ./lib/ReactViews/Custom/TerriaTooltip.tsx
--- ./lib/ReactViews/Custom/TerriaTooltip.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Custom/TerriaTooltip.tsx	2024-11-19 14:44:42
@@ -21,7 +21,7 @@
   }
 
   processNode(
-    _context: ProcessNodeContext,
+    context: ProcessNodeContext,
     node: DomElement,
     children: ReactElement[]
   ): ReactElement {
diff --color -bur --ex ./lib/ReactViews/Custom/parseCustomHtmlToReact.ts ./lib/ReactViews/Custom/parseCustomHtmlToReact.ts
--- ./lib/ReactViews/Custom/parseCustomHtmlToReact.ts	2024-12-23 14:57:45
+++ ./lib/ReactViews/Custom/parseCustomHtmlToReact.ts	2024-11-19 14:44:42
@@ -12,9 +12,10 @@
   ProcessNodeContext
 } from "./CustomComponent";
 import { ExternalLinkIcon, ExternalLinkWithWarning } from "./ExternalLink";
-import HtmlToReact from "html-to-react";
-import utils from "html-to-react/lib/utils";
 
+const HtmlToReact = require("html-to-react");
+const utils = require("html-to-react/lib/utils");
+
 const htmlToReactParser = new HtmlToReact.Parser({
   decodeEntities: true
 });
@@ -78,6 +79,7 @@
     shouldProcessNode: (node: DomElement) => node.name === "a",
     processNode: function (node: DomElement, children, index) {
       // Make sure any <a href> tags open in a new window
+      // eslint-disable-line react/display-name
       const elementProps = {
         key: "anchor-" + keyIndex++,
         target: "_blank",
diff --color -bur --ex ./lib/ReactViews/Custom/registerCustomComponentTypes.ts ./lib/ReactViews/Custom/registerCustomComponentTypes.ts
--- ./lib/ReactViews/Custom/registerCustomComponentTypes.ts	2024-12-18 14:25:56
+++ ./lib/ReactViews/Custom/registerCustomComponentTypes.ts	2024-11-19 14:44:42
@@ -1,3 +1,5 @@
+"use strict";
+
 import { when } from "mobx";
 import { addOrReplaceRemoteFileUploadType } from "../../Core/getDataType";
 import Terria from "../../Models/Terria";
diff --color -bur --ex ./lib/ReactViews/DataCatalog/DataCatalogGroup.jsx ./lib/ReactViews/DataCatalog/DataCatalogGroup.jsx
--- ./lib/ReactViews/DataCatalog/DataCatalogGroup.jsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/DataCatalog/DataCatalogGroup.jsx	2024-11-19 14:44:42
@@ -152,4 +152,4 @@
   }
 }
 
-export default withTranslation()(DataCatalogGroup);
+module.exports = withTranslation()(DataCatalogGroup);
diff --color -bur --ex ./lib/ReactViews/DataCatalog/DataCatalogItem.tsx ./lib/ReactViews/DataCatalog/DataCatalogItem.tsx
--- ./lib/ReactViews/DataCatalog/DataCatalogItem.tsx	2024-12-12 12:56:09
+++ ./lib/ReactViews/DataCatalog/DataCatalogItem.tsx	2024-11-19 14:44:42
@@ -51,7 +51,7 @@
       .then((result) => result.raiseError(viewState.terria));
 
   const toggleEnable = async (event: React.MouseEvent<HTMLButtonElement>) => {
-    const keepCatalogOpen = event.shiftKey || event.ctrlKey;
+    const keepCatalogOpen = true; //event.shiftKey || event.ctrlKey;
     await toggleItemOnMapFromCatalog(viewState, item, keepCatalogOpen, {
       [ToggleOnMapOp.Add]: DataSourceAction.addFromCatalogue,
       [ToggleOnMapOp.Remove]: DataSourceAction.removeFromCatalogue
diff --color -bur --ex ./lib/ReactViews/DataCatalog/DataCatalogMember.jsx ./lib/ReactViews/DataCatalog/DataCatalogMember.jsx
--- ./lib/ReactViews/DataCatalog/DataCatalogMember.jsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/DataCatalog/DataCatalogMember.jsx	2024-11-19 14:44:42
@@ -1,3 +1,5 @@
+"use strict";
+
 import { observer } from "mobx-react";
 import PropTypes from "prop-types";
 import React from "react";
diff --color -bur --ex ./lib/ReactViews/Disclaimer.d.ts ./lib/ReactViews/Disclaimer.d.ts
--- ./lib/ReactViews/Disclaimer.d.ts	2024-12-18 14:25:56
+++ ./lib/ReactViews/Disclaimer.d.ts	2024-11-19 14:44:42
@@ -1,5 +1,5 @@
 import React from "react";
 
-declare class Disclaimer extends React.Component<object> {}
+declare class Disclaimer extends React.Component<{}> {}
 
 export default Disclaimer;
diff --color -bur --ex ./lib/ReactViews/Disclaimer.jsx ./lib/ReactViews/Disclaimer.jsx
--- ./lib/ReactViews/Disclaimer.jsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Disclaimer.jsx	2024-11-19 14:44:42
@@ -51,6 +51,10 @@
     t: PropTypes.func.isRequired
   };
 
+  constructor(props) {
+    super(props);
+  }
+
   confirm(confirmCallbackFn) {
     if (confirmCallbackFn) {
       confirmCallbackFn();
diff --color -bur --ex ./lib/ReactViews/DragDropNotification.d.ts ./lib/ReactViews/DragDropNotification.d.ts
--- ./lib/ReactViews/DragDropNotification.d.ts	2024-12-18 14:25:56
+++ ./lib/ReactViews/DragDropNotification.d.ts	2024-11-19 14:44:42
@@ -1,5 +1,5 @@
 import React from "react";
 
-declare class DragDropNotification extends React.Component<object> {}
+declare class DragDropNotification extends React.Component<{}> {}
 
 export default DragDropNotification;
diff --color -bur --ex ./lib/ReactViews/DragWrapper.jsx ./lib/ReactViews/DragWrapper.jsx
--- ./lib/ReactViews/DragWrapper.jsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/DragWrapper.jsx	2024-11-19 14:44:42
@@ -63,4 +63,4 @@
   children: PropTypes.node.isRequired
 };
 
-export default DragWrapper;
+module.exports = DragWrapper;
diff --color -bur --ex ./lib/ReactViews/ExplorerWindow/ExplorerWindow.tsx ./lib/ReactViews/ExplorerWindow/ExplorerWindow.tsx
--- ./lib/ReactViews/ExplorerWindow/ExplorerWindow.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/ExplorerWindow/ExplorerWindow.tsx	2024-11-19 14:44:42
@@ -4,12 +4,15 @@
 import { useViewState } from "../Context";
 import ModalPopup from "./ModalPopup";
 import Tabs from "./Tabs";
+import Text from "../../Styled/Text";
+import Box from "../../Styled/Box";
+import { useTheme } from "styled-components";
 
 export const ExplorerWindowElementName = "AddData";
 
 export default observer<React.FC>(function ExplorerWindow() {
   const viewState = useViewState();
-
+  const theme = useTheme();
   const onClose = action(() => {
     viewState.closeCatalog();
     viewState.switchMobileView("nowViewing");
@@ -37,6 +40,18 @@
       onStartAnimatingIn={onStartAnimatingIn}
       onDoneAnimatingIn={onDoneAnimatingIn}
     >
+      <Box
+        css={`
+          background: ${theme.dark};
+          border-radius: 6px 6px 0 0;
+        `}
+        paddedRatio={4}
+        fullWidth
+      >
+        <Text extraExtraLarge textLight>
+          Terria Data Catalogue
+        </Text>
+      </Box>
       <Tabs terria={viewState.terria} viewState={viewState} />
     </ModalPopup>
   );
diff --color -bur --ex ./lib/ReactViews/ExplorerWindow/Tabs/MyDataTab/AddData.jsx ./lib/ReactViews/ExplorerWindow/Tabs/MyDataTab/AddData.jsx
--- ./lib/ReactViews/ExplorerWindow/Tabs/MyDataTab/AddData.jsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/ExplorerWindow/Tabs/MyDataTab/AddData.jsx	2024-11-19 14:44:42
@@ -336,4 +336,4 @@
   return extensions.map((ext) => `.${ext}`).join(", ");
 }
 
-export default withTranslation()(AddData);
+module.exports = withTranslation()(AddData);
diff --color -bur --ex ./lib/ReactViews/ExplorerWindow/Tabs/MyDataTab/CesiumIonConnector.tsx ./lib/ReactViews/ExplorerWindow/Tabs/MyDataTab/CesiumIonConnector.tsx
--- ./lib/ReactViews/ExplorerWindow/Tabs/MyDataTab/CesiumIonConnector.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/ExplorerWindow/Tabs/MyDataTab/CesiumIonConnector.tsx	2024-11-19 14:44:42
@@ -692,7 +692,7 @@
 
     try {
       allowed = new URI(allowedUrl);
-    } catch (_e) {
+    } catch (e) {
       continue;
     }
 
diff --color -bur --ex ./lib/ReactViews/ExplorerWindow/Tabs/MyDataTab/FileInput.jsx ./lib/ReactViews/ExplorerWindow/Tabs/MyDataTab/FileInput.jsx
--- ./lib/ReactViews/ExplorerWindow/Tabs/MyDataTab/FileInput.jsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/ExplorerWindow/Tabs/MyDataTab/FileInput.jsx	2024-11-19 14:44:42
@@ -3,6 +3,7 @@
 import createReactClass from "create-react-class";
 import classNames from "classnames";
 import { withTranslation } from "react-i18next";
+
 import Styles from "./file-input.scss";
 
 // When uploading a file
@@ -57,4 +58,4 @@
   }
 });
 
-export default withTranslation()(FileInput);
+module.exports = withTranslation()(FileInput);
diff --color -bur --ex ./lib/ReactViews/ExplorerWindow/Tabs/MyDataTab/MyDataTab.jsx ./lib/ReactViews/ExplorerWindow/Tabs/MyDataTab/MyDataTab.jsx
--- ./lib/ReactViews/ExplorerWindow/Tabs/MyDataTab/MyDataTab.jsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/ExplorerWindow/Tabs/MyDataTab/MyDataTab.jsx	2024-11-19 14:44:42
@@ -1,5 +1,6 @@
 import React from "react";
 import { observer } from "mobx-react";
+
 import classNames from "classnames";
 import Icon from "../../../../Styled/Icon";
 import Box from "../../../../Styled/Box";
@@ -7,6 +8,7 @@
 import DataPreview from "../../../Preview/DataPreview.jsx";
 import AddData from "./AddData.jsx";
 import { withTranslation, Trans } from "react-i18next";
+
 import Styles from "./my-data-tab.scss";
 import DataCatalogMember from "../../../DataCatalog/DataCatalogMember";
 
@@ -208,4 +210,4 @@
   }
 }
 
-export default withTranslation()(MyDataTab);
+module.exports = withTranslation()(MyDataTab);
diff --color -bur --ex ./lib/ReactViews/ExplorerWindow/Tabs/MyDataTab/my-data-tab.scss ./lib/ReactViews/ExplorerWindow/Tabs/MyDataTab/my-data-tab.scss
--- ./lib/ReactViews/ExplorerWindow/Tabs/MyDataTab/my-data-tab.scss	2024-12-18 14:25:56
+++ ./lib/ReactViews/ExplorerWindow/Tabs/MyDataTab/my-data-tab.scss	2024-11-19 14:44:42
@@ -30,7 +30,7 @@
   height: calc(100% - 30px);
   width: calc(100% - 30px);
   overflow: auto;
-  background: $modal-secondary-bg;
+  /*background: $modal-secondary-bg;*/
   text-align: center;
   color: $dark-lighter;
   line-height: 2;
diff --color -bur --ex ./lib/ReactViews/ExplorerWindow/Tabs.jsx ./lib/ReactViews/ExplorerWindow/Tabs.jsx
--- ./lib/ReactViews/ExplorerWindow/Tabs.jsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/ExplorerWindow/Tabs.jsx	2024-11-19 14:44:42
@@ -7,9 +7,10 @@
 import styled from "styled-components";
 import defined from "terriajs-cesium/Source/Core/defined";
 import MappableMixin from "../../ModelMixins/MappableMixin";
-import Styles from "./tabs.scss";
+import Box from "../../Styled/Box";
 import DataCatalogTab from "./Tabs/DataCatalogTab";
 import MyDataTab from "./Tabs/MyDataTab/MyDataTab";
+import Styles from "./tabs.scss";
 
 @observer
 class Tabs extends React.Component {
@@ -66,7 +67,7 @@
           .filter(
             (member) => member !== this.props.terria.catalog.userAddedDataGroup
           )
-          .map((member, _i) => ({
+          .map((member, i) => ({
             name: member.nameInCatalog,
             title: `data-catalog-${member.name}`,
             category: "data-catalog",
@@ -139,9 +140,7 @@
         <ul
           className={Styles.tabList}
           role="tablist"
-          css={`
-            background-color: ${(p) => p.theme.colorPrimary};
-          `}
+          style={{ padding: "10px 24px", background: "#fff" }}
         >
           {tabs.map((item, i) => (
             <li
@@ -187,18 +186,22 @@
 
 const ButtonTab = styled.button`
   ${(props) => `
+    /* overrides padding and margin in scss */
+    padding: 10px 12px;
+    margin: 0;
+
     background: transparent;
-    color: ${props.theme.textLight};
+    color: ${props.theme.dark};
     &:hover,
     &:focus {
       background: ${props.theme.textLight};
-      color: ${props.theme.colorPrimary};
+      ${props.isCurrent && `border: 1px solid ${props.theme.greyLighter};`}
     }
     ${
       props.isCurrent &&
       `
       background: ${props.theme.textLight};
-      color: ${props.theme.colorPrimary};
+      border: 1px solid ${props.theme.greyLighter};
     `
     }
 
diff --color -bur --ex ./lib/ReactViews/ExplorerWindow/explorer-window.scss ./lib/ReactViews/ExplorerWindow/explorer-window.scss
--- ./lib/ReactViews/ExplorerWindow/explorer-window.scss	2024-12-12 12:56:09
+++ ./lib/ReactViews/ExplorerWindow/explorer-window.scss	2024-11-19 14:44:42
@@ -25,7 +25,7 @@
 
 .explorer-panel {
   position: relative;
-  background: $modal-bg;
+  // background: $modal-bg;
   color: $modal-text;
   border-radius: $radius-small;
   box-shadow: 0 0 15px 6px rgba(100, 100, 100, 0.3);
@@ -65,12 +65,12 @@
   composes: btn-transparent from "../../Sass/common/_buttons.scss";
   font-size: $font-size-mid-small;
   padding: 4px 10px;
-  margin: $padding-small * 1.5 $padding-small;
+  margin: 15px;
   font-weight: bold;
   position: absolute;
   top: 0;
   right: 0;
-
+  z-index: 1;
   &,
   &:hover,
   &:focus {
diff --color -bur --ex ./lib/ReactViews/ExplorerWindow/tabs.scss ./lib/ReactViews/ExplorerWindow/tabs.scss
--- ./lib/ReactViews/ExplorerWindow/tabs.scss	2024-12-12 12:56:09
+++ ./lib/ReactViews/ExplorerWindow/tabs.scss	2024-11-19 14:44:42
@@ -8,7 +8,7 @@
   composes: clearfix from "../../Sass/common/_base.scss";
   padding-right: 100px;
   // background: $color-primary;
-  border-radius: 3px 3px 0 0;
+  // border-radius: 3px 3px 0 0;
 }
 
 .tab-list__item {
@@ -18,7 +18,8 @@
 
 .tab-panel {
   width: 100%;
-  height: $modal-content-height;
+  // subtract height of new modal title
+  height: calc($modal-content-height - 64px);
 
   &:focus {
     outline: none;
@@ -33,7 +34,8 @@
   border-top: 1px solid $grey-lighter;
   height: 100%;
   overflow: hidden;
-  border-radius: 3px;
+  border-bottom-left-radius: 6px;
+  border-bottom-right-radius: 6px;
 }
 
 .tab-left-col {
diff --color -bur --ex ./lib/ReactViews/FeatureInfo/FeatureInfoPanel.tsx ./lib/ReactViews/FeatureInfo/FeatureInfoPanel.tsx
--- ./lib/ReactViews/FeatureInfo/FeatureInfoPanel.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/FeatureInfo/FeatureInfoPanel.tsx	2024-11-19 14:44:42
@@ -30,7 +30,8 @@
 import { withViewState } from "../Context";
 import Styles from "./feature-info-panel.scss";
 import FeatureInfoCatalogItem from "./FeatureInfoCatalogItem";
-import DragWrapper from "../DragWrapper";
+
+const DragWrapper = require("../DragWrapper");
 
 interface Props {
   viewState: ViewState;
diff --color -bur --ex ./lib/ReactViews/FeatureInfo/feature-info-panel.scss ./lib/ReactViews/FeatureInfo/feature-info-panel.scss
--- ./lib/ReactViews/FeatureInfo/feature-info-panel.scss	2024-12-12 12:56:09
+++ ./lib/ReactViews/FeatureInfo/feature-info-panel.scss	2024-11-19 14:44:42
@@ -4,7 +4,8 @@
 .panel {
   background: $feature-info-bg;
   color: $feature-info-color;
-  border-radius: $radius-small;
+  border-radius: $radius-xlarge;
+  overflow: hidden;
   display: none;
 
   a {
diff --color -bur --ex ./lib/ReactViews/Generic/Dropdown.jsx ./lib/ReactViews/Generic/Dropdown.jsx
--- ./lib/ReactViews/Generic/Dropdown.jsx	2024-12-23 14:57:45
+++ ./lib/ReactViews/Generic/Dropdown.jsx	2024-11-19 14:44:42
@@ -39,6 +39,7 @@
     };
   },
 
+  /* eslint-disable-next-line camelcase */
   UNSAFE_componentWillMount() {
     // this._element is updated by the ref callback attribute, https://facebook.github.io/react/docs/more-about-refs.html
     this.buttonElement = undefined;
diff --color -bur --ex ./lib/ReactViews/Generic/Editor.jsx ./lib/ReactViews/Generic/Editor.jsx
--- ./lib/ReactViews/Generic/Editor.jsx	2024-12-23 14:57:45
+++ ./lib/ReactViews/Generic/Editor.jsx	2024-11-19 14:44:42
@@ -1,7 +1,8 @@
+/* eslint-disable camelcase */
 import React, { useRef } from "react";
 import { Editor } from "@tinymce/tinymce-react";
 import PropTypes from "prop-types";
-// eslint-disable-next-line @typescript-eslint/no-unused-vars
+// eslint-disable-next-line no-unused-vars
 import tinymce from "tinymce"; // must import despite being unused
 /* Required TinyMCE components */
 import "tinymce/icons/default";
@@ -28,7 +29,7 @@
 
   return (
     <Editor
-      onInit={(_evt, editor) => (editorRef.current = editor)}
+      onInit={(evt, editor) => (editorRef.current = editor)}
       value={props.html}
       onEditorChange={props.onChange}
       init={{
diff --color -bur --ex ./lib/ReactViews/Generic/MoreOrLess.jsx ./lib/ReactViews/Generic/MoreOrLess.jsx
--- ./lib/ReactViews/Generic/MoreOrLess.jsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Generic/MoreOrLess.jsx	2024-11-19 14:44:42
@@ -31,5 +31,4 @@
     );
   }
 });
-
-export default MoreOrLess;
+module.exports = MoreOrLess;
diff --color -bur --ex ./lib/ReactViews/Generic/Responsive.tsx ./lib/ReactViews/Generic/Responsive.tsx
--- ./lib/ReactViews/Generic/Responsive.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Generic/Responsive.tsx	2024-11-19 14:44:42
@@ -1,6 +1,6 @@
 import PropTypes, { InferProps } from "prop-types";
 import React from "react";
-import MediaQuery from "react-responsive";
+const MediaQuery = require("react-responsive").default;
 
 // This should come from some config some where
 const small = 768;
diff --color -bur --ex ./lib/ReactViews/Generic/Timer/Timer.jsx ./lib/ReactViews/Generic/Timer/Timer.jsx
--- ./lib/ReactViews/Generic/Timer/Timer.jsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Generic/Timer/Timer.jsx	2024-11-19 14:44:42
@@ -1,7 +1,12 @@
+"use strict";
+
 import React from "react";
 import PropTypes from "prop-types";
+
 import createGuid from "terriajs-cesium/Source/Core/createGuid";
+
 import { createTimer, startTimer as startTimerAnimation } from "./drawTimer";
+
 import Styles from "./timer.scss";
 
 // Set the name of the hidden property and the change event for visibility
@@ -20,7 +25,7 @@
 }
 
 class Timer extends React.PureComponent {
-  constructor(_props) {
+  constructor(props) {
     super();
 
     // We need a unique selector for the timer container. If there are multiple timers, we need to know which one to
@@ -113,4 +118,4 @@
   tooltipText: PropTypes.string
 };
 
-export default Timer;
+module.exports = Timer;
diff --color -bur --ex ./lib/ReactViews/HOCs/withControlledVisibility.tsx ./lib/ReactViews/HOCs/withControlledVisibility.tsx
--- ./lib/ReactViews/HOCs/withControlledVisibility.tsx	2024-12-23 14:57:45
+++ ./lib/ReactViews/HOCs/withControlledVisibility.tsx	2024-11-19 14:44:42
@@ -13,6 +13,7 @@
  * as prop
  */
 export default <P extends object>(WrappedComponent: React.ComponentType<P>) => {
+  // eslint-disable-next-line require-jsdoc
   function WithControlledVisibility({
     elementConfig,
     ...props
diff --color -bur --ex ./lib/ReactViews/HelpScreens/HelpPrompt.tsx ./lib/ReactViews/HelpScreens/HelpPrompt.tsx
--- ./lib/ReactViews/HelpScreens/HelpPrompt.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/HelpScreens/HelpPrompt.tsx	2024-11-19 14:44:42
@@ -3,10 +3,13 @@
  */
 import React, { useState } from "react";
 import { useTheme } from "styled-components";
+
 import FadeIn from "../Transitions/FadeIn/FadeIn";
 import SlideUpFadeIn from "../Transitions/SlideUpFadeIn/SlideUpFadeIn";
-import TourExplanationBox from "../Tour/TourExplanationBox";
-import TourPrefaceBox from "../Tour/TourPrefaceBox";
+
+const TourExplanationBox: any = require("../Tour/TourExplanationBox").default;
+const TourPrefaceBox: any = require("../Tour/TourPrefaceBox").default;
+
 import CloseButton from "../Generic/CloseButton";
 import ViewState from "../../ReactViewModels/ViewState";
 import Text from "../../Styled/Text";
diff --color -bur --ex ./lib/ReactViews/Map/BottomBar/BottomBar.tsx ./lib/ReactViews/Map/BottomBar/BottomBar.tsx
--- ./lib/ReactViews/Map/BottomBar/BottomBar.tsx	2024-12-12 12:56:09
+++ ./lib/ReactViews/Map/BottomBar/BottomBar.tsx	2024-11-19 14:44:42
@@ -1,32 +1,92 @@
+import { observer } from "mobx-react";
 import { VFC } from "react";
+import styled, { useTheme } from "styled-components";
 import Box from "../../../Styled/Box";
+import Text from "../../../Styled/Text";
 import { useViewState } from "../../Context";
+import parseCustomHtmlToReact from "../../Custom/parseCustomHtmlToReact";
 import { MapCredits } from "./Credits";
 import { DistanceLegend } from "./DistanceLegend";
 import { LocationBar } from "./LocationBar";
-import React from "react";
 
-export const BottomBar: VFC = () => {
+export const BottomBar: VFC = observer(() => {
   const viewState = useViewState();
+  const theme = useTheme();
+
+  const screenDataAttributions =
+    viewState.terria.cesium?.cesiumScreenDataAttributions;
+
   return (
+    <>
     <Box
       fullWidth
       justifySpaceBetween
       css={`
-        background: linear-gradient(180deg, #000000 0%, #000000 100%);
+          flex-direction: column;
           font-size: 0.7rem;
+          width: 100%;
+          background: ${theme.dark};
           opacity: 0.75;
+          backdrop-filter: ${theme.blur};
+          background: ${theme.dark};
+          opacity: 0.75;
+          backdrop-filter: ${theme.blur};
+          margin-top: 2px;
         `}
       >
+        {/* On screen data attributions. At the moment, this supports only Cesium viewer.
+          Needed for Google Photorealistic 3D Tiles
+        */}
+        {!!screenDataAttributions?.length && (
+          <AttributionsContainer textLight mini>
+            {screenDataAttributions
+              .flatMap((attributionHtml, i) => [
+                <span key={attributionHtml}>
+                  {parseCustomHtmlToReact(attributionHtml)}
+                </span>,
+                <span key={`delimiter-${i}`}> • </span>
+              ])
+              .slice(0, -1)}
+          </AttributionsContainer>
+        )}
+        <div
+          css={`
+            width: 100%;
+            display: flex;
+            flex-direction: row;
+            justify-content: space-between;
+          `}
+        >
+          <div
+            css={`
+              ${viewState.useSmallScreenInterface ? `` : `padding: 0 15px;`}
+            `}
+          >
       <MapCredits
-        hideTerriaLogo={!!viewState.terria.configParameters.hideTerriaLogo}
+              hideTerriaLogo={
+                !!viewState.terria.configParameters.hideTerriaLogo
+              }
               credits={viewState.terria.configParameters.extraCreditLinks?.slice()}
               currentViewer={viewState.terria.mainViewer.currentViewer}
             />
+          </div>
       <Box paddedHorizontally={4} gap={2}>
-        <LocationBar mouseCoords={viewState.terria.currentViewer.mouseCoords} />
+            <LocationBar
+              mouseCoords={viewState.terria.currentViewer.mouseCoords}
+            />
             <DistanceLegend />
           </Box>
+        </div>
       </Box>
+    </>
   );
-};
+});
+
+// Use padding to avoid other UI elements
+const AttributionsContainer = styled(Text)`
+  text-shadow: 0 0 2px #000000;
+  padding: 5px 15px 0 15px;
+  @media (max-width: ${(props) => props.theme.mobile}px) {
+    padding: 3px 0;
+  }
+`;
diff --color -bur --ex ./lib/ReactViews/Map/BottomBar/Credits/MapCredits.tsx ./lib/ReactViews/Map/BottomBar/Credits/MapCredits.tsx
--- ./lib/ReactViews/Map/BottomBar/Credits/MapCredits.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Map/BottomBar/Credits/MapCredits.tsx	2024-11-19 14:44:42
@@ -1,15 +1,15 @@
 import { reaction } from "mobx";
 import { observer } from "mobx-react";
-import React, { FC, useCallback, useEffect, useState } from "react";
+import { FC, useCallback, useEffect, useState } from "react";
 import { useTranslation } from "react-i18next";
 import GlobeOrMap from "../../../../Models/GlobeOrMap";
 import { ICredit } from "./Credit.type";
 import { Credits } from "./Credits";
 import { CreditsContainer } from "./CreditsContainer";
 import { DataAttributionModal } from "./DataAttribution/DataAttributionModal";
+import { MapCreditLogo } from "./MapCreditLogo";
 import { Spacer } from "./Spacer";
 import { TerriaLogo } from "./TerriaLogo";
-import { MapCreditLogo } from "./MapCreditLogo";
 
 interface IMapCreditsProps {
   hideTerriaLogo: boolean;
diff --color -bur --ex ./lib/ReactViews/Map/BottomBar/Credits/index.ts ./lib/ReactViews/Map/BottomBar/Credits/index.ts
--- ./lib/ReactViews/Map/BottomBar/Credits/index.ts	2024-12-18 14:25:56
+++ ./lib/ReactViews/Map/BottomBar/Credits/index.ts	2024-11-19 14:44:42
@@ -1,2 +1,2 @@
-export { type ICredit } from "./Credit.type";
+export { ICredit } from "./Credit.type";
 export { MapCredits } from "./MapCredits";
diff --color -bur --ex ./lib/ReactViews/Map/BottomBar/DistanceLegend.tsx ./lib/ReactViews/Map/BottomBar/DistanceLegend.tsx
--- ./lib/ReactViews/Map/BottomBar/DistanceLegend.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Map/BottomBar/DistanceLegend.tsx	2024-11-19 14:44:42
@@ -1,3 +1,4 @@
+"use strict";
 import L from "leaflet";
 import { runInAction } from "mobx";
 import { observer } from "mobx-react";
diff --color -bur --ex ./lib/ReactViews/Map/BottomLeftBar/BottomLeftBar.tsx ./lib/ReactViews/Map/BottomLeftBar/BottomLeftBar.tsx
--- ./lib/ReactViews/Map/BottomLeftBar/BottomLeftBar.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Map/BottomLeftBar/BottomLeftBar.tsx	2024-11-19 14:44:42
@@ -1,39 +1,24 @@
 import { observer } from "mobx-react";
 import React, { FC } from "react";
 import { useTranslation } from "react-i18next";
-import styled, { useTheme } from "styled-components";
 import defined from "terriajs-cesium/Source/Core/defined";
-import type Cesium3DTilesCatalogItem from "../../../Models/Catalog/CatalogItems/Cesium3DTilesCatalogItem";
-import ViewerMode from "../../../Models/ViewerMode";
 import ViewState from "../../../ReactViewModels/ViewState";
 import Box from "../../../Styled/Box";
 import Icon from "../../../Styled/Icon";
-import Text from "../../../Styled/Text";
-import MapDataCount from "../../BottomDock/MapDataCount";
 import { useViewState } from "../../Context";
-import parseCustomHtmlToReact from "../../Custom/parseCustomHtmlToReact";
 import MapIconButton from "../../MapIconButton/MapIconButton";
 
-const BottomLeftContainer = styled(Box)`
-  position: absolute;
-  bottom: 40px;
-  @media (max-width: ${(props) => props.theme.mobile}px) {
-    bottom: 35px;
-  }
+const BottomLeftContainer = (props: { children: React.ReactNode }) => (
+  <Box
+    justifySpaceBetween
+    css={`
   display: flex;
-`;
+    `}
+  >
+    {props.children}
+  </Box>
+);
 
-// Use padding to avoid other UI elements
-const AttributionsContainer = styled(Text)`
-  text-shadow: 0 0 2px #000000;
-  padding-left: 8px;
-  padding-right: 56px;
-  @media (max-width: ${(props) => props.theme.mobile}px) {
-    padding-right: 8px;
-    padding-bottom: 32px;
-  }
-`;
-
 const shouldShowPlayStoryButton = (viewState: ViewState) =>
   viewState.terria.configParameters.storyEnabled &&
   defined(viewState.terria.stories) &&
@@ -42,33 +27,18 @@
 
 const BottomLeftBar: FC = observer(() => {
   const { t } = useTranslation();
-  const theme = useTheme();
   const viewState = useViewState();
 
-  const screenDataAttributions =
-    viewState.terria.cesium?.cesiumScreenDataAttributions;
-
   const isNotificationActive =
     viewState.terria.notificationState.currentNotification;
 
-  const isUsingGooglePhotorealistic3dTiles =
-    viewState.terria.mainViewer.viewerMode === ViewerMode.Cesium &&
-    viewState.terria.workbench.items
-      .filter((i): i is Cesium3DTilesCatalogItem => i.type === "3d-tiles")
-      .some(
-        (i) =>
-          i.url?.startsWith(
-            "https://tile.googleapis.com/v1/3dtiles/root.json"
-          ) && i.show
-      );
-
   return (
-    <BottomLeftContainer theme={theme}>
-      <MapDataCount
+    <BottomLeftContainer>
+      {/* <MapDataCount
         terria={viewState.terria}
         viewState={viewState}
         elementConfig={viewState.terria.elements.get("map-data-count")}
-      />
+      /> */}
       {shouldShowPlayStoryButton(viewState) ? (
         <Box paddedHorizontally={2}>
           <MapIconButton
@@ -82,30 +52,6 @@
           </MapIconButton>
         </Box>
       ) : null}
-      {/* Google Logo. Needed for Google Photorealistic 3D Tiles
-       */}
-      {isUsingGooglePhotorealistic3dTiles && (
-        <img
-          height="18px"
-          style={{ paddingLeft: "8px" }}
-          src="build/TerriaJS/images/google_on_non_white_hdpi.png"
-        />
-      )}
-      {/* On screen data attributions. At the moment, this supports only Cesium viewer.
-          Needed for Google Photorealistic 3D Tiles
-        */}
-      {!!screenDataAttributions?.length && (
-        <AttributionsContainer textLight mini>
-          {screenDataAttributions
-            .flatMap((attributionHtml, i) => [
-              <span key={attributionHtml}>
-                {parseCustomHtmlToReact(attributionHtml)}
-              </span>,
-              <span key={`delimiter-${i}`}> • </span>
-            ])
-            .slice(0, -1)}
-        </AttributionsContainer>
-      )}
     </BottomLeftContainer>
   );
 });
diff --color -bur --ex ./lib/ReactViews/Map/MapColumn.tsx ./lib/ReactViews/Map/MapColumn.tsx
--- ./lib/ReactViews/Map/MapColumn.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Map/MapColumn.tsx	2024-11-19 14:44:42
@@ -14,6 +14,7 @@
 import { ProgressBar } from "./ProgressBar";
 import { TerriaViewerWrapper } from "./TerriaViewerWrapper";
 import Toast from "./Toast";
+import { useTheme } from "styled-components";
 
 interface IMapColumnProps {
   animationDuration: number;
@@ -27,6 +28,7 @@
 export const MapColumn: FC<IMapColumnProps> = observer(
   ({ customElements, animationDuration }) => {
     const viewState = useViewState();
+    const theme = useTheme();
     const { t } = useTranslation();
 
     return (
@@ -81,7 +83,6 @@
           </Box>
           {!viewState.hideMapUi && (
             <>
-              <BottomLeftBar />
               <ActionBarPortal show={viewState.isActionBarVisible} />
               <SlideUpFadeIn isVisible={viewState.isMapZooming}>
                 <Toast>
@@ -95,13 +96,34 @@
                   />
                 </Toast>
               </SlideUpFadeIn>
-              <Box
-                position="absolute"
-                fullWidth
-                css={{ bottom: "0", left: "0" }}
+              <div
+                css={`
+                  position: absolute;
+                  border-radius: ${theme.radiusXL};
+                  margin-left: ${viewState.useSmallScreenInterface
+                    ? `0px`
+                    : viewState.isMapFullScreen
+                    ? `${theme.workbenchMargin}px`
+                    : `calc(${theme.workbenchWidth}px + 2 * ${theme.workbenchMargin}px)`};
+                  margin-right: ${viewState.useSmallScreenInterface
+                    ? `0px`
+                    : `${theme.workbenchMargin}px`};
+                  bottom: ${viewState.useSmallScreenInterface
+                    ? `0px`
+                    : `${theme.workbenchMargin}px`};
+                  left: 0;
+                  right: 0;
+                  overflow: hidden;
+                `}
               >
+                <BottomLeftBar />
+                <BottomDock
+                  terria={viewState.terria}
+                  viewState={viewState}
+                  elementConfig={viewState.terria.elements.get("bottom-dock")}
+                />
                 <BottomBar />
-              </Box>
+              </div>
 
               {viewState.terria.configParameters.printDisclaimer && (
                 <a
@@ -121,15 +143,6 @@
             </>
           )}
         </Box>
-        <div>
-          {!viewState.hideMapUi && (
-            <BottomDock
-              terria={viewState.terria}
-              viewState={viewState}
-              elementConfig={viewState.terria.elements.get("bottom-dock")}
-            />
-          )}
-        </div>
       </Box>
     );
   }
diff --color -bur --ex ./lib/ReactViews/Map/MapNavigation/Items/Compass/Compass.tsx ./lib/ReactViews/Map/MapNavigation/Items/Compass/Compass.tsx
--- ./lib/ReactViews/Map/MapNavigation/Items/Compass/Compass.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Map/MapNavigation/Items/Compass/Compass.tsx	2024-11-19 14:44:42
@@ -33,8 +33,10 @@
 import { GyroscopeGuidance } from "./GyroscopeGuidance";
 import { withTerriaRef } from "../../../../HOCs/withTerriaRef";
 import FadeIn from "../../../../Transitions/FadeIn/FadeIn";
-import CameraFlightPath from "terriajs-cesium/Source/Scene/CameraFlightPath";
 
+const CameraFlightPath =
+  require("terriajs-cesium/Source/Scene/CameraFlightPath").default;
+
 export const COMPASS_LOCAL_PROPERTY_KEY = "CompassHelpPrompted";
 
 // Map Compass
@@ -346,7 +348,7 @@
               // if it's active, show a white circle only, as we need the base layer
               glyph={
                 active
-                  ? Icon.GLYPHS.compassOuterSkeleton
+                  ? null //Icon.GLYPHS.compassOuterSkeleton
                   : Icon.GLYPHS.compassOuter
               }
             />
diff --color -bur --ex ./lib/ReactViews/Map/MapNavigation/Items/MapNavigationItem.tsx ./lib/ReactViews/Map/MapNavigation/Items/MapNavigationItem.tsx
--- ./lib/ReactViews/Map/MapNavigation/Items/MapNavigationItem.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Map/MapNavigation/Items/MapNavigationItem.tsx	2024-11-19 14:44:42
@@ -20,6 +20,10 @@
 
 @observer
 class MapNavigationItemBase extends React.Component<PropTypes> {
+  constructor(props: PropTypes) {
+    super(props);
+  }
+
   render() {
     const { closeTool = true, item, expandInPlace, i18n } = this.props;
     if (item.render)
diff --color -bur --ex ./lib/ReactViews/Map/MapNavigation/Items/MeasureTool.ts ./lib/ReactViews/Map/MapNavigation/Items/MeasureTool.ts
--- ./lib/ReactViews/Map/MapNavigation/Items/MeasureTool.ts	2024-12-18 14:25:56
+++ ./lib/ReactViews/Map/MapNavigation/Items/MeasureTool.ts	2024-11-19 14:44:42
@@ -1,3 +1,4 @@
+"use strict";
 import i18next from "i18next";
 import React from "react";
 import ArcType from "terriajs-cesium/Source/Core/ArcType";
diff --color -bur --ex ./lib/ReactViews/Map/MapNavigation/Items/ZoomControl.tsx ./lib/ReactViews/Map/MapNavigation/Items/ZoomControl.tsx
--- ./lib/ReactViews/Map/MapNavigation/Items/ZoomControl.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Map/MapNavigation/Items/ZoomControl.tsx	2024-11-19 14:44:42
@@ -31,6 +31,10 @@
 class ZoomControlBase extends React.Component<PropTypes> {
   static displayName = "ZoomControl";
 
+  constructor(props: PropTypes) {
+    super(props);
+  }
+
   flyToPosition(
     scene: Scene,
     position: Cartesian3,
@@ -219,7 +223,7 @@
 }
 
 const StyledZoomControl = styled(Box).attrs((props) => ({
-  backgroundColor: props.theme.textLight,
+  backgroundColor: props.theme.dark,
   centered: true,
   column: true,
   styledWidth: "32px",
@@ -229,7 +233,7 @@
   svg {
     height: 20px;
     width: 20px;
-    fill: ${(props) => props.theme.darkWithOverlay};
+    fill: ${(props) => props.theme.textLight};
   }
   ${Li} {
     margin: 5px 0;
diff --color -bur --ex ./lib/ReactViews/Map/MapNavigation/MapNavigation.tsx ./lib/ReactViews/Map/MapNavigation/MapNavigation.tsx
--- ./lib/ReactViews/Map/MapNavigation/MapNavigation.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Map/MapNavigation/MapNavigation.tsx	2024-11-19 14:44:42
@@ -43,7 +43,7 @@
   position: absolute;
   right: 5px;
   z-index: 1;
-  bottom: 25px;
+  top: 25px;
   @media (min-width: ${(props) => props.theme.sm}px) {
     top: 80px;
     bottom: 50px;
diff --color -bur --ex ./lib/ReactViews/Map/MapNavigation/registerMapNavigations.tsx ./lib/ReactViews/Map/MapNavigation/registerMapNavigations.tsx
--- ./lib/ReactViews/Map/MapNavigation/registerMapNavigations.tsx	2024-12-12 12:56:09
+++ ./lib/ReactViews/Map/MapNavigation/registerMapNavigations.tsx	2024-11-19 14:44:42
@@ -198,7 +198,7 @@
     id: FEEDBACK_TOOL_ID,
     name: "translate#feedback.feedbackBtnText",
     title: "translate#feedback.feedbackBtnText",
-    location: "BOTTOM",
+    location: "TOP",
     screenSize: "medium",
     controller: feedbackController,
     order: 8
diff --color -bur --ex ./lib/ReactViews/Map/MenuBar/MenuBar.jsx ./lib/ReactViews/Map/MenuBar/MenuBar.jsx
--- ./lib/ReactViews/Map/MenuBar/MenuBar.jsx	2024-12-12 12:56:09
+++ ./lib/ReactViews/Map/MenuBar/MenuBar.jsx	2024-11-19 14:44:42
@@ -102,12 +102,15 @@
             />
           </li>
         </ul>
-        {!viewState.useSmallScreenInterface &&
-          menuItems.map((element, i) => (
+        {!viewState.useSmallScreenInterface && menuItems.length > 0 && (
+          <ul className={classNames(Styles.menu)}>
+            {menuItems.map((element, i) => (
               <li className={Styles.menuItem} key={i}>
                 {element}
               </li>
             ))}
+          </ul>
+        )}
       </section>
     </StyledMenuBar>
   );
diff --color -bur --ex ./lib/ReactViews/Map/MenuBar/menu-bar.scss ./lib/ReactViews/Map/MenuBar/menu-bar.scss
--- ./lib/ReactViews/Map/MenuBar/menu-bar.scss	2024-12-12 12:56:09
+++ ./lib/ReactViews/Map/MenuBar/menu-bar.scss	2024-11-19 14:44:42
@@ -4,7 +4,7 @@
   position: absolute;
   z-index: 108;
   top: $map-button-top;
-  left: 0;
+  left: $work-bench-width;
   right: $padding;
 
   // todo: find some non-layout-change animation technique for
diff --color -bur --ex ./lib/ReactViews/Map/Panels/DropdownPanel.jsx ./lib/ReactViews/Map/Panels/DropdownPanel.jsx
--- ./lib/ReactViews/Map/Panels/DropdownPanel.jsx	2024-12-23 14:57:45
+++ ./lib/ReactViews/Map/Panels/DropdownPanel.jsx	2024-11-19 14:44:42
@@ -65,6 +65,7 @@
     }
   },
 
+  /* eslint-disable-next-line camelcase */
   UNSAFE_componentWillReceiveProps(nextProps) {
     if (nextProps.forceClosed) {
       this.onDismissed();
@@ -98,6 +99,7 @@
           ref={
             this.props.btnRef || ((element) => (this.buttonElement = element))
           }
+          /* eslint-disable-next-line react/no-unknown-property */
           isOpen={this.isOpen()}
           css={`
             ${(p) =>
diff --color -bur --ex ./lib/ReactViews/Map/Panels/HelpPanel/HelpPanel.d.ts ./lib/ReactViews/Map/Panels/HelpPanel/HelpPanel.d.ts
--- ./lib/ReactViews/Map/Panels/HelpPanel/HelpPanel.d.ts	2024-12-18 14:25:56
+++ ./lib/ReactViews/Map/Panels/HelpPanel/HelpPanel.d.ts	2024-11-19 14:44:42
@@ -1,4 +1,4 @@
 import React from "react";
 
-declare class HelpPanel extends React.Component<object> {}
+declare class HelpPanel extends React.Component<{}> {}
 export default HelpPanel;
diff --color -bur --ex ./lib/ReactViews/Map/Panels/HelpPanel/HelpPanelItem.jsx ./lib/ReactViews/Map/Panels/HelpPanel/HelpPanelItem.jsx
--- ./lib/ReactViews/Map/Panels/HelpPanel/HelpPanelItem.jsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Map/Panels/HelpPanel/HelpPanelItem.jsx	2024-11-19 14:44:42
@@ -26,6 +26,10 @@
     i18n: PropTypes.object.isRequired
   };
 
+  constructor(props) {
+    super(props);
+  }
+
   render() {
     const { i18n } = this.props;
 
diff --color -bur --ex ./lib/ReactViews/Map/Panels/HelpPanel/HelpVideoPanel.jsx ./lib/ReactViews/Map/Panels/HelpPanel/HelpVideoPanel.jsx
--- ./lib/ReactViews/Map/Panels/HelpPanel/HelpVideoPanel.jsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Map/Panels/HelpPanel/HelpVideoPanel.jsx	2024-11-19 14:44:42
@@ -34,6 +34,10 @@
     i18n: PropTypes.object.isRequired
   };
 
+  constructor(props) {
+    super(props);
+  }
+
   render() {
     const helpItemType = this.props.paneMode || "videoAndContent"; // default is video panel
     const itemSelected =
diff --color -bur --ex ./lib/ReactViews/Map/Panels/HelpPanel/StyledHtml.jsx ./lib/ReactViews/Map/Panels/HelpPanel/StyledHtml.jsx
--- ./lib/ReactViews/Map/Panels/HelpPanel/StyledHtml.jsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Map/Panels/HelpPanel/StyledHtml.jsx	2024-11-19 14:44:42
@@ -51,6 +51,10 @@
     injectTooltips: true
   };
 
+  constructor(props) {
+    super(props);
+  }
+
   render() {
     const { viewState, injectTooltips, i18n } = this.props;
     const styledTextProps = this.props.styledTextProps || {};
diff --color -bur --ex ./lib/ReactViews/Map/Panels/HelpPanel/TrainerPane.jsx ./lib/ReactViews/Map/Panels/HelpPanel/TrainerPane.jsx
--- ./lib/ReactViews/Map/Panels/HelpPanel/TrainerPane.jsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Map/Panels/HelpPanel/TrainerPane.jsx	2024-11-19 14:44:42
@@ -33,6 +33,10 @@
     i18n: PropTypes.object.isRequired
   };
 
+  constructor(props) {
+    super(props);
+  }
+
   render() {
     const { content, i18n, viewState } = this.props;
     const { trainerItems, markdownText } = content;
diff --color -bur --ex ./lib/ReactViews/Map/Panels/HelpPanel/VideoGuide.jsx ./lib/ReactViews/Map/Panels/HelpPanel/VideoGuide.jsx
--- ./lib/ReactViews/Map/Panels/HelpPanel/VideoGuide.jsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Map/Panels/HelpPanel/VideoGuide.jsx	2024-11-19 14:44:42
@@ -69,6 +69,10 @@
     t: PropTypes.func
   };
 
+  constructor(props) {
+    super(props);
+  }
+
   render() {
     const backgroundOpacity = this.props.backgroundOpacity;
     const backgroundBlackOverlay =
diff --color -bur --ex ./lib/ReactViews/Map/Panels/InnerPanel.jsx ./lib/ReactViews/Map/Panels/InnerPanel.jsx
--- ./lib/ReactViews/Map/Panels/InnerPanel.jsx	2024-12-23 14:57:45
+++ ./lib/ReactViews/Map/Panels/InnerPanel.jsx	2024-11-19 14:44:42
@@ -139,6 +139,7 @@
           onClick={this.forceClose}
           title={t("general.close")}
           aria-label={t("general.close")}
+          /* eslint-disable-next-line react/no-unknown-property */
           showDropdownAsModal={this.props.showDropdownAsModal}
           css={`
             svg {
diff --color -bur --ex ./lib/ReactViews/Map/Panels/SharePanel/BuildShareLink.ts ./lib/ReactViews/Map/Panels/SharePanel/BuildShareLink.ts
--- ./lib/ReactViews/Map/Panels/SharePanel/BuildShareLink.ts	2024-12-18 14:25:56
+++ ./lib/ReactViews/Map/Panels/SharePanel/BuildShareLink.ts	2024-11-19 14:44:42
@@ -1,3 +1,5 @@
+"use strict";
+
 import { uniq } from "lodash-es";
 import { runInAction, toJS } from "mobx";
 import Ellipsoid from "terriajs-cesium/Source/Core/Ellipsoid";
diff --color -bur --ex ./lib/ReactViews/Map/Panels/SharePanel/SharePanel.tsx ./lib/ReactViews/Map/Panels/SharePanel/SharePanel.tsx
--- ./lib/ReactViews/Map/Panels/SharePanel/SharePanel.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Map/Panels/SharePanel/SharePanel.tsx	2024-11-19 14:44:42
@@ -12,9 +12,11 @@
 import Styles from "./share-panel.scss";
 import { SharePanelContent } from "./SharePanelContent";
 import { ShareUrl } from "./ShareUrl";
-import MenuPanel from "../../../StandardUserInterface/customizable/MenuPanel";
-import StorySharePanel from "./StorySharePanel";
 
+const MenuPanel =
+  require("../../../StandardUserInterface/customizable/MenuPanel").default;
+const StorySharePanel = require("./StorySharePanel").default;
+
 interface PropTypes extends WithTranslation {
   terria: Terria;
   storyShare: boolean;
@@ -142,7 +144,6 @@
       : t("share.btnMapShareTitle");
 
     return !storyShare ? (
-      //@ts-expect-error - not yet ready to tackle tsfying MenuPanel
       <MenuPanel
         theme={dropdownTheme}
         btnText={catalogShareWithoutText ? null : btnText}
@@ -167,7 +168,6 @@
         viewState={this.props.viewState}
         btnTitle={btnTitle}
         isOpen={this.state.isOpen}
-        //@ts-expect-error - not yet ready to tackle tsfying StorySharePanel
         onOpenChanged={this.changeOpenState}
         showDropdownAsModal={storyShare}
         modalWidth={modalWidth}
diff --color -bur --ex ./lib/ReactViews/Map/Panels/SharePanel/ShareUrl/index.ts ./lib/ReactViews/Map/Panels/SharePanel/ShareUrl/index.ts
--- ./lib/ReactViews/Map/Panels/SharePanel/ShareUrl/index.ts	2024-12-18 14:25:56
+++ ./lib/ReactViews/Map/Panels/SharePanel/ShareUrl/index.ts	2024-11-19 14:44:42
@@ -1,2 +1,2 @@
-export { type IShareUrlRef, ShareUrl } from "./ShareUrl";
+export { IShareUrlRef, ShareUrl } from "./ShareUrl";
 export { ShareUrlBookmark } from "./ShareUrlBookmark";
diff --color -bur --ex ./lib/ReactViews/Map/Panels/SharePanel/StorySharePanel.jsx ./lib/ReactViews/Map/Panels/SharePanel/StorySharePanel.jsx
--- ./lib/ReactViews/Map/Panels/SharePanel/StorySharePanel.jsx	2024-12-23 14:57:45
+++ ./lib/ReactViews/Map/Panels/SharePanel/StorySharePanel.jsx	2024-11-19 14:44:42
@@ -37,6 +37,7 @@
     }
   },
 
+  /* eslint-disable-next-line camelcase */
   UNSAFE_componentWillReceiveProps(nextProps) {
     if (nextProps.forceClosed) {
       this.onDismissed();
diff --color -bur --ex ./lib/ReactViews/Map/Panels/ToolsPanel/CountDatasets.tsx ./lib/ReactViews/Map/Panels/ToolsPanel/CountDatasets.tsx
--- ./lib/ReactViews/Map/Panels/ToolsPanel/CountDatasets.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Map/Panels/ToolsPanel/CountDatasets.tsx	2024-11-19 14:44:42
@@ -1,3 +1,5 @@
+"use strict";
+
 import { observer } from "mobx-react";
 import React, { useState } from "react";
 import { useTranslation } from "react-i18next";
@@ -120,7 +122,7 @@
     }
 
     function reportLoadError(
-      _member: GroupAndMember,
+      member: GroupAndMember,
       stats: CounterStats,
       path: string[]
     ) {
diff --color -bur --ex ./lib/ReactViews/Map/TerriaViewerWrapper/Splitter/Splitter.tsx ./lib/ReactViews/Map/TerriaViewerWrapper/Splitter/Splitter.tsx
--- ./lib/ReactViews/Map/TerriaViewerWrapper/Splitter/Splitter.tsx	2024-12-12 12:56:09
+++ ./lib/ReactViews/Map/TerriaViewerWrapper/Splitter/Splitter.tsx	2024-11-19 14:44:42
@@ -14,7 +14,7 @@
 }
 
 export const Splitter: FC<ISplitterProps> = observer(
-  ({ thumbSize = 42, padding = 0 }) => {
+  ({ thumbSize = 48, padding = 0 }) => {
     const viewState = useViewState();
     const theme = useTheme();
     const { t } = useTranslation();
@@ -78,14 +78,22 @@
             padding: "8px",
             zIndex: 999,
             cursor: "ew-resize",
-            backgroundColor: "white"
+            backgroundColor: theme.colorSecondary,
+            display: "flex",
+            justifyContent: "center",
+            alignItems: "center"
           }}
           onClick={(e) => e.preventDefault()}
           onMouseDown={startDrag}
           onTouchStart={startDrag}
           title={t("splitterTool.title")}
         >
-          <StyledIcon glyph={GLYPHS.splitter} fillColor="black" />
+          <StyledIcon
+            glyph={GLYPHS.splitter}
+            fillColor="white"
+            styledWidth="20px"
+            styledHeight="20px"
+          />
         </button>
       </div>
     );
diff --color -bur --ex ./lib/ReactViews/Map/TerriaViewerWrapper/Splitter/dragHook.ts ./lib/ReactViews/Map/TerriaViewerWrapper/Splitter/dragHook.ts
--- ./lib/ReactViews/Map/TerriaViewerWrapper/Splitter/dragHook.ts	2024-12-23 14:57:45
+++ ./lib/ReactViews/Map/TerriaViewerWrapper/Splitter/dragHook.ts	2024-11-19 14:44:42
@@ -23,7 +23,9 @@
 
   window.addEventListener("test", callback, options);
   window.removeEventListener("test", callback, options);
-} catch (_err) {}
+} catch (err) {
+  /* eslint-disable-line no-empty */
+}
 
 const notPassive = passiveSupported ? { passive: false } : false;
 
@@ -75,7 +77,7 @@
       const minX = computeSplitFraction(
         mapRect.left,
         mapRect.right,
-        mapRect.left + 100,
+        mapRect.left + 100 + (viewState.isMapFullScreen === false ? 350 : 0),
         padding,
         thumbSize
       );
diff --color -bur --ex ./lib/ReactViews/MapIconButton/MapIconButton.tsx ./lib/ReactViews/MapIconButton/MapIconButton.tsx
--- ./lib/ReactViews/MapIconButton/MapIconButton.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/MapIconButton/MapIconButton.tsx	2024-11-19 14:44:42
@@ -1,3 +1,4 @@
+"use strict";
 import React, { useRef, useState } from "react";
 import styled, { useTheme } from "styled-components";
 import Box from "../../Styled/Box";
@@ -29,8 +30,8 @@
   ${(props) => props.roundLeft && `border-radius: 16px 0 0 16px;`}
   ${(props) => props.roundRight && `border-radius: 0 16px 16px 0;`}
 
-  background: #fff;
-  color: ${(props) => props.theme.textDarker};
+  background:  ${(props) => props.theme.dark};
+  color: ${(props) => props.theme.textLight};
 
   height: 32px;
   min-width: 32px;
@@ -41,7 +42,7 @@
     width: 20px;
     margin: 0 auto;
     vertical-align: middle;
-    fill: ${(props) => props.theme.textDarker};
+    fill: ${(props) => props.theme.textLight};
   }
 
   ${(props) =>
diff --color -bur --ex ./lib/ReactViews/Mobile/MobileModalWindow.jsx ./lib/ReactViews/Mobile/MobileModalWindow.jsx
--- ./lib/ReactViews/Mobile/MobileModalWindow.jsx	2024-12-23 14:57:45
+++ ./lib/ReactViews/Mobile/MobileModalWindow.jsx	2024-11-19 14:44:42
@@ -78,6 +78,7 @@
     });
   }
 
+  /* eslint-disable-next-line camelcase */
   UNSAFE_componentWillReceiveProps() {
     const numItems = this.props.terria.workbench.items.length;
     if (
@@ -141,5 +142,4 @@
     );
   }
 }
-
-export default withTranslation()(MobileModalWindow);
+module.exports = withTranslation()(MobileModalWindow);
diff --color -bur --ex ./lib/ReactViews/Mobile/MobileSearch.jsx ./lib/ReactViews/Mobile/MobileSearch.jsx
--- ./lib/ReactViews/Mobile/MobileSearch.jsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Mobile/MobileSearch.jsx	2024-11-19 14:44:42
@@ -1,7 +1,9 @@
 import React from "react";
 import { runInAction } from "mobx";
 import { observer } from "mobx-react";
+
 import PropTypes from "prop-types";
+
 import { addMarker } from "../../Models/LocationMarkerUtils";
 import LocationSearchResults from "../Search/LocationSearchResults";
 import SearchResult from "../Search/SearchResult";
@@ -95,4 +97,4 @@
   }
 }
 
-export default withTranslation()(MobileSearch);
+module.exports = withTranslation()(MobileSearch);
diff --color -bur --ex ./lib/ReactViews/Notification/MapInteractionWindow.tsx ./lib/ReactViews/Notification/MapInteractionWindow.tsx
--- ./lib/ReactViews/Notification/MapInteractionWindow.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Notification/MapInteractionWindow.tsx	2024-11-19 14:44:42
@@ -1,3 +1,5 @@
+"use strict";
+
 import classNames from "classnames";
 import { Lambda, observable, reaction, makeObservable } from "mobx";
 import { observer } from "mobx-react";
diff --color -bur --ex ./lib/ReactViews/Notification/Notification.tsx ./lib/ReactViews/Notification/Notification.tsx
--- ./lib/ReactViews/Notification/Notification.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Notification/Notification.tsx	2024-11-19 14:44:42
@@ -2,7 +2,9 @@
 import React from "react";
 import triggerResize from "../../Core/triggerResize";
 import { useViewState } from "../Context";
-import NotificationWindow from "./NotificationWindow";
+
+// Avoid type error caused by importing untyped jsx
+const NotificationWindow = require("./NotificationWindow").default;
 
 const Notification = observer(() => {
   const viewState = useViewState();
diff --color -bur --ex ./lib/ReactViews/Notification/NotificationWindow.jsx ./lib/ReactViews/Notification/NotificationWindow.jsx
--- ./lib/ReactViews/Notification/NotificationWindow.jsx	2024-12-23 14:57:45
+++ ./lib/ReactViews/Notification/NotificationWindow.jsx	2024-11-19 14:44:42
@@ -1,3 +1,5 @@
+"use strict";
+
 import classNames from "classnames";
 import createReactClass from "create-react-class";
 import PropTypes from "prop-types";
@@ -71,6 +73,7 @@
       <div className={classNames(Styles.wrapper, `${type}`)}>
         <div
           className={Styles.notification}
+          /* eslint-disable-next-line react/no-unknown-property */
           isStory={isStory}
           css={`
             background: ${(p) =>
@@ -107,4 +110,4 @@
   }
 });
 
-export default NotificationWindow;
+module.exports.default = NotificationWindow;
diff --color -bur --ex ./lib/ReactViews/Notification/terriaErrorNotification.tsx ./lib/ReactViews/Notification/terriaErrorNotification.tsx
--- ./lib/ReactViews/Notification/terriaErrorNotification.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Notification/terriaErrorNotification.tsx	2024-11-19 14:44:42
@@ -125,7 +125,7 @@
               bodyBoxProps={{ padded: true }}
               isOpen={error.showDetails}
               onToggle={(show) => {
-                return runInAction(() => (error.showDetails = show));
+                runInAction(() => (error.showDetails = show));
               }}
             >
               <ErrorsBox errors={detailedErrors} viewState={viewState} />
diff --color -bur --ex ./lib/ReactViews/Preview/DataPreview.jsx ./lib/ReactViews/Preview/DataPreview.jsx
--- ./lib/ReactViews/Preview/DataPreview.jsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Preview/DataPreview.jsx	2024-11-19 14:44:42
@@ -1,3 +1,4 @@
+"use strict";
 // import Chart from "../Custom/Chart/Chart";
 import { runInAction } from "mobx";
 import { observer } from "mobx-react";
@@ -103,36 +104,39 @@
         </div>
       );
     } else {
-      return (
-        <div className={Styles.placeholder}>
-          <p>{t("preview.selectToPreviewDataset")}</p>
-          <p>
-            <Trans i18nKey="preview.selectMultipleDatasets">
-              <span>
-                Press <strong>Shift</strong> and click
-              </span>
-              <Icon
-                glyph={Icon.GLYPHS.add}
-                css={{
-                  height: "20px",
-                  width: "20px",
-                  margin: "0px 5px",
-                  verticalAlign: "middle",
-                  fill: `${(p) => p.theme.charcoalGrey}`
-                }}
-              />
-              <span>to add multiple datasets</span>
-            </Trans>
-          </p>
-          <p>- {t("preview.selectToPreviewSeparator")} -</p>
-          <button
-            className={Styles.btnBackToMap}
-            onClick={() => this.backToMap()}
-          >
-            {t("preview.goToTheMap")}
-          </button>
-        </div>
-      );
+      // TODO: choose to show placeholder text based on whether explorer panel
+      // stays open after adding a dataset
+      return null;
+      // return (
+      //   <div className={Styles.placeholder}>
+      //     <p>{t("preview.selectToPreviewDataset")}</p>
+      //     <p>
+      //       <Trans i18nKey="preview.selectMultipleDatasets">
+      //         <span>
+      //           Press <strong>Shift</strong> and click
+      //         </span>
+      //         <Icon
+      //           glyph={Icon.GLYPHS.add}
+      //           css={{
+      //             height: "20px",
+      //             width: "20px",
+      //             margin: "0px 5px",
+      //             verticalAlign: "middle",
+      //             fill: `${(p) => p.theme.charcoalGrey}`
+      //           }}
+      //         />
+      //         <span>to add multiple datasets</span>
+      //       </Trans>
+      //     </p>
+      //     <p>- {t("preview.selectToPreviewSeparator")} -</p>
+      //     <button
+      //       className={Styles.btnBackToMap}
+      //       onClick={() => this.backToMap()}
+      //     >
+      //       {t("preview.goToTheMap")}
+      //     </button>
+      //   </div>
+      // )
     }
   }
 
@@ -172,4 +176,4 @@
   }
 }
 
-export default withTranslation()(DataPreview);
+module.exports = withTranslation()(DataPreview);
diff --color -bur --ex ./lib/ReactViews/Preview/DataPreviewMap.jsx ./lib/ReactViews/Preview/DataPreviewMap.jsx
--- ./lib/ReactViews/Preview/DataPreviewMap.jsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Preview/DataPreviewMap.jsx	2024-11-19 14:44:42
@@ -257,7 +257,7 @@
   }
 
   @action.bound
-  clickMap(_evt) {
+  clickMap(evt) {
     this.isZoomedToExtent = !this.isZoomedToExtent;
   }
 
diff --color -bur --ex ./lib/ReactViews/Preview/Description.jsx ./lib/ReactViews/Preview/Description.jsx
--- ./lib/ReactViews/Preview/Description.jsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Preview/Description.jsx	2024-11-19 14:44:42
@@ -105,7 +105,7 @@
         {metadataUrls && metadataUrls.length > 0 && (
           <>
             <h4 className={Styles.h4}>{t("description.metadataUrls")}</h4>
-            {metadataUrls.map((metadataUrl, _i) => (
+            {metadataUrls.map((metadataUrl, i) => (
               <Box paddedVertically key={metadataUrl.url}>
                 <a
                   href={metadataUrl.url}
@@ -185,7 +185,7 @@
               <>
                 <h4 className={Styles.h4}>{t("description.dataUrl")}</h4>
                 {dataUrls.map(
-                  (dataUrl, _i) =>
+                  (dataUrl, i) =>
                     (dataUrl.type?.startsWith("wfs") ||
                       dataUrl.type?.startsWith("wcs")) && (
                       <>
diff --color -bur --ex ./lib/ReactViews/Preview/ExportData.tsx ./lib/ReactViews/Preview/ExportData.tsx
--- ./lib/ReactViews/Preview/ExportData.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Preview/ExportData.tsx	2024-11-19 14:44:42
@@ -7,7 +7,7 @@
 
 import isDefined from "../../Core/isDefined";
 import ExportableMixin from "../../ModelMixins/ExportableMixin";
-import FileSaver from "file-saver";
+const FileSaver = require("file-saver");
 
 interface PropsType extends WithTranslation {
   item: ExportableMixin.Instance;
diff --color -bur --ex ./lib/ReactViews/Preview/MappablePreview.jsx ./lib/ReactViews/Preview/MappablePreview.jsx
--- ./lib/ReactViews/Preview/MappablePreview.jsx	2024-12-12 12:56:09
+++ ./lib/ReactViews/Preview/MappablePreview.jsx	2024-11-19 14:44:42
@@ -44,7 +44,7 @@
       runInAction(() => (this.props.viewState.storyShown = false));
     }
 
-    const keepCatalogOpen = event.shiftKey || event.ctrlKey;
+    const keepCatalogOpen = true; //event.shiftKey || event.ctrlKey;
 
     await toggleItemOnMapFromCatalog(
       this.props.viewState,
diff --color -bur --ex ./lib/ReactViews/RelatedMaps/RelatedMaps.tsx ./lib/ReactViews/RelatedMaps/RelatedMaps.tsx
--- ./lib/ReactViews/RelatedMaps/RelatedMaps.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/RelatedMaps/RelatedMaps.tsx	2024-11-19 14:44:42
@@ -8,8 +8,10 @@
 import parseCustomMarkdownToReact from "../Custom/parseCustomMarkdownToReact";
 import { withViewState, WithViewState } from "../Context";
 import Styles from "./related-maps.scss";
-import MenuPanel from "../StandardUserInterface/customizable/MenuPanel";
 
+const MenuPanel =
+  require("../StandardUserInterface/customizable/MenuPanel").default;
+
 type PropTypes = WithViewState &
   WithTranslation & {
     theme: DefaultTheme;
@@ -18,6 +20,13 @@
 
 @observer
 class RelatedMaps extends React.Component<PropTypes> {
+  /**
+   * @param {Props} props
+   */
+  constructor(props: PropTypes) {
+    super(props);
+  }
+
   render() {
     const t = this.props.t;
     const dropdownTheme = {
@@ -28,7 +37,6 @@
     const smallScreen = this.props.viewState.useSmallScreenInterface;
 
     return (
-      //@ts-expect-error - not yet ready to tackle tsfying MenuPanel
       <MenuPanel
         theme={dropdownTheme}
         btnText={t("relatedMaps.buttonText")}
diff --color -bur --ex ./lib/ReactViews/Search/SearchBox.jsx ./lib/ReactViews/Search/SearchBox.jsx
--- ./lib/ReactViews/Search/SearchBox.jsx	2024-12-23 14:57:45
+++ ./lib/ReactViews/Search/SearchBox.jsx	2024-11-19 14:44:42
@@ -13,7 +13,7 @@
   margin-top: 0;
   margin-bottom: 0;
   border: none;
-  border-radius: 20px;
+  border-radius: 4px;
   height: 40px;
   width: 100%;
   display: block;
@@ -61,6 +61,7 @@
     };
   },
 
+  /* eslint-disable-next-line camelcase */
   UNSAFE_componentWillMount() {
     this.searchWithDebounce = debounce(this.search, DEBOUNCE_INTERVAL);
   },
diff --color -bur --ex ./lib/ReactViews/Search/SearchBoxAndResults.jsx ./lib/ReactViews/Search/SearchBoxAndResults.jsx
--- ./lib/ReactViews/Search/SearchBoxAndResults.jsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Search/SearchBoxAndResults.jsx	2024-11-19 14:44:42
@@ -181,8 +181,7 @@
               {/* search {searchterm} in data catalog */}
               {/* ~TODO: Put this back once we add a MobX DataCatalogSearch Provider~ */}
               {/* TODO2: Implement a more generic MobX DataCatalogSearch */}
-              {this.props.terria.searchBarModel.showSearchInCatalog &&
-                searchState.catalogSearchProvider && (
+              {searchState.catalogSearchProvider && (
                 <Box column paddedRatio={2}>
                   <SearchInDataCatalog
                     viewState={viewState}
diff --color -bur --ex ./lib/ReactViews/SelectableDimensions/Group.tsx ./lib/ReactViews/SelectableDimensions/Group.tsx
--- ./lib/ReactViews/SelectableDimensions/Group.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/SelectableDimensions/Group.tsx	2024-11-19 14:44:42
@@ -48,13 +48,11 @@
         onToggle={
           dim.type === "group"
             ? dim.onToggle
-            : (isOpen) => {
+            : (isOpen) =>
                 dim.setDimensionValue(
                   CommonStrata.user,
                   isOpen ? "true" : "false"
-                );
-                return true;
-              }
+                )
         }
         btnStyle={dim.type === "checkbox-group" ? "checkbox" : undefined}
         btnRight={dim.type === "group"}
diff --color -bur --ex ./lib/ReactViews/SidePanel/Branding.tsx ./lib/ReactViews/SidePanel/Branding.tsx
--- ./lib/ReactViews/SidePanel/Branding.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/SidePanel/Branding.tsx	2024-11-19 14:44:42
@@ -1,9 +1,11 @@
+"use strict";
 import { observer } from "mobx-react";
 import React from "react";
 import isDefined from "../../Core/isDefined";
 import ViewState from "../../ReactViewModels/ViewState";
 import parseCustomHtmlToReact from "../Custom/parseCustomHtmlToReact";
-import { withViewState } from "../Context";
+import { useViewState, withViewState } from "../Context";
+import { useTheme } from "styled-components";
 
 const DEFAULT_BRANDING =
   '<a target="_blank" href="http://terria.io"><img src="images/terria_logo.png" height="52" title="Version: {{ version }}" /></a>';
@@ -32,17 +34,25 @@
         ];
     }
 
+    const theme = useTheme();
+    const viewState = useViewState();
+
+    const logoHeight = viewState.useSmallScreenInterface
+      ? theme.logoSmallHeight
+      : theme.logoHeight;
+
     const version = props.version ?? "Unknown";
     return (
       <div
         css={`
           display: flex;
-          justify-content: space-between;
+          justify-content: center;
+          align-items: center;
 
           box-sizing: border-box;
 
           width: 100%;
-          height: ${(p: any) => p.theme.logoHeight};
+          min-height: ${logoHeight};
 
           overflow: hidden;
 
@@ -79,6 +89,11 @@
           }
         `}
       >
+        <div
+          css={`
+            height: fit-content;
+          `}
+        >
           {brandingHtmlElements.map((element, idx) => (
             <React.Fragment key={idx}>
               {parseCustomHtmlToReact(
@@ -87,6 +102,7 @@
               )}
             </React.Fragment>
           ))}
+        </div>
       </div>
     );
   })
diff --color -bur --ex ./lib/ReactViews/SidePanel/FullScreenButton.jsx ./lib/ReactViews/SidePanel/FullScreenButton.jsx
--- ./lib/ReactViews/SidePanel/FullScreenButton.jsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/SidePanel/FullScreenButton.jsx	2024-11-19 14:44:42
@@ -1,13 +1,16 @@
-import React from "react";
-import PropTypes from "prop-types";
+"use strict";
+const React = require("react");
+const PropTypes = require("prop-types");
 import classNames from "classnames";
 import { observer } from "mobx-react";
 import { withTranslation } from "react-i18next";
 import { Category, ViewAction } from "../../Core/AnalyticEvents/analyticEvents";
-import Icon from "../../Styled/Icon";
+import Icon, { StyledIcon } from "../../Styled/Icon";
 import withControlledVisibility from "../HOCs/withControlledVisibility";
 import { withViewState } from "../Context";
 import Styles from "./full_screen_button.scss";
+import Button from "../../Styled/Button";
+import Branding from "./Branding";
 
 // The button to make the map full screen and hide the workbench.
 @observer
@@ -43,32 +46,24 @@
 
   renderButtonText() {
     const btnText = this.props.btnText ? this.props.btnText : null;
-    if (this.props.minified) {
       if (this.props.viewState.isMapFullScreen) {
-        return <Icon glyph={Icon.GLYPHS.right} />;
-      } else {
-        return <Icon glyph={Icon.GLYPHS.closeLight} />;
+      return <span>{btnText}</span>;
       }
     }
-    return (
-      <>
-        <span>{btnText}</span>
-        <Icon glyph={Icon.GLYPHS.right} />
-      </>
-    );
-  }
 
   render() {
-    const btnClassName = classNames(Styles.btn, {
-      [Styles.isActive]: this.props.viewState.isMapFullScreen,
-      [Styles.minified]: this.props.minified
-    });
+    // const btnClassName = classNames(Styles.btn, {
+    //   [Styles.isActive]: this.props.viewState.isMapFullScreen,
+    //   [Styles.minified]: this.props.minified
+    // });
     const { t } = this.props;
     return (
       <div
         className={classNames(Styles.fullScreen, {
           [Styles.minifiedFullscreenBtnWrapper]: this.props.minified,
-          [Styles.trainerBarVisible]: this.props.viewState.trainerBarVisible
+          [Styles.trainerBarVisible]: this.props.viewState.trainerBarVisible,
+          [Styles.fullScreenWrapper]:
+            this.props.viewState.isMapFullScreen && !this.props.minified
         })}
       >
         {this.props.minified && (
@@ -76,24 +71,49 @@
             {this.props.btnText}
           </label>
         )}
-        <button
-          type="button"
+        {this.props.viewState.isMapFullScreen && !this.props.minified && (
+          <Branding />
+        )}
+        <Button
           id="toggle-workbench"
+          css={`
+            border-radius: 0 4px 4px 0;
+            ${this.props.viewState.isMapFullScreen === false
+              ? `width: 16px;
+            padding: 0px;`
+              : `width: 100%; border-radius: 0;`}
+          `}
+          primary
+          onClick={() => this.toggleFullScreen()}
           aria-label={
             this.props.viewState.isMapFullScreen
-              ? t("sui.showWorkbench")
+              ? t("sui.showWorkbench", {
+                  count: this.props.viewState.terria.workbench.items.length
+                })
               : t("sui.hideWorkbench")
           }
-          onClick={() => this.toggleFullScreen()}
-          className={btnClassName}
           title={
             this.props.viewState.isMapFullScreen
-              ? t("sui.showWorkbench")
+              ? t("sui.showWorkbench", {
+                  count: this.props.viewState.terria.workbench.items.length
+                })
               : t("sui.hideWorkbench")
           }
+          renderIcon={() =>
+            this.props.viewState.isMapFullScreen ? (
+              <StyledIcon styledWidth="12px" light glyph={Icon.GLYPHS.right} />
+            ) : (
+              <StyledIcon
+                css="margin-right: 2px;"
+                light
+                styledWidth="12px"
+                glyph={Icon.GLYPHS.left}
+              />
+            )
+          }
         >
           {this.renderButtonText()}
-        </button>
+        </Button>
       </div>
     );
   }
diff --color -bur --ex ./lib/ReactViews/SidePanel/SidePanel.tsx ./lib/ReactViews/SidePanel/SidePanel.tsx
--- ./lib/ReactViews/SidePanel/SidePanel.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/SidePanel/SidePanel.tsx	2024-11-19 14:44:42
@@ -1,6 +1,6 @@
 import { observer } from "mobx-react";
 import React from "react";
-import { useTranslation, withTranslation } from "react-i18next";
+import { useTranslation, withTranslation, Trans } from "react-i18next";
 import styled, { DefaultTheme, withTheme } from "styled-components";
 import ViewState from "../../ReactViewModels/ViewState";
 import Box from "../../Styled/Box";
@@ -11,9 +11,11 @@
 import { ExplorerWindowElementName } from "../ExplorerWindow/ExplorerWindow";
 import { useRefForTerria } from "../Hooks/useRefForTerria";
 import SearchBoxAndResults from "../Search/SearchBoxAndResults";
-import { withViewState } from "../Context";
+import { useViewState, withViewState } from "../Context";
 import Workbench from "../Workbench/Workbench";
 import { applyTranslationIfExists } from "../../Language/languageHelpers";
+import { Category, HelpAction } from "../../Core/AnalyticEvents/analyticEvents";
+import { runInAction } from "mobx";
 
 const BoxHelpfulHints = styled(Box)``;
 
@@ -47,19 +49,69 @@
   theme: DefaultTheme;
 }
 
-const EmptyWorkbench: React.FC<EmptyWorkbenchProps> = (props) => {
+const EmptyWorkbench: React.FC<EmptyWorkbenchProps> = observer((props) => {
   const { t } = useTranslation();
+  const viewState = useViewState();
   return (
+    <Box overflowY="auto" scroll column fullWidth >
+      {/*hacky margin fix for spacing */}
     <Text large textLight>
-      <Box column fullWidth justifySpaceBetween>
-        <Box centered column>
-          <ResponsiveSpacing />
-          <Text large color={props.theme.textLightDimmed}>
-            {t("emptyWorkbench.emptyArea")}
+        <Box styledMargin="70px 0 0 0" centered column paddedRatio={3} justifySpaceBetween gap={3}>
+          <Text textAlignCenter large color="#E5E7EB">
+            <div>
+              <img
+                css={`
+                  margin: 15px 0;
+                `}
+                src="build/TerriaJS/images/map-paperPin.svg"
+              />
+            </div>
+            <Trans i18nKey="emptyWorkbench.emptyArea">
+              <p
+                css={`
+                  font-weight: bold;
+                `}
+              >
+                This is Your Digital Twin Data
+              </p>
+              <p>
+                When you add a dataset to the map, you’ll see its legend (key)
+                and settings right here so you can easily control how it looks.
+              </p>
+            </Trans>
           </Text>
-          <ResponsiveSpacing />
+          <Button
+            textLight
+            transparentBg
+            onClick={() => {
+              viewState.terria.analytics?.logEvent(
+                Category.help,
+                HelpAction.takeTour
+              );
+              runInAction(() => {
+                // viewState.hideHelpPanel();
+                viewState.setTourIndex(0);
+              });
+            }}
+            renderIcon={() => (
+              <StyledIcon light styledWidth={"18px"} glyph={Icon.GLYPHS.info} />
+            )}
+            textProps={{
+              large: true,
+              textLight: true
+            }}
+            css={``}
+          >
+            {t("helpPanel.takeTour")}
+          </Button>
         </Box>
-        <BoxHelpfulHints column paddedRatio={3} overflowY="auto" scroll>
+        <BoxHelpfulHints
+          column
+          paddedVertically={5}
+          paddedRatio={3}
+          overflowY="auto"
+          scroll
+        >
           <Box left>
             <Text extraLarge bold>
               {t("emptyWorkbench.helpfulHints")}
@@ -78,9 +130,25 @@
             <HelpfulHintsIcon />
             <Spacing right={1} />
             <Text medium light>
-              {t("emptyWorkbench.helpfulHintsTwo")}
+              After adding data, you’ll find your active datasets in this panel.
+              Here, you can:
+              <ul
+                css={`
+                  padding-left: 10px;
+                `}
+              >
+                <li>Turn data visibility on or off</li>
+                <li>Adjust transparency (make it more see-through)</li>
+                <li>Use split-screen to compare data side-by-side</li>
+                <li>Change styles (like map colours or lines)</li>
+                <li>
+                  Move through different dates and times if the data allows it
+                </li>
+              </ul>
+              {/*t("emptyWorkbench.helpfulHintsTwo")*/}
             </Text>
           </Box>
+          {/*
           <Spacing bottom={3} />
           <Box>
             <HelpfulHintsIcon />
@@ -89,12 +157,14 @@
               {t("emptyWorkbench.helpfulHintsThree")}
             </Text>
             </Box>
+            */}
           <ResponsiveSpacing />
         </BoxHelpfulHints>
-      </Box>
       </Text>
+    </Box >
+
   );
-};
+});
 
 type SidePanelButtonProps = {
   btnText?: string;
@@ -156,8 +226,8 @@
       <Box column styledMinHeight={"0"} flex={1}>
         <div
           css={`
-            padding: 0 5px;
-            background: ${theme.dark};
+            padding: 0 15px;
+            background: none;
           `}
         >
           <SearchBoxAndResults
@@ -175,7 +245,7 @@
               onClick={onAddDataClicked}
               title={addData}
               btnText={addData}
-              styledWidth={"200px"}
+              styledWidth={"152px"}
             >
               <StyledIcon glyph={Icon.GLYPHS.add} light styledWidth={"20px"} />
             </SidePanelButton>
@@ -184,7 +254,7 @@
               onClick={onAddLocalDataClicked}
               title={t("addData.load")}
               btnText={uploadText}
-              styledWidth={"130px"}
+              styledWidth={"152px"}
             >
               <StyledIcon
                 glyph={Icon.GLYPHS.uploadThin}
@@ -193,20 +263,25 @@
               />
             </SidePanelButton>
           </Box>
-          <Spacing bottom={1} />
+          <Spacing bottom={2} />
         </div>
         <Box
           styledMinHeight={"0"}
           flex={1}
+          column
           css={`
             overflow: hidden;
           `}
         >
-          {terria.workbench.items && terria.workbench.items.length > 0 ? (
             <Workbench viewState={viewState} terria={terria} />
-          ) : (
+          {terria.workbench.items.length === 0 && (
             <EmptyWorkbench theme={theme} />
           )}
+          {/*          {terria.workbench.items && terria.workbench.items.length > 0 ? (
+            <Workbench viewState={viewState} terria={terria} />
+          ) : (
+            <EmptyWorkbench theme={theme} />
+            )}*/}
         </Box>
       </Box>
     );
diff --color -bur --ex ./lib/ReactViews/SidePanel/full_screen_button.scss ./lib/ReactViews/SidePanel/full_screen_button.scss
--- ./lib/ReactViews/SidePanel/full_screen_button.scss	2024-12-12 12:56:09
+++ ./lib/ReactViews/SidePanel/full_screen_button.scss	2024-11-19 14:44:42
@@ -10,10 +10,21 @@
   display: none;
 }
 
+.fullScreenWrapper {
+  display: flex;
+  flex-direction: column;
+  align-items: center;
+  align-content: space-around;
+  background-color: $transparent-dark;
+  backdrop-filter: $blur;
+  width: $work-bench-width;
+  border-radius: $radius-xlarge;
+  overflow: hidden;
+}
+
 .minifiedFullscreenBtnWrapper {
-  // work bench width
-  left: 350px;
-  top: $map-button-top;
+  left: $work-bench-width;
+  top: 32px;
 }
 .trainerBarVisible {
   top: $map-button-top + $trainer-height;
@@ -39,7 +50,6 @@
   &,
   &:hover,
   &:focus {
-    border-radius: 0 $map-button-border-radius $map-button-border-radius 0;
     padding: 0;
     padding-right: $padding-small;
     box-shadow: none;
diff --color -bur --ex ./lib/ReactViews/SidePanel/full_screen_button.scss.d.ts ./lib/ReactViews/SidePanel/full_screen_button.scss.d.ts
--- ./lib/ReactViews/SidePanel/full_screen_button.scss.d.ts	2024-12-12 12:56:09
+++ ./lib/ReactViews/SidePanel/full_screen_button.scss.d.ts	2024-11-19 14:44:42
@@ -6,6 +6,7 @@
   'exit': string;
   'full-screen': string;
   'fullScreen': string;
+  'fullScreenWrapper': string;
   'isActive': string;
   'minified': string;
   'minifiedFullscreenBtnWrapper': string;
diff --color -bur --ex ./lib/ReactViews/StandardUserInterface/SidePanelContainer.tsx ./lib/ReactViews/StandardUserInterface/SidePanelContainer.tsx
--- ./lib/ReactViews/StandardUserInterface/SidePanelContainer.tsx	2024-12-12 12:56:09
+++ ./lib/ReactViews/StandardUserInterface/SidePanelContainer.tsx	2024-11-19 14:44:42
@@ -17,7 +17,17 @@
 }))<PropsType>`
   display: flex;
   flex-direction: column;
-  position: relative;
+  position: absolute;
+  left: ${(p) => p.theme.workbenchMargin}px;
+  top: ${(p) => p.theme.workbenchMargin}px;
+  max-height: calc(100% - 2 * ${(p) => p.theme.workbenchMargin}px);
+  /* when using position:absolute on we need to set min-height
+     to stretch the panel (eg: workbench)
+  */
+  min-height: calc(100% - 2 * ${(p) => p.theme.workbenchMargin}px);
+  z-index: 100;
+  background: ${(p) => p.theme.transparentDark};
+  backdrop-filter: ${(p) => p.theme.blur};
   font-family: ${(p) => p.theme.fontPop}px;
   width: ${(p) => p.theme.workbenchWidth}px;
   flex-basis: ${(p) => p.theme.workbenchWidth}px;
@@ -33,6 +43,7 @@
   visibility: ${(p) => (p.show ? "visible" : "hidden")};
   opacity: ${(p) => (p.show ? 1 : 0)};
   margin-left: ${(p) => (p.show ? "0px" : `-${p.theme.workbenchWidth}px`)};
+  border-radius: ${(p) => p.theme.radiusXL};
 `;
 
 export default withViewState(SidePanelContainer);
diff --color -bur --ex ./lib/ReactViews/StandardUserInterface/StandardUserInterface.tsx ./lib/ReactViews/StandardUserInterface/StandardUserInterface.tsx
--- ./lib/ReactViews/StandardUserInterface/StandardUserInterface.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/StandardUserInterface/StandardUserInterface.tsx	2024-11-19 14:44:42
@@ -212,7 +212,9 @@
                   >
                     <FullScreenButton
                       minified={false}
-                      btnText={t("sui.showWorkbench")}
+                      btnText={t("sui.showWorkbench", {
+                        count: props.viewState.terria.workbench.items.length
+                      })}
                       animationDuration={animationDuration}
                       elementConfig={props.terria.elements.get(
                         "show-workbench"
diff --color -bur --ex ./lib/ReactViews/StandardUserInterface/TrainerBar/TrainerBar.tsx ./lib/ReactViews/StandardUserInterface/TrainerBar/TrainerBar.tsx
--- ./lib/ReactViews/StandardUserInterface/TrainerBar/TrainerBar.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/StandardUserInterface/TrainerBar/TrainerBar.tsx	2024-11-19 14:44:42
@@ -19,9 +19,11 @@
 import measureElement, { MeasureElementProps } from "../../HOCs/measureElement";
 import { WithViewState, withViewState } from "../../Context";
 import { applyTranslationIfExists } from "../../../Language/languageHelpers";
-import StyledHtml from "../../Map/Panels/HelpPanel/StyledHtml";
-import CloseButton from "../../Generic/CloseButton";
 
+const StyledHtml: any =
+  require("../../Map/Panels/HelpPanel/StyledHtml").default;
+const CloseButton: any = require("../../Generic/CloseButton").default;
+
 const TrainerBarWrapper = styled(Box)<{ isMapFullScreen: boolean }>`
   top: 0;
   left: ${(p) => (p.isMapFullScreen ? 0 : Number(p.theme.workbenchWidth))}px;
@@ -89,7 +91,7 @@
       </Box>
       <Box column>
         <Translation>
-          {(_t, { i18n }) => (
+          {(t, { i18n }) => (
             <Text textLight extraExtraLarge semiBold>
               {applyTranslationIfExists(step.title, i18n)}
             </Text>
diff --color -bur --ex ./lib/ReactViews/StandardUserInterface/customizable/ResponsiveSwitch.jsx ./lib/ReactViews/StandardUserInterface/customizable/ResponsiveSwitch.jsx
--- ./lib/ReactViews/StandardUserInterface/customizable/ResponsiveSwitch.jsx	2024-12-23 14:57:45
+++ ./lib/ReactViews/StandardUserInterface/customizable/ResponsiveSwitch.jsx	2024-11-19 14:44:42
@@ -7,6 +7,7 @@
  * passed to it is true or false.
  */
 export default (LargeScreenComponent, SmallScreenComponent) => {
+  // eslint-disable-next-line require-jsdoc
   function ResponsiveSwitch(props) {
     return props.smallScreen ? (
       <SmallScreenComponent {...props} />
diff --color -bur --ex ./lib/ReactViews/Story/Story.tsx ./lib/ReactViews/Story/Story.tsx
--- ./lib/ReactViews/Story/Story.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Story/Story.tsx	2024-11-19 14:44:42
@@ -1,10 +1,6 @@
 import classNames from "classnames";
-import React, {
-  MouseEventHandler,
-  useEffect,
-  useLayoutEffect,
-  useRef
-} from "react";
+import { TFunction } from "i18next";
+import React, { MouseEventHandler, useEffect, useRef } from "react";
 import { sortable } from "react-anything-sortable";
 import { useTranslation } from "react-i18next";
 import styled, { useTheme } from "styled-components";
@@ -43,7 +39,7 @@
 }
 
 interface MenuProps extends Props {
-  storyRef: React.RefObject<HTMLElement>;
+  t: TFunction;
 }
 
 const findTextContent = (content: any): string => {
@@ -148,40 +144,24 @@
     hideList(props);
   };
 
-const StoryMenu = (props: MenuProps) => {
-  const { t } = useTranslation();
-  const menuRef = useRef<HTMLDivElement | null>(null);
-  useLayoutEffect(() => {
-    // Adjust the position of the menu so it stays inside the scroll container.
+const calculateOffset =
+  (props: Props) => (storyRef: React.RefObject<HTMLElement>) => {
+    const offsetTop = storyRef.current?.offsetTop || 0;
+    const scrollTop = props.parentRef.current.scrollTop || 0;
+    const heightParent =
+      (storyRef.current?.offsetParent as HTMLElement)?.offsetHeight || 0;
 
-    if (!menuRef.current) return;
-    if (!props.parentRef.current) return;
+    const offsetTopScroll = offsetTop - scrollTop + 25;
+    if (offsetTopScroll + 125 > heightParent) {
+      return `bottom ${offsetTopScroll + 125 - heightParent + 45}px;`;
+    }
+    return `top: ${offsetTopScroll}px;`;
+  };
 
-    // Grow downwards, by default:
-    Object.assign(menuRef.current.style, { top: "0px", bottom: "unset" });
+const renderMenu = (props: MenuProps) => {
+  const { t } = props;
 
-    const selfRect = menuRef.current.getBoundingClientRect();
-    const parentRect = props.parentRef.current.getBoundingClientRect();
-    if (selfRect.bottom > parentRect.bottom) {
-      // Looks like there's no room to the bottom; grow upwards.
-      Object.assign(menuRef.current.style, { top: "unset", bottom: "0px" });
-    }
-  }, [props.parentRef]);
   return (
-    <Box
-      ref={menuRef}
-      css={`
-        position: absolute;
-        z-index: 100;
-        right: 0px;
-        padding: 0;
-        margin: 0;
-
-        ul {
-          list-style: none;
-        }
-      `}
-    >
     <Ul column>
       <li>
         <StoryMenuButton
@@ -228,7 +208,6 @@
           </StoryMenuButton>
         </li>
       </Ul>
-    </Box>
   );
 };
 
@@ -258,6 +237,7 @@
           cursor: move;
           float: none !important;
         `}
+        position="static"
         style={props.style}
         className={classNames(props.className)}
         onMouseDown={props.onMouseDown}
@@ -265,6 +245,7 @@
       >
         <Box
           fullWidth
+          position="static"
           justifySpaceBetween
           padded
           verticalCenter
@@ -303,8 +284,26 @@
               />
             </MenuButton>
           </Box>
-          {props.menuOpen && <StoryMenu {...props} storyRef={storyRef} />}
+          {props.menuOpen && (
+            <Box
+              css={`
+                position: absolute;
+                z-index: 100;
+                right: 20px;
+
+                ${calculateOffset(props)(storyRef)}
+                padding: 0;
+                margin: 0;
+
+                ul {
+                  list-style: none;
+                }
+              `}
+            >
+              {renderMenu({ ...props, t })}
             </Box>
+          )}
+        </Box>
         {bodyText.length > 0 && (
           <Box paddedRatio={2} paddedHorizontally={3}>
             <Text textLight medium>
@@ -321,7 +320,7 @@
 const MenuButton = styled(RawButton)`
   padding: 0 10px 0 10px;
   min-height: 40px;
-  border-radius: ${(props) => props.theme.radiusLarge};
+  border-radius: ${(props) => props.theme.radiusSmall};
   background: transparent;
 
   &:hover,
diff --color -bur --ex ./lib/ReactViews/Story/StoryBuilder.tsx ./lib/ReactViews/Story/StoryBuilder.tsx
--- ./lib/ReactViews/Story/StoryBuilder.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Story/StoryBuilder.tsx	2024-11-19 14:44:42
@@ -293,13 +293,13 @@
     });
   };
 
-  renderPlayShare() {
+  renderPlayShare(hasStories: boolean | undefined) {
     const { t } = this.props;
     return (
       <Box justifySpaceBetween>
         <StoryButton
           fullWidth
-          disabled={this.state.editingMode}
+          disabled={this.state.editingMode || !hasStories}
           title={t("story.preview")}
           btnText={t("story.play")}
           onClick={this.runStories}
@@ -313,7 +313,7 @@
         <Spacing right={1} />
         <SharePanel
           storyShare
-          btnDisabled={this.state.editingMode}
+          btnDisabled={this.state.editingMode || !hasStories}
           terria={this.props.viewState.terria}
           viewState={this.props.viewState}
           modalWidth={(this.props.widthFromMeasureElementHOC ?? 100) - 22}
@@ -329,7 +329,7 @@
     });
   }
 
-  renderStories() {
+  renderStories(_editingMode: boolean) {
     const { t, i18n } = this.props;
     const stories = this.props.viewState.terria.stories || [];
     const storyName = this.state.storyToRemove
@@ -338,7 +338,7 @@
         : t("story.untitledScene")
       : "";
     return (
-      <>
+      <Box displayInlineBlock>
         <BadgeBar
           label={t("story.badgeBarLabel")}
           badge={this.props.viewState.terria.stories.length}
@@ -353,7 +353,7 @@
           </RawButton>
         </BadgeBar>
         <Spacing bottom={2} />
-        <Box column paddedHorizontally={2} flex={1} styledMinHeight="0">
+        <Box column paddedHorizontally={2}>
           {this.state.isRemoving && (
             <RemoveDialog
               theme={this.props.theme}
@@ -382,7 +382,7 @@
           )}
           <Box
             column
-            styledHeight="100%"
+            position="static"
             css={`
               ${(this.state.isRemoving || this.state.isSharing) &&
               `opacity: 0.3`}
@@ -392,7 +392,8 @@
               column
               scroll
               overflowY={"auto"}
-              styledMaxHeight="100%"
+              styledMaxHeight={"calc(100vh - 283px)"}
+              position="static"
               ref={this.storiesWrapperRef as React.RefObject<HTMLDivElement>}
               css={`
                 margin-right: -10px;
@@ -403,6 +404,7 @@
                 direction="vertical"
                 dynamic
                 css={`
+                  position: static;
                   margin-right: 10px;
                 `}
               >
@@ -431,10 +433,10 @@
               disabled={this.state.isRemoving}
               onClickCapture={this.onClickCapture}
             />
+          </Box>
             <Spacing bottom={2} />
           </Box>
         </Box>
-      </>
     );
   }
 
@@ -463,7 +465,9 @@
         ref={(component: HTMLElement) => (this.refToMeasure = component)}
         isVisible={this.props.isVisible}
         isHidden={!this.props.isVisible}
-        charcoalGreyBg
+        styledWidth={"320px"}
+        styledMinWidth={"320px"}
+        backgroundColor={this.props.theme.dark}
         column
       >
         <Box right>
@@ -491,10 +495,10 @@
           </Text>
           <Spacing bottom={3} />
           {!hasStories && this.renderIntro()}
-          {hasStories && this.renderPlayShare()}
+          {hasStories && this.renderPlayShare(hasStories)}
         </Box>
         <Spacing bottom={2} />
-        {hasStories && this.renderStories()}
+        {hasStories && this.renderStories(this.state.editingMode)}
         {this.state.editingMode && (
           <StoryEditor
             removeStory={this.removeStory}
@@ -517,9 +521,6 @@
 const Panel = styled(Box)<PanelProps>`
   transition: all 0.25s;
   transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
-  width: 320px;
-  min-width: 320px;
-  height: 100vh;
   ${(props) =>
     props.isVisible &&
     `
@@ -530,7 +531,7 @@
     props.isHidden &&
     `
     visibility: hidden;
-    margin-right: -100%;
+    margin-right: -${props.styledWidth ? props.styledWidth : "320px"};
   `}
 `;
 
diff --color -bur --ex ./lib/ReactViews/Story/StoryEditor.jsx ./lib/ReactViews/Story/StoryEditor.jsx
--- ./lib/ReactViews/Story/StoryEditor.jsx	2024-12-23 14:57:45
+++ ./lib/ReactViews/Story/StoryEditor.jsx	2024-11-19 14:44:42
@@ -33,6 +33,7 @@
     this.escKeyListener = null;
   }
 
+  /* eslint-disable-next-line camelcase */
   UNSAFE_componentWillMount() {
     const story = this.props.story;
     this.setState({
@@ -135,14 +136,7 @@
     this.setState({ text: value });
   }
 
-  removeStory() {
-    this.props.exitEditingMode();
-    if (this.state.id) {
-      this.props.removeStory(this.state.id);
-    }
-  }
-
-  render() {
+  renderPopupEditor() {
     const { t } = this.props;
     const maxImageHeight = "350px"; // TODO: where to put this to reduce coupling?
     return (
@@ -187,7 +181,7 @@
             <Suspense fallback={<div>Loading...</div>}>
               <Editor
                 html={this.state.text}
-                onChange={(_newValue, editor) => {
+                onChange={(newValue, editor) => {
                   // TODO: This makes StoryEditor tightly coupled to Editor. How to reduce coupling?
                   tinymce.activeEditor.dom.setStyles(
                     tinymce.activeEditor.dom.select("img"),
@@ -203,6 +197,17 @@
         </div>
       </div>
     );
+  }
+
+  removeStory() {
+    this.props.exitEditingMode();
+    if (this.state.id) {
+      this.props.removeStory(this.state.id);
+    }
+  }
+
+  render() {
+    return <div className={Styles.editor}>{this.renderPopupEditor()}</div>;
   }
 }
 
diff --color -bur --ex ./lib/ReactViews/Story/story-builder.scss ./lib/ReactViews/Story/story-builder.scss
--- ./lib/ReactViews/Story/story-builder.scss	2024-12-12 12:56:09
+++ ./lib/ReactViews/Story/story-builder.scss	2024-11-19 14:44:42
@@ -95,7 +95,7 @@
 .story {
   padding: $padding-small;
   margin: $padding-small;
-  background: #667080;
+  background: $dark;
   color: #ffffff;
   margin: $padding;
   border: 1px solid rgba(255, 255, 255, 0.15);
diff --color -bur --ex ./lib/ReactViews/Story/story-editor.scss ./lib/ReactViews/Story/story-editor.scss
--- ./lib/ReactViews/Story/story-editor.scss	2024-12-18 14:25:56
+++ ./lib/ReactViews/Story/story-editor.scss	2024-11-19 14:44:42
@@ -44,6 +44,21 @@
   }
 }
 
+.editor {
+  background: $dark-with-overlay;
+  color: $text-light;
+  font-family: $font-pop;
+  margin: $padding-small;
+  border-radius: 4px;
+  .editorHeader {
+    padding: $padding;
+    border-bottom: 1px solid $overlay;
+  }
+  form {
+    padding: $padding;
+  }
+}
+
 .field {
   composes: field from "../../Sass/common/_form.scss";
   border: 0;
@@ -51,9 +66,24 @@
   padding: 0 !important;
 }
 
+.fieldBtn {
+  composes: btn from "../../Sass/common/_buttons.scss";
+  composes: btn--map from "../../Sass/common/_buttons.scss";
+  background: #9ca1aa;
+  border-radius: 4px;
+  padding: $padding;
+  margin-bottom: $padding + 3px;
+  box-shadow: none;
+  width: 100%;
+}
+
+.doneBtn,
 .saveBtn {
   composes: btn from "../../Sass/common/_buttons.scss";
   composes: btn-primary from "../../Sass/common/_buttons.scss";
+}
+
+.saveBtn {
   width: auto;
   padding: 5px 15px;
 }
diff --color -bur --ex ./lib/ReactViews/Story/story-editor.scss.d.ts ./lib/ReactViews/Story/story-editor.scss.d.ts
--- ./lib/ReactViews/Story/story-editor.scss.d.ts	2024-12-18 14:25:56
+++ ./lib/ReactViews/Story/story-editor.scss.d.ts	2024-11-19 14:44:42
@@ -3,7 +3,11 @@
 interface CssExports {
   'body': string;
   'cancelBtn': string;
+  'doneBtn': string;
+  'editor': string;
+  'editorHeader': string;
   'field': string;
+  'fieldBtn': string;
   'header': string;
   'inner': string;
   'is-mounted': string;
diff --color -bur --ex ./lib/ReactViews/Tools/DiffTool/DatePicker.tsx ./lib/ReactViews/Tools/DiffTool/DatePicker.tsx
--- ./lib/ReactViews/Tools/DiffTool/DatePicker.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Tools/DiffTool/DatePicker.tsx	2024-11-19 14:44:42
@@ -13,7 +13,7 @@
 import Box from "../../../Styled/Box";
 import Button from "../../../Styled/Button";
 import Spacing from "../../../Styled/Spacing";
-import dateFormat from "dateformat";
+const dateFormat = require("dateformat");
 
 interface PropsType extends WithTranslation {
   heading: string;
diff --color -bur --ex ./lib/ReactViews/Tools/DiffTool/DiffTool.tsx ./lib/ReactViews/Tools/DiffTool/DiffTool.tsx
--- ./lib/ReactViews/Tools/DiffTool/DiffTool.tsx	2024-12-23 14:57:45
+++ ./lib/ReactViews/Tools/DiffTool/DiffTool.tsx	2024-11-19 14:44:42
@@ -53,8 +53,9 @@
 import LocationPicker from "./LocationPicker";
 import { CLOSE_TOOL_ID } from "../../Map/MapNavigation/registerMapNavigations";
 import updateModelFromJson from "../../../Models/Definition/updateModelFromJson";
-import dateFormat from "dateformat";
 
+const dateFormat = require("dateformat");
+
 type DiffableItem = DiffableMixin.Instance;
 
 interface PropsType extends WithTranslation {
@@ -100,8 +101,10 @@
         this.leftItem = leftItem;
         this.rightItem = rightItem;
       });
-    } catch {}
+    } catch {
+      /* eslint-disable-line no-empty */
     }
+  }
 
   @action
   removeSplitterItems() {
@@ -247,8 +250,8 @@
     if (!firstDate || !secondDate) {
       return name;
     } else {
-      const d1 = dateFormat(JulianDate.toDate(firstDate), format);
-      const d2 = dateFormat(JulianDate.toDate(secondDate), format);
+      const d1 = dateFormat(firstDate, format);
+      const d2 = dateFormat(secondDate, format);
       return `${name} - difference for dates ${d1}, ${d2}`;
     }
   }
@@ -564,11 +567,7 @@
                 <Box column alignItemsFlexStart>
                   {this.leftDate && (
                     <Text large>
-                      (A){" "}
-                      {dateFormat(
-                        JulianDate.toDate(this.leftDate),
-                        "dd/mm/yyyy"
-                      )}
+                      (A) {dateFormat(this.leftDate, "dd/mm/yyyy")}
                     </Text>
                   )}
                   {!this.leftDate && (
@@ -581,11 +580,7 @@
                   <Spacing bottom={1} />
                   {this.rightDate && (
                     <Text large>
-                      (B){" "}
-                      {dateFormat(
-                        JulianDate.toDate(this.rightDate),
-                        "dd/mm/yyyy"
-                      )}
+                      (B) {dateFormat(this.rightDate, "dd/mm/yyyy")}
                     </Text>
                   )}
                   {!this.rightDate && (
diff --color -bur --ex ./lib/ReactViews/Tools/ItemSearchTool/SearchForm.tsx ./lib/ReactViews/Tools/ItemSearchTool/SearchForm.tsx
--- ./lib/ReactViews/Tools/ItemSearchTool/SearchForm.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Tools/ItemSearchTool/SearchForm.tsx	2024-11-19 14:44:42
@@ -306,8 +306,7 @@
 })``;
 
 const ParameterName = styled(Text).attrs({
-  semiBold: true,
-  breakWord: true
+  semiBold: true
 })``;
 
 const Label = styled.label``;
diff --color -bur --ex ./lib/ReactViews/Tools/ItemSearchTool/SearchResults.tsx ./lib/ReactViews/Tools/ItemSearchTool/SearchResults.tsx
--- ./lib/ReactViews/Tools/ItemSearchTool/SearchResults.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Tools/ItemSearchTool/SearchResults.tsx	2024-11-19 14:44:42
@@ -1,6 +1,6 @@
 import { observer } from "mobx-react";
 import Mustache from "mustache";
-import React, { useRef, useState } from "react";
+import React, { useState } from "react";
 import { useTranslation } from "react-i18next";
 import { useVirtual } from "react-virtual";
 import styled from "styled-components";
@@ -28,7 +28,7 @@
     currentMapEffect.is === "highlightSingleResult"
       ? currentMapEffect.result
       : undefined;
-  const parentRef = useRef<HTMLDivElement>(null);
+  const parentRef = React.createRef<HTMLDivElement>();
   const list = useVirtual({
     size: results.length,
     parentRef,
diff --color -bur --ex ./lib/ReactViews/Tools/PedestrianMode/MouseTooltip.tsx ./lib/ReactViews/Tools/PedestrianMode/MouseTooltip.tsx
--- ./lib/ReactViews/Tools/PedestrianMode/MouseTooltip.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Tools/PedestrianMode/MouseTooltip.tsx	2024-11-19 14:44:42
@@ -1,4 +1,4 @@
-import React, { useEffect, useRef } from "react";
+import React, { createRef, useEffect } from "react";
 import styled from "styled-components";
 import Cartesian2 from "terriajs-cesium/Source/Core/Cartesian2";
 import Scene from "terriajs-cesium/Source/Scene/Scene";
@@ -11,7 +11,7 @@
 
 const MouseTooltip: React.FC<MouseTooltipProps> = (props) => {
   const { scene, text } = props;
-  const tooltipText = useRef<typeof TooltipText>(null);
+  const tooltipText = createRef<typeof TooltipText>();
 
   useEffect(function tooltipFollowMouse() {
     const setTooltipPosition = (position: { x: number; y: number }) => {
diff --color -bur --ex ./lib/ReactViews/Tools/ToolModal.tsx ./lib/ReactViews/Tools/ToolModal.tsx
--- ./lib/ReactViews/Tools/ToolModal.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Tools/ToolModal.tsx	2024-11-19 14:44:42
@@ -52,9 +52,6 @@
   );
 });
 
-const TOP_MARGIN = 70;
-const BOTTOM_MARGIN = 100;
-
 export const Main = styled(Text)`
   display: flex;
   flex-direction: column;
@@ -71,10 +68,9 @@
   styledWidth: "340px"
   // charcoalGreyBg: true
 })<{ isMapFullScreen: boolean }>`
-  top: ${TOP_MARGIN}px;
+  top: 70px;
   left: 0px;
   min-height: 220px;
-  max-height: calc(100vh - ${TOP_MARGIN + BOTTOM_MARGIN}px);
   // background: ${(p) => p.theme.dark};
   margin-left: ${(props) =>
     props.isMapFullScreen
Only in ./lib/ReactViews/Tour: TourExplanationBox.jsx
Only in ./lib/ReactViews/Tour: TourExplanationBox.tsx
diff --color -bur --ex ./lib/ReactViews/Tour/TourOverlay.jsx ./lib/ReactViews/Tour/TourOverlay.jsx
--- ./lib/ReactViews/Tour/TourOverlay.jsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Tour/TourOverlay.jsx	2024-11-19 14:44:42
@@ -1,3 +1,5 @@
+"use strict";
+
 import React from "react";
 import PropTypes from "prop-types";
 import Styles from "../HelpScreens/obscure-overlay.scss";
@@ -101,4 +103,4 @@
   onCancel: PropTypes.func.isRequired
 };
 
-export default TourOverlay;
+module.exports = TourOverlay;
diff --color -bur --ex ./lib/ReactViews/Tour/TourPortal.d.ts ./lib/ReactViews/Tour/TourPortal.d.ts
--- ./lib/ReactViews/Tour/TourPortal.d.ts	2024-12-18 14:25:56
+++ ./lib/ReactViews/Tour/TourPortal.d.ts	2024-11-19 14:44:42
@@ -3,6 +3,6 @@
 export declare const TourExplanation: React.FC<unknown>;
 export declare const TourPreface: React.FC<unknown>;
 
-declare const TourPortal: React.FC<object>;
+declare const TourPortal: React.FC<{}>;
 
 export default TourPortal;
diff --color -bur --ex ./lib/ReactViews/Tour/TourPortal.jsx ./lib/ReactViews/Tour/TourPortal.jsx
--- ./lib/ReactViews/Tour/TourPortal.jsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Tour/TourPortal.jsx	2024-11-19 14:44:42
@@ -32,10 +32,10 @@
 } from "./tour-helpers.ts";
 import TourExplanationBox, {
   TourExplanationBoxZIndex
-} from "./TourExplanationBox";
+} from "./TourExplanationBox.jsx";
 import TourIndicator from "./TourIndicator.jsx";
 import TourOverlay from "./TourOverlay.jsx";
-import TourPrefaceBox from "./TourPrefaceBox";
+import TourPrefaceBox from "./TourPrefaceBox.jsx";
 import TourProgressDot from "./TourProgressDot.jsx";
 
 /**
Only in ./lib/ReactViews/Tour: TourPrefaceBox.jsx
Only in ./lib/ReactViews/Tour: TourPrefaceBox.tsx
diff --color -bur --ex ./lib/ReactViews/WelcomeMessage/WelcomeMessage.d.ts ./lib/ReactViews/WelcomeMessage/WelcomeMessage.d.ts
--- ./lib/ReactViews/WelcomeMessage/WelcomeMessage.d.ts	2024-12-18 14:25:56
+++ ./lib/ReactViews/WelcomeMessage/WelcomeMessage.d.ts	2024-11-19 14:44:42
@@ -8,5 +8,5 @@
 
 export declare const WelcomeMessagePure: React.FC<WelcomeMessagePurePropsType>;
 
-declare class WelcomeMessage extends React.Component<object> {}
+declare class WelcomeMessage extends React.Component<{}> {}
 export default WelcomeMessage;
diff --color -bur --ex ./lib/ReactViews/Workbench/Controls/ColorScaleRangeSection.jsx ./lib/ReactViews/Workbench/Controls/ColorScaleRangeSection.jsx
--- ./lib/ReactViews/Workbench/Controls/ColorScaleRangeSection.jsx	2024-12-23 14:57:45
+++ ./lib/ReactViews/Workbench/Controls/ColorScaleRangeSection.jsx	2024-11-19 14:44:42
@@ -23,13 +23,14 @@
     };
   },
 
+  /* eslint-disable-next-line camelcase */
   UNSAFE_componentWillMount() {
     this.setState({
       minRange: this.props.minValue,
       maxRange: this.props.maxValue
     });
   },
-
+  /* eslint-disable-next-line camelcase */
   UNSAFE_componentWillReceiveProps(nextProps) {
     this.setState({
       minRange: nextProps.minValue,
diff --color -bur --ex ./lib/ReactViews/Workbench/Controls/Legend.tsx ./lib/ReactViews/Workbench/Controls/Legend.tsx
--- ./lib/ReactViews/Workbench/Controls/Legend.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Workbench/Controls/Legend.tsx	2024-11-19 14:44:42
@@ -1,3 +1,5 @@
+"use strict";
+
 import { observer } from "mobx-react";
 import React, { SyntheticEvent } from "react";
 import defined from "terriajs-cesium/Source/Core/defined";
diff --color -bur --ex ./lib/ReactViews/Workbench/Controls/OpacitySection.tsx ./lib/ReactViews/Workbench/Controls/OpacitySection.tsx
--- ./lib/ReactViews/Workbench/Controls/OpacitySection.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Workbench/Controls/OpacitySection.tsx	2024-11-19 14:44:42
@@ -1,3 +1,5 @@
+"use strict";
+
 import { TFunction } from "i18next";
 import { runInAction } from "mobx";
 import { observer } from "mobx-react";
diff --color -bur --ex ./lib/ReactViews/Workbench/Controls/TimerSection.jsx ./lib/ReactViews/Workbench/Controls/TimerSection.jsx
--- ./lib/ReactViews/Workbench/Controls/TimerSection.jsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Workbench/Controls/TimerSection.jsx	2024-11-19 14:44:42
@@ -4,6 +4,7 @@
 import defined from "terriajs-cesium/Source/Core/defined";
 import Timer from "../../Generic/Timer/Timer";
 import { withTranslation } from "react-i18next";
+
 import Styles from "./timer-section.scss";
 
 @observer
diff --color -bur --ex ./lib/ReactViews/Workbench/Controls/ViewingControls.tsx ./lib/ReactViews/Workbench/Controls/ViewingControls.tsx
--- ./lib/ReactViews/Workbench/Controls/ViewingControls.tsx	2024-12-23 14:57:45
+++ ./lib/ReactViews/Workbench/Controls/ViewingControls.tsx	2024-11-19 14:44:42
@@ -110,6 +110,7 @@
     };
   }
 
+  /* eslint-disable-next-line camelcase */
   UNSAFE_componentWillMount() {
     window.addEventListener("click", this.hideMenu.bind(this));
   }
diff --color -bur --ex ./lib/ReactViews/Workbench/Controls/timer-section.scss ./lib/ReactViews/Workbench/Controls/timer-section.scss
--- ./lib/ReactViews/Workbench/Controls/timer-section.scss	2024-12-12 12:56:09
+++ ./lib/ReactViews/Workbench/Controls/timer-section.scss	2024-11-19 14:44:42
@@ -1,7 +1,7 @@
 @import "~terriajs-variables";
 
 .section {
-  background: $overlay;
+  background: $dark;
   margin-top: 10px;
   display: flex;
   padding: $padding;
diff --color -bur --ex ./lib/ReactViews/Workbench/Workbench.tsx ./lib/ReactViews/Workbench/Workbench.tsx
--- ./lib/ReactViews/Workbench/Workbench.tsx	2024-12-12 12:56:09
+++ ./lib/ReactViews/Workbench/Workbench.tsx	2024-11-19 14:44:42
@@ -16,6 +16,7 @@
   Category,
   DataSourceAction
 } from "../../Core/AnalyticEvents/analyticEvents";
+import MappableMixin from "../../ModelMixins/MappableMixin";
 
 interface IProps extends WithTranslation {
   terria: Terria;
@@ -30,6 +31,14 @@
     makeObservable(this);
   }
 
+  disableAll() {
+    this.props.terria.workbench.disableAll();
+  }
+
+  enableAll() {
+    this.props.terria.workbench.enableAll();
+  }
+
   @action.bound
   collapseAll() {
     runInAction(() => {
@@ -61,34 +70,63 @@
   render() {
     const { t } = this.props;
     const shouldExpandAll = this.props.terria.workbench.shouldExpandAll;
+
+    // show enable all button if some items are disabled
+    const showEnableAll = this.props.terria.workbench.items
+      .filter((it): it is MappableMixin.Instance =>
+        MappableMixin.isMixedInto(it)
+      )
+      .every((it) => !it.show);
+
     return (
-      <Box column fullWidth styledMinHeight={"0"}>
+      <Box column fullWidth styledMinHeight={"0"} flex="1">
         <BadgeBar
           label={t("workbench.label")}
           badge={this.props.terria.workbench.items.length}
         >
+          {showEnableAll ? (
           <RawButton
-            onClick={this.removeAll}
+              onClick={() => this.enableAll()}
             css={`
               display: flex;
               align-items: center;
-              padding: 0 5px;
-              svg {
-                vertical-align: middle;
-                padding-right: 4px;
-              }
+                padding-left: 5px;
+                min-width: 90px;
+                justify-content: space-evenly;
             `}
           >
             <StyledIcon
-              glyph={Icon.GLYPHS.remove}
+                glyph={Icon.GLYPHS.enable}
               light
               styledWidth={"12px"}
               displayInline
             />
             <TextSpan textLight small>
-              {t("workbench.removeAll")}
+                {t("workbench.enableAll")}
               </TextSpan>
             </RawButton>
+          ) : (
+            <RawButton
+              onClick={() => this.disableAll()}
+              css={`
+                display: flex;
+                align-items: center;
+                padding-left: 5px;
+                min-width: 90px;
+                justify-content: space-evenly;
+              `}
+            >
+              <StyledIcon
+                glyph={Icon.GLYPHS.disable}
+                light
+                styledWidth={"12px"}
+                displayInline
+              />
+              <TextSpan textLight small>
+                {t("workbench.disableAll")}
+              </TextSpan>
+            </RawButton>
+          )}
           {shouldExpandAll ? (
             <RawButton
               onClick={this.expandAll}
@@ -96,8 +134,16 @@
                 display: flex;
                 align-items: center;
                 padding-left: 5px;
+                min-width: 90px;
+                justify-content: space-evenly;
               `}
             >
+              <StyledIcon
+                glyph={Icon.GLYPHS.expandAll}
+                light
+                styledWidth={"12px"}
+                displayInline
+              />
               <TextSpan textLight small>
                 {t("workbench.expandAll")}
               </TextSpan>
@@ -109,13 +155,45 @@
                 display: flex;
                 align-items: center;
                 padding-left: 5px;
+                min-width: 90px;
+                justify-content: space-evenly;
               `}
             >
+              <StyledIcon
+                glyph={Icon.GLYPHS.collapse}
+                light
+                styledWidth={"12px"}
+                displayInline
+              />
               <TextSpan textLight small>
                 {t("workbench.collapseAll")}
               </TextSpan>
             </RawButton>
           )}
+          <RawButton
+            onClick={this.removeAll}
+            css={`
+              display: flex;
+              align-items: center;
+              padding: 0 5px;
+              min-width: 90px;
+              justify-content: space-evenly;
+              svg {
+                vertical-align: middle;
+                padding-right: 4px;
+              }
+            `}
+          >
+            <StyledIcon
+              glyph={Icon.GLYPHS.remove}
+              light
+              styledWidth={"12px"}
+              displayInline
+            />
+            <TextSpan textLight small>
+              {t("workbench.removeAll")}
+            </TextSpan>
+          </RawButton>
         </BadgeBar>
         <WorkbenchList
           viewState={this.props.viewState}
diff --color -bur --ex ./lib/ReactViews/Workbench/WorkbenchButton.tsx ./lib/ReactViews/Workbench/WorkbenchButton.tsx
--- ./lib/ReactViews/Workbench/WorkbenchButton.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Workbench/WorkbenchButton.tsx	2024-11-19 14:44:42
@@ -1,3 +1,4 @@
+"use strict";
 import React from "react";
 import styled from "styled-components";
 import Box from "../../Styled/Box";
@@ -22,7 +23,7 @@
 // styles half ripped from nav.scss
 const StyledWorkbenchButton = styled(RawButton)<IStyledWorkbenchButton>`
   border-radius: 3px;
-  background: ${(props) => props.theme.dark};
+  background: ${(props) => props.theme.darkLighter};
   color: ${(props) => props.theme.textLight};
   flex-grow: 1;
 
diff --color -bur --ex ./lib/ReactViews/Workbench/WorkbenchItem.tsx ./lib/ReactViews/Workbench/WorkbenchItem.tsx
--- ./lib/ReactViews/Workbench/WorkbenchItem.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Workbench/WorkbenchItem.tsx	2024-11-19 14:44:42
@@ -83,9 +83,14 @@
 
     return (
       <StyledLi style={this.props.style} className={this.props.className}>
-        <Box fullWidth justifySpaceBetween padded styledMinHeight="38px">
+        <Box
+          fullWidth
+          justifySpaceBetween
+          paddedRatio={3}
+          styledMinHeight="38px"
+        >
           <Box fullWidth>
-            <Box left fullWidth paddedHorizontally centered>
+            <Box left fullWidth centered>
               <DraggableBox
                 onMouseDown={this.props.onMouseDown}
                 onTouchStart={this.props.onTouchStart}
@@ -104,20 +109,16 @@
                   </BoxSpan>
                 )}
                 {MappableMixin.isMixedInto(item) ? (
-                  <Box
-                    left
-                    verticalCenter
-                    css={`
-                      padding-left: 5px;
-                    `}
-                  >
+                  <Box left verticalCenter>
                     <Checkbox
                       id="workbenchtoggleVisibility"
                       isChecked={item.show}
+                      isSwitch
                       title={t("workbench.toggleVisibility")}
                       onChange={() => this.toggleVisibility()}
                       css={`
                         overflow-wrap: anywhere;
+                        margin-right: 5px;
                       `}
                       textProps={{ medium: true, fullWidth: true }}
                     >
@@ -176,12 +177,14 @@
         {this.isOpen && (
           <>
             <Spacing
-              bottom={2}
+              bottom={3}
               css={`
-                border-top: 1px solid ${this.props.theme.dark};
+                margin-left: 15px;
+                margin-right: 15px;
+                border-top: 1px solid ${this.props.theme.darkLighter};
               `}
             />
-            <Box column paddedHorizontally={2}>
+            <Box column paddedHorizontally={3}>
               <WorkbenchItemControls
                 item={this.props.item}
                 viewState={this.props.viewState}
@@ -208,8 +211,12 @@
   background: ${(p) => p.theme.darkWithOverlay};
   color: ${(p) => p.theme.textLight};
   border-radius: 4px;
-  margin-bottom: 5px;
   width: 100%;
+
+  margin-bottom: 20px;
+  &:last-child {
+    margin-bottom: 0px;
+  }
 `;
 
 export default sortable(withTranslation()(withTheme(WorkbenchItemRaw)));
diff --color -bur --ex ./lib/ReactViews/Workbench/WorkbenchList.tsx ./lib/ReactViews/Workbench/WorkbenchList.tsx
--- ./lib/ReactViews/Workbench/WorkbenchList.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Workbench/WorkbenchList.tsx	2024-11-19 14:44:42
@@ -11,7 +11,7 @@
 import WorkbenchSplitScreen from "./WorkbenchSplitScreen";
 
 const StyledUl = styled(Ul)`
-  margin: 5px 0;
+  margin: 15px 0;
   li {
     &:first-child {
       margin-top: 0;
@@ -33,7 +33,7 @@
 
   @action.bound
   onSort(
-    _sortedArray: any,
+    sortedArray: any,
     currentDraggingSortData: any,
     currentDraggingIndex: any
   ) {
@@ -49,10 +49,13 @@
         overflowY="auto"
         overflowX="hidden"
         scroll
-        paddedHorizontally
+        css={`
+          padding: 0 15px;
+        `}
         fullWidth
         fullHeight
         column
+        flex="1"
       >
         {this.props.terria.showSplitter && (
           <WorkbenchSplitScreen terria={this.props.terria} />
diff --color -bur --ex ./lib/ReactViews/Workflow/WorkflowPanel.tsx ./lib/ReactViews/Workflow/WorkflowPanel.tsx
--- ./lib/ReactViews/Workflow/WorkflowPanel.tsx	2024-12-18 14:25:56
+++ ./lib/ReactViews/Workflow/WorkflowPanel.tsx	2025-01-07 14:46:27
@@ -105,7 +105,7 @@
   flex-direction: column;
   font-family: ${(p) => p.theme.fontPop}px;
   width: ${(p) => p.theme.workflowPanelWidth}px;
-  height: 100vh;
+  height: calc(100vh - 2 * ${(p) => p.theme.workbenchMargin}px);
   max-width: ${(p) => p.theme.workflowPanelWidth}px;
   box-sizing: border-box;
   padding: 0 0 5px;
@@ -122,7 +122,7 @@
 
 const Title = styled(Text).attrs({
   textLight: true,
-  bold: true
+  extraExtraLarge: true
 })`
   flex-grow: 1;
   padding: 0 1em;
@@ -145,13 +145,8 @@
 `;
 
 const CloseButton = styled(Button).attrs({
-  secondary: true
-})`
-  border: 0px;
-  border-radius: 3px;
-  min-height: 0;
-  padding: 3px 12px;
-`;
+  primary: true
+})``;
 
 const Error = styled.div`
   display: flex;
diff --color -bur --ex ./lib/ReactViews/Workflow/WorkflowPanelPortal.tsx ./lib/ReactViews/Workflow/WorkflowPanelPortal.tsx
--- ./lib/ReactViews/Workflow/WorkflowPanelPortal.tsx	2024-12-12 12:56:09
+++ ./lib/ReactViews/Workflow/WorkflowPanelPortal.tsx	2024-11-19 14:44:42
@@ -21,14 +21,21 @@
 };
 
 const Container = styled.div<{ show: boolean }>`
-  height: 100vh;
   width: ${(p) => p.theme.workflowPanelWidth}px;
   max-width: ${(p) => p.theme.workflowPanelWidth}px;
+  position: absolute;
+  left: ${(p) => p.theme.workbenchMargin}px;
+  top: ${(p) => p.theme.workbenchMargin}px;
+  max-height: calc(100% - 2 * ${(p) => p.theme.workbenchMargin}px);
+  z-index: 100;
+  background: ${(p) => p.theme.transparentDark};
+  backdrop-filter: ${(p) => p.theme.blur};
   transition: all 0.25s;
   transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
   visibility: ${(p) => (p.show ? "visible" : "hidden")};
   margin-left: ${(p) => (p.show ? "0px" : `-${p.theme.workflowPanelWidth}px`)};
   opacity: ${(p) => (p.show ? 1 : 0)};
+  border-radius: ${(p) => p.theme.radiusXL}; ;
 `;
 
 export default WorkflowPanelPortal;
diff --color -bur --ex ./lib/Sass/common/_base.scss ./lib/Sass/common/_base.scss
--- ./lib/Sass/common/_base.scss	2024-12-18 14:25:56
+++ ./lib/Sass/common/_base.scss	2024-11-19 14:44:42
@@ -474,11 +474,11 @@
   }
 
   &::-webkit-scrollbar-track {
-    background: rgba(#888, 0.1);
+    background: $scrollbar-track-color;
   }
 
   &::-webkit-scrollbar-thumb {
-    background: rgba(#888, 0.6);
+    background: $scrollbar-color;
   }
 }
 
diff --color -bur --ex ./lib/Sass/common/_variables.scss ./lib/Sass/common/_variables.scss
--- ./lib/Sass/common/_variables.scss	2024-12-18 14:25:56
+++ ./lib/Sass/common/_variables.scss	2025-01-07 14:46:27
@@ -1,25 +1,29 @@
 @use "sass:color";
 
-@import url("https://fonts.googleapis.com/css?family=Nunito:300,400,500,400italic,600,700&display=swap");
+@import url("https://fonts.googleapis.com/css?family=Inter:300,400,500,400italic,600,700&display=swap");
 
-$font-pop: "Nunito", sans-serif;
-$font-base: "Nunito", sans-serif;
-$font-mono: monospace, sans-serif;
+$font-pop: "Inter", sans-serif;
+$font-base: "Inter", sans-serif;
+$font-mono: "Inter", sans-serif;
 $font-feature-info: $font-mono;
 $font: $font-base;
 
-$color-primary: #519ac2;
+$color-primary: #35a7c4;
 $color-primary-disabled: #595b60;
 @function get-hover-color($base-color) {
   @return color.adjust($base-color, $lightness: 10%);
 }
-$color-secondary: #ff6f00;
+$color-secondary: #F59E0B;
 
 $animation-fast: 0.1s;
 
-$dark: #3f4854;
-$dark-with-overlay: #667080;
-$dark-lighter: #595b60;
+$transparent-dark: #111827BF; 
+
+$blur: blur(5px);
+
+$dark: #111827;
+$dark-with-overlay: #111827;
+$dark-lighter: #374151;
 $grey: #888888;
 $grey-lighter: #ddd;
 // todo: Fix during overhaul
@@ -76,7 +80,7 @@
 $input-glyph-margin: 8px; // This value should be $input-height * 0.2
 
 $sm-logo-height: $input-height;
-$logo-height: 70px;
+$logo-height: 100px;
 $mobile-header-height: 50px;
 
 $modal-bg: #fff;
@@ -133,12 +137,13 @@
 $map-button-color: #9ca1aa;
 $map-button-top: 18px;
 $trainer-height: 64px;
-$map-button-border-radius: 16px;
+$map-button-border-radius: 4px;
 $work-bench-width: 350px;
 $setting-panel: 300px;
 $share-panel-width: 450px;
 $share-panel-caret-left: 215px;
 $feature-info-panel-width: 500px;
+$panel-radius: 8px;
 
 $badge-height: $input-height;
 $story-title-height: $input-height;
@@ -149,6 +154,7 @@
 $border-style: 1px solid $border-color;
 $box-shadow: 0 0 2px 0 rgba(0, 0, 0, 0.12), 0 2px 2px 0 rgba(0, 0, 0, 0.24);
 
+$radius-xlarge: 8px;
 $radius-large: 4px;
 $radius-medium: 3px;
 $radius-small: 2px;
@@ -188,3 +194,6 @@
 $legend-spacer-height: calc($legend-padding / 2);
 
 $tool-primary-color: $color-primary;
+
+$scrollbar-color: $color-primary;
+$scrollbar-track-color: $dark;
diff --color -bur --ex ./lib/Sass/exports/_variables-export.scss ./lib/Sass/exports/_variables-export.scss
--- ./lib/Sass/exports/_variables-export.scss	2024-12-12 12:56:09
+++ ./lib/Sass/exports/_variables-export.scss	2024-11-19 14:44:42
@@ -35,6 +35,7 @@
   radius40Button: 20;
   radiusLarge: $radius-large;
   radiusSmall: $radius-small;
+  radiusXL: $radius-xlarge;
 
   overlay: $overlay;
   overlayInvert: $overlay-invert;
@@ -49,6 +50,8 @@
   textDarker: $text-darker;
   textBlack: $text-black;
   turquoiseBlue: $turquoise-blue;
+  transparentDark: $transparent-dark;
+  blur: $blur;
   dark: $dark;
   darkWithOverlay: $dark-with-overlay;
   darkLighter: $dark-lighter;
@@ -69,21 +72,26 @@
   modalText: $modal-text;
   modalHighlight: $modal-highlight;
 
+  scrollbarColor: $scrollbar-color;
+  scrollbarTrackColor: $scrollbar-track-color;
+
   // TODO: fix, these are stopgaps & should get merged in with something else(?)
   mapButtonColor: $map-button-color;
   mapButtonTop: 18;
   mapNavigationTop: 80;
 
   trainerHeight: 64;
+  workbenchMargin: 21;
   workbenchWidth: 350;
   workflowPanelWidth: 350;
+  panelRadius: $panel-radius;
 
   toolPrimaryColor: $tool-primary-color;
 
   // Branding
   logoHeight: $logo-height;
   logoPaddingVertical: 15px;
-  logoPaddingHorizontal: 5px;
+  logoPaddingHorizontal: 15px;
 
   logoSmallHeight: $input-height;
   logoSmallPaddingHorizontal: 0;
diff --color -bur --ex ./lib/Sass/exports/_variables-export.scss.d.ts ./lib/Sass/exports/_variables-export.scss.d.ts
--- ./lib/Sass/exports/_variables-export.scss.d.ts	2024-12-12 12:56:09
+++ ./lib/Sass/exports/_variables-export.scss.d.ts	2024-11-19 14:44:42
@@ -1,6 +1,7 @@
 // This file is automatically generated.
 // Please do not change this file!
 interface CssExports {
+  'blur': string;
   'charcoalGrey': string;
   'colorPrimary': string;
   'colorSecondary': string;
@@ -38,10 +39,15 @@
   'notificationWindowZIndex': string;
   'overlay': string;
   'overlayInvert': string;
+  'panelRadius': string;
   'radius40Button': string;
   'radiusLarge': string;
   'radiusSmall': string;
+  'radiusXL': string;
+  'radiusXl': string;
   'ringWidth': string;
+  'scrollbarColor': string;
+  'scrollbarTrackColor': string;
   'sm': string;
   'spacing': string;
   'textBlack': string;
@@ -52,7 +58,9 @@
   'textLightTranslucent': string;
   'toolPrimaryColor': string;
   'trainerHeight': string;
+  'transparentDark': string;
   'turquoiseBlue': string;
+  'workbenchMargin': string;
   'workbenchWidth': string;
   'workflowPanelWidth': string;
 }
diff --color -bur --ex ./lib/Styled/Box.tsx ./lib/Styled/Box.tsx
--- ./lib/Styled/Box.tsx	2024-12-18 14:25:56
+++ ./lib/Styled/Box.tsx	2024-11-19 14:44:42
@@ -233,11 +233,12 @@
     }
 
     &::-webkit-scrollbar-track {
-      background: rgba(136,136,136,0.1);
+      background: ${props.theme.scrollbarTrackColor};
     }
 
     &::-webkit-scrollbar-thumb {
-      background: rgba(136,136,136,0.6);
+      background: ${props.theme.scrollbarColor};
+      border-radius: ${props.theme.radiusLarge}
     }
   `}
 `;
diff --color -bur --ex ./lib/Styled/Button.tsx ./lib/Styled/Button.tsx
--- ./lib/Styled/Button.tsx	2024-12-18 14:25:56
+++ ./lib/Styled/Button.tsx	2024-11-19 14:44:42
@@ -75,7 +75,11 @@
     color: #fff;
     background-color: ${props.theme.colorPrimary};
     border: none;
-    border-radius:20px;
+    border-radius:4px;
+        &:hover,
+    &:focus {
+
+    }
   `}
   ${(props) => props.rounded && ` border-radius: 32px; `}
   ${(props) => props.roundLeft && `border-radius: 32px 0 0 32px;`}
@@ -87,7 +91,7 @@
     // background-color: #4d5766;
     background-color: ${props.theme.textLight};
     color: ${props.theme.darkWithOverlay};
-    border-radius: 20px;
+    border-radius: 4px;
     border: 2px solid ${props.theme.darkWithOverlay};
   `}
   ${(props) =>
diff --color -bur --ex ./lib/Styled/Checkbox/Checkbox.tsx ./lib/Styled/Checkbox/Checkbox.tsx
--- ./lib/Styled/Checkbox/Checkbox.tsx	2024-12-18 14:25:56
+++ ./lib/Styled/Checkbox/Checkbox.tsx	2024-11-19 14:44:42
@@ -21,6 +21,7 @@
   const {
     isChecked: isCheckedProp,
     isDisabled = false,
+    isSwitch = false,
     defaultChecked = false,
     isIndeterminate = false,
     onChange: onChangeProps,
@@ -82,6 +83,7 @@
       css={`
         display: flex;
         flex-shrink: 0;
+        ${isSwitch && `gap: 5px;`}
         align-items: center;
         &:focus-within {
           //copy the global focus
@@ -111,6 +113,7 @@
         ref={ref}
       />
       <CheckboxIcon
+        isSwitch={isSwitch}
         isIndeterminate={isIndeterminate}
         isChecked={isChecked}
         isDisabled={isDisabled}
diff --color -bur --ex ./lib/Styled/Checkbox/Elements/CheckboxIcon.tsx ./lib/Styled/Checkbox/Elements/CheckboxIcon.tsx
--- ./lib/Styled/Checkbox/Elements/CheckboxIcon.tsx	2024-12-12 12:56:09
+++ ./lib/Styled/Checkbox/Elements/CheckboxIcon.tsx	2024-11-19 14:44:42
@@ -5,7 +5,7 @@
 
 const StyledCheckboxIcon = styled(StyledIcon).attrs({
   styledWidth: "1em"
-})<{ disabled?: boolean }>`
+})<{ disabled?: boolean; isSwitch?: boolean }>`
   top: 0.125em;
   align-self: flex-start;
   position: relative;
@@ -17,16 +17,27 @@
       opacity: 0.6;
     }
   `}
+  ${(props) =>
+    props.isSwitch &&
+    `
+    width: 28px;
+    &:hover {
+      opacity: 0.95;
+    }
+  `}
 `;
 
 const CheckboxIcon: React.FC<CheckboxIconProps> = (
   props: CheckboxIconProps
 ) => {
+  const iconOn = props.isSwitch ? GLYPHS.switchOn : GLYPHS.checkboxOn;
+  const iconOff = props.isSwitch ? GLYPHS.switchOff : GLYPHS.checkboxOff;
   if (props.isDisabled) {
     return (
       <StyledCheckboxIcon
-        glyph={props.isChecked ? GLYPHS.checkboxOn : GLYPHS.checkboxOff}
+        glyph={props.isChecked ? iconOn : iconOff}
         disabled
+        isSwitch={props.isSwitch}
         css={`
           cursor: not-allowed;
           opacity: 0.3;
@@ -34,11 +45,17 @@
       />
     );
   } else if (props.isIndeterminate) {
-    return <StyledCheckboxIcon glyph={GLYPHS.checkboxIndeterminate} />;
+    return (
+      <StyledCheckboxIcon
+        isSwitch={props.isSwitch}
+        glyph={GLYPHS.checkboxIndeterminate}
+      />
+    );
   } else {
     return (
       <StyledCheckboxIcon
-        glyph={props.isChecked ? GLYPHS.checkboxOn : GLYPHS.checkboxOff}
+        isSwitch={props.isSwitch}
+        glyph={props.isChecked ? iconOn : iconOff}
       />
     );
   }
diff --color -bur --ex ./lib/Styled/Checkbox/types.ts ./lib/Styled/Checkbox/types.ts
--- ./lib/Styled/Checkbox/types.ts	2024-12-12 12:56:09
+++ ./lib/Styled/Checkbox/types.ts	2024-11-19 14:44:42
@@ -23,6 +23,8 @@
   title?: string;
   /** The name of the submitted field in a checkbox. */
   name?: string;
+  /** Whether to use "switch" icons instead */
+  isSwitch?: boolean;
   /**
    * Function that is called whenever the state of the checkbox changes. It will
    * be called with an object containing the react synthetic event. Use
@@ -50,6 +52,9 @@
 };
 
 export interface CheckboxIconProps {
+  /* Override svg icon to use switch icon */
+  isSwitch?: boolean;
+  iconIndeterminate?: any;
   /** Sets whether the checkbox is checked or unchecked. */
   isChecked?: boolean;
   /** Sets whether the checkbox is disabled. */
diff --color -bur --ex ./lib/Styled/Icon.tsx ./lib/Styled/Icon.tsx
--- ./lib/Styled/Icon.tsx	2024-12-12 12:56:09
+++ ./lib/Styled/Icon.tsx	2024-11-19 14:44:42
@@ -24,6 +24,8 @@
   checkboxIndeterminate: require("../../wwwroot/images/icons/checkbox-indeterminate.svg"),
   checkboxOff: require("../../wwwroot/images/icons/checkbox-off.svg"),
   checkboxOn: require("../../wwwroot/images/icons/checkbox-on.svg"),
+  switchOn: require("../../wwwroot/images/icons/switch-on.svg"),
+  switchOff: require("../../wwwroot/images/icons/switch-off.svg"),
   close: require("../../wwwroot/images/icons/close.svg"),
   closeLight: require("../../wwwroot/images/icons/close-light.svg"),
   closed: require("../../wwwroot/images/icons/closed.svg"),
@@ -60,6 +62,10 @@
   radioOn: require("../../wwwroot/images/icons/radio-on.svg"),
   refresh: require("../../wwwroot/images/icons/refresh.svg"),
   remove: require("../../wwwroot/images/icons/remove.svg"),
+  disable: require("../../wwwroot/images/icons/disable.svg"),
+  enable: require("../../wwwroot/images/icons/enable.svg"),
+  collapse: require("../../wwwroot/images/icons/collapse.svg"),
+  expandAll: require("../../wwwroot/images/icons/expandAll.svg"),
   right: require("../../wwwroot/images/icons/right.svg"),
   right2: require("../../wwwroot/images/icons/right2.svg"),
   revert: require("../../wwwroot/images/icons/revert.svg"),
diff --color -bur --ex ./lib/Table/ColorStyleLegend.ts ./lib/Table/ColorStyleLegend.ts
--- ./lib/Table/ColorStyleLegend.ts	2024-12-18 14:25:56
+++ ./lib/Table/ColorStyleLegend.ts	2024-11-19 14:44:42
@@ -267,7 +267,7 @@
   }
 
   private _createLegendItemsFromConstantColorMap(
-    _style: TableStyle,
+    style: TableStyle,
     colorMap: ConstantColorMap,
     legendItemOverrides: Partial<LegendItemTraits>
   ): StratumFromTraits<LegendItemTraits>[] {
diff --color -bur --ex ./lib/Table/TableColorMap.ts ./lib/Table/TableColorMap.ts
--- ./lib/Table/TableColorMap.ts	2024-12-18 14:25:56
+++ ./lib/Table/TableColorMap.ts	2024-11-19 14:44:42
@@ -693,7 +693,7 @@
   }
 
   // TODO: Make TableColorMap use Result to pass warnings up model layer
-  invalidColorPaletteWarning(): void {
+  invalidColorPaletteWarning() {
     if (
       this.colorColumn?.name &&
       this.colorColumn?.tableModel.activeStyle === this.colorColumn?.name
diff --color -bur --ex ./lib/Table/TableColumn.ts ./lib/Table/TableColumn.ts
--- ./lib/Table/TableColumn.ts	2024-12-18 14:25:56
+++ ./lib/Table/TableColumn.ts	2024-11-19 14:44:42
@@ -13,6 +13,8 @@
   THIS_COLUMN_EXPRESSION_TOKEN
 } from "../Traits/TraitsClasses/Table/ColumnTraits";
 import TableColumnType, { stringToTableColumnType } from "./TableColumnType";
+const naturalSort = require("javascript-natural-sort");
+naturalSort.insensitive = true;
 
 type TypeHintSet = {
   /** RegEx to match column name */
@@ -155,12 +157,7 @@
    * @param rowIndex row number
    * @param value value to transform
    */
-  mexpColumnValuePairs(
-    rowIndex: number,
-    value: number
-  ): {
-    [key: string]: number | null;
-  } {
+  mexpColumnValuePairs(rowIndex: number, value: number) {
     return this.mexpColumnTokens.reduce<{ [key: string]: number | null }>(
       (pairs, token) => {
         if (token.token !== THIS_COLUMN_EXPRESSION_TOKEN)
diff --color -bur --ex ./lib/Table/TableFeatureInfoStratum.ts ./lib/Table/TableFeatureInfoStratum.ts
--- ./lib/Table/TableFeatureInfoStratum.ts	2024-12-18 14:25:56
+++ ./lib/Table/TableFeatureInfoStratum.ts	2024-11-19 14:44:42
@@ -17,7 +17,7 @@
     makeObservable(this);
   }
 
-  static load(item: TableMixin.Instance): TableFeatureInfoStratum {
+  static load(item: TableMixin.Instance) {
     return new TableFeatureInfoStratum(item);
   }
 
diff --color -bur --ex ./lib/Table/TableLegendStratum.ts ./lib/Table/TableLegendStratum.ts
--- ./lib/Table/TableLegendStratum.ts	2024-12-18 14:25:56
+++ ./lib/Table/TableLegendStratum.ts	2024-11-19 14:44:42
@@ -35,7 +35,7 @@
     ) as this;
   }
 
-  static load(item: TableMixin.Instance): TableAutomaticLegendStratum {
+  static load(item: TableMixin.Instance) {
     return new TableAutomaticLegendStratum(item);
   }
 
diff --color -bur --ex ./lib/Table/createLongitudeLatitudeFeaturePerId.ts ./lib/Table/createLongitudeLatitudeFeaturePerId.ts
--- ./lib/Table/createLongitudeLatitudeFeaturePerId.ts	2024-12-18 14:25:56
+++ ./lib/Table/createLongitudeLatitudeFeaturePerId.ts	2024-11-19 14:44:42
@@ -119,6 +119,8 @@
 
   private allValuesAreTheSame = true;
 
+  constructor() {}
+
   getProperty() {
     if (this.allValuesAreTheSame) {
       return new ConstantPositionProperty(this.values[0]);
@@ -164,7 +166,7 @@
 }
 
 function createFeature(
-  _featureId: string,
+  featureId: string,
   rowIds: number[],
   style: RequiredTableStyle
 ): TerriaFeature {
Only in ./lib/ThirdParty: @mapbox
Only in ./lib/ThirdParty: geojson-vt
Only in ./lib/ThirdParty: html-to-react
Only in ./lib/ThirdParty: javascript-natural-sort
Only in ./lib/ThirdParty: point-in-polygon
Only in ./lib/ThirdParty: react-datepicker
diff --color -bur --ex ./lib/ThirdParty/terriajs-cesium-extra/index.d.ts ./lib/ThirdParty/terriajs-cesium-extra/index.d.ts
--- ./lib/ThirdParty/terriajs-cesium-extra/index.d.ts	2024-12-18 14:25:56
+++ ./lib/ThirdParty/terriajs-cesium-extra/index.d.ts	2024-11-19 14:44:42
@@ -45,8 +45,6 @@
 
 declare module "terriajs-cesium/Source/DataSources/getElement";
 
-declare module "terriajs-cesium/Source/Scene/CameraFlightPath";
-
 // This is a workaround for Cesium's incorrect type declaration for raiseEvent.
 declare module "terriajs-cesium" {
   export interface Event {
diff --color -bur --ex ./lib/Traits/ArrayNestedStrataMap.ts ./lib/Traits/ArrayNestedStrataMap.ts
--- ./lib/Traits/ArrayNestedStrataMap.ts	2024-12-18 14:25:56
+++ ./lib/Traits/ArrayNestedStrataMap.ts	2024-11-19 14:44:42
@@ -25,7 +25,7 @@
   }
 
   clear(): void {
-    this.parentModel.strata.forEach((_value: any, key: string) => {
+    this.parentModel.strata.forEach((value: any, key: string) => {
       this.delete(key);
     });
   }
diff --color -bur --ex ./lib/Traits/Decorators/anyTrait.ts ./lib/Traits/Decorators/anyTrait.ts
--- ./lib/Traits/Decorators/anyTrait.ts	2024-12-18 14:25:56
+++ ./lib/Traits/Decorators/anyTrait.ts	2024-11-19 14:44:42
@@ -22,6 +22,10 @@
 export class AnyTrait extends Trait {
   readonly decoratorForFlattened = computed.struct;
 
+  constructor(id: string, options: AnyTraitOptions, parent: any) {
+    super(id, options, parent);
+  }
+
   getValue(model: BaseModel): any {
     for (const stratum of model.strataTopToBottom.values()) {
       const stratumAny: any = stratum;
@@ -32,11 +36,7 @@
     return undefined;
   }
 
-  fromJson(
-    _model: BaseModel,
-    _stratumName: string,
-    jsonValue: any
-  ): Result<any> {
+  fromJson(model: BaseModel, stratumName: string, jsonValue: any): Result<any> {
     return new Result(jsonValue);
   }
 
diff --color -bur --ex ./lib/Traits/Decorators/primitiveArrayTrait.ts ./lib/Traits/Decorators/primitiveArrayTrait.ts
--- ./lib/Traits/Decorators/primitiveArrayTrait.ts	2024-12-18 14:25:56
+++ ./lib/Traits/Decorators/primitiveArrayTrait.ts	2024-11-19 14:44:42
@@ -49,8 +49,8 @@
   }
 
   fromJson(
-    _model: BaseModel,
-    _stratumName: string,
+    model: BaseModel,
+    stratumName: string,
     jsonValue: any
   ): Result<T[] | undefined> {
     if (!this.isValidJson(jsonValue)) {
diff --color -bur --ex ./lib/Traits/Decorators/primitiveTrait.ts ./lib/Traits/Decorators/primitiveTrait.ts
--- ./lib/Traits/Decorators/primitiveTrait.ts	2024-12-18 14:25:56
+++ ./lib/Traits/Decorators/primitiveTrait.ts	2024-11-19 14:44:42
@@ -47,8 +47,8 @@
   }
 
   fromJson(
-    _model: BaseModel,
-    _stratumName: string,
+    model: BaseModel,
+    stratumName: string,
     jsonValue: any
   ): Result<T | undefined> {
     if (
Only in ./lib/Traits/SearchProviders: NominatimSearchProviderTraits.ts
diff --color -bur --ex ./lib/Traits/SearchProviders/SearchBarTraits.ts ./lib/Traits/SearchProviders/SearchBarTraits.ts
--- ./lib/Traits/SearchProviders/SearchBarTraits.ts	2024-12-18 14:25:56
+++ ./lib/Traits/SearchProviders/SearchBarTraits.ts	2024-11-19 14:44:42
@@ -35,13 +35,6 @@
   })
   minCharacters: number = 3;
 
-  @primitiveTrait({
-    type: "boolean",
-    name: "Show 'Search In Catalog'",
-    description: "Whether to show 'Search In Catalog' in search results"
-  })
-  showSearchInCatalog: boolean = true;
-
   @objectTrait({
     type: RectangleTraits,
     name: "Bounding box limit",
diff --color -bur --ex ./lib/Traits/TraitsClasses/BaseMapTraits.ts ./lib/Traits/TraitsClasses/BaseMapTraits.ts
--- ./lib/Traits/TraitsClasses/BaseMapTraits.ts	2024-12-18 14:25:56
+++ ./lib/Traits/TraitsClasses/BaseMapTraits.ts	2024-11-19 14:44:42
@@ -53,7 +53,7 @@
     description:
       "The id of the baseMap to be used as the base map in data preview. "
   })
-  previewBaseMapId?: string = "basemap-natural-earth-II";
+  previewBaseMapId?: string = "basemap-positron";
 
   @objectArrayTrait<BaseMapTraits>({
     type: BaseMapTraits,
diff --color -bur --ex ./lib/Traits/TraitsClasses/Cesium3dTilesTraits.ts ./lib/Traits/TraitsClasses/Cesium3dTilesTraits.ts
--- ./lib/Traits/TraitsClasses/Cesium3dTilesTraits.ts	2024-12-18 14:25:56
+++ ./lib/Traits/TraitsClasses/Cesium3dTilesTraits.ts	2024-11-19 14:44:42
@@ -156,7 +156,7 @@
     description:
       "The color blend mode decides how per-feature color is blended with color defined in the tileset. Acceptable values are HIGHLIGHT, MIX & REPLACE as defined in the cesium documentation - https://cesium.com/docs/cesiumjs-ref-doc/Cesium3DTileColorBlendMode.html"
   })
-  colorBlendMode = "MIX";
+  colorBlendMode = "HIGHLIGHT";
 
   @primitiveTrait({
     name: "Color blend amount",
diff --color -bur --ex ./lib/Traits/TraitsClasses/KmlCatalogItemTraits.ts ./lib/Traits/TraitsClasses/KmlCatalogItemTraits.ts
--- ./lib/Traits/TraitsClasses/KmlCatalogItemTraits.ts	2024-12-18 15:42:26
+++ ./lib/Traits/TraitsClasses/KmlCatalogItemTraits.ts	2024-11-19 14:44:42
@@ -15,24 +15,8 @@
 ) {
   @primitiveTrait({
     type: "string",
-    name: "KML data source URI.",
-    description:
-      "Overrides the url to use for resolving relative links and other KML network features."
-  })
-  dataSourceUri?: string;
-
-  @primitiveTrait({
-    type: "string",
     name: "kmlString",
     description: "A kml string"
   })
   kmlString?: string;
-
-  @primitiveTrait({
-    type: "boolean",
-    name: "Clamp to Ground",
-    description:
-      "true if we want the geometry features (Polygons, LineStrings and LinearRings) clamped to the ground"
-  })
-  clampToGround: boolean = true;
 }
diff --color -bur --ex ./lib/ViewModels/TerriaViewer.ts ./lib/ViewModels/TerriaViewer.ts
--- ./lib/ViewModels/TerriaViewer.ts	2024-12-18 14:25:56
+++ ./lib/ViewModels/TerriaViewer.ts	2024-11-19 14:44:42
@@ -59,7 +59,7 @@
     return this._baseMap;
   }
 
-  async setBaseMap(baseMap?: MappableMixin.Instance): Promise<void> {
+  async setBaseMap(baseMap?: MappableMixin.Instance) {
     if (!baseMap) return;
 
     const result = await baseMap.loadMapItems();
@@ -228,18 +228,18 @@
   // Pull out attaching logic into it's own step. This allows constructing a TerriaViewer
   // before its UI element is mounted in React to set basemap, items, viewermode
   @action
-  attach(mapContainer?: string | HTMLElement): void {
+  attach(mapContainer?: string | HTMLElement) {
     this.mapContainer = mapContainer;
   }
 
   @action
-  detach(): void {
+  detach() {
     // Detach from a container
     this.mapContainer = undefined;
     this.destroyCurrentViewer();
   }
 
-  destroy(): void {
+  destroy() {
     this.detach();
   }
 
diff --color -bur --ex ./lib/ViewModels/UploadDataTypes.ts ./lib/ViewModels/UploadDataTypes.ts
--- ./lib/ViewModels/UploadDataTypes.ts	2024-12-18 14:25:56
+++ ./lib/ViewModels/UploadDataTypes.ts	2024-11-19 14:44:42
@@ -2,7 +2,7 @@
   default as getDataTypes,
   addOrReplaceLocalFileUploadType,
   addOrReplaceRemoteFileUploadType,
-  type LocalDataType,
-  type RemoteDataType
+  LocalDataType,
+  RemoteDataType
 } from "../Core/getDataType";
 export { registerUrlHandlerForCatalogMemberType } from "../Models/Catalog/CatalogReferences/UrlReference";
diff --color -bur --ex ./lib/ViewModels/updateApplicationOnHashChange.ts ./lib/ViewModels/updateApplicationOnHashChange.ts
--- ./lib/ViewModels/updateApplicationOnHashChange.ts	2024-12-18 14:25:56
+++ ./lib/ViewModels/updateApplicationOnHashChange.ts	2024-11-19 14:44:42
@@ -1,3 +1,5 @@
+"use strict";
+
 import Terria from "../Models/Terria";
 
 /**
diff --color -bur --ex ./lib/ViewModels/updateApplicationOnMessageFromParentWindow.js ./lib/ViewModels/updateApplicationOnMessageFromParentWindow.js
--- ./lib/ViewModels/updateApplicationOnMessageFromParentWindow.js	2024-12-18 14:25:56
+++ ./lib/ViewModels/updateApplicationOnMessageFromParentWindow.js	2024-11-19 14:44:42
@@ -1,7 +1,9 @@
-import { TerriaErrorSeverity } from "../Core/TerriaError";
-import defined from "terriajs-cesium/Source/Core/defined";
+"use strict";
 
-const updateApplicationOnMessageFromParentWindow = function (terria, window) {
+const { TerriaErrorSeverity } = require("../Core/TerriaError");
+
+var defined = require("terriajs-cesium/Source/Core/defined").default;
+var updateApplicationOnMessageFromParentWindow = function (terria, window) {
   var allowOrigin;
 
   window.addEventListener(
@@ -56,4 +58,4 @@
   }
 };
 
-export default updateApplicationOnMessageFromParentWindow;
+module.exports = updateApplicationOnMessageFromParentWindow;
