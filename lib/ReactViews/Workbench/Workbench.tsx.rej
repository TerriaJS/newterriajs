diff a/lib/ReactViews/Workbench/Workbench.tsx b/lib/ReactViews/Workbench/Workbench.tsx	(rejected hunks)
@@ -61,34 +70,63 @@
   render() {
     const { t } = this.props;
     const shouldExpandAll = this.props.terria.workbench.shouldExpandAll;
+
+    // show enable all button if some items are disabled
+    const showEnableAll = this.props.terria.workbench.items
+      .filter((it): it is MappableMixin.Instance =>
+        MappableMixin.isMixedInto(it)
+      )
+      .every((it) => !it.show);
+
     return (
-      <Box column fullWidth styledMinHeight={"0"}>
+      <Box column fullWidth styledMinHeight={"0"} flex="1">
         <BadgeBar
           label={t("workbench.label")}
           badge={this.props.terria.workbench.items.length}
         >
+          {showEnableAll ? (
           <RawButton
-            onClick={this.removeAll}
+              onClick={() => this.enableAll()}
             css={`
               display: flex;
               align-items: center;
-              padding: 0 5px;
-              svg {
-                vertical-align: middle;
-                padding-right: 4px;
-              }
+                padding-left: 5px;
+                min-width: 90px;
+                justify-content: space-evenly;
             `}
           >
             <StyledIcon
-              glyph={Icon.GLYPHS.remove}
+                glyph={Icon.GLYPHS.enable}
               light
               styledWidth={"12px"}
               displayInline
             />
             <TextSpan textLight small>
-              {t("workbench.removeAll")}
+                {t("workbench.enableAll")}
               </TextSpan>
             </RawButton>
+          ) : (
+            <RawButton
+              onClick={() => this.disableAll()}
+              css={`
+                display: flex;
+                align-items: center;
+                padding-left: 5px;
+                min-width: 90px;
+                justify-content: space-evenly;
+              `}
+            >
+              <StyledIcon
+                glyph={Icon.GLYPHS.disable}
+                light
+                styledWidth={"12px"}
+                displayInline
+              />
+              <TextSpan textLight small>
+                {t("workbench.disableAll")}
+              </TextSpan>
+            </RawButton>
+          )}
           {shouldExpandAll ? (
             <RawButton
               onClick={this.expandAll}
